{
  "data": {
    "__schema": {
      "queryType": {
        "name": "Query"
      },
      "mutationType": null,
      "subscriptionType": null,
      "types": [
        {
          "kind": "OBJECT",
          "name": "__Schema",
          "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
          "fields": [
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "types",
              "description": "A list of all types supported by this server.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Type",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "queryType",
              "description": "The type that query operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mutationType",
              "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subscriptionType",
              "description": "If this server support subscription, the type that subscription operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "directives",
              "description": "A list of all directives supported by this server.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Directive",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__Type",
          "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
          "fields": [
            {
              "name": "kind",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "__TypeKind",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fields",
              "description": null,
              "args": [
                {
                  "name": "includeDeprecated",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Field",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "interfaces",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "possibleTypes",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "enumValues",
              "description": null,
              "args": [
                {
                  "name": "includeDeprecated",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__EnumValue",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inputFields",
              "description": null,
              "args": [
                {
                  "name": "includeDeprecated",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ofType",
              "description": null,
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "specifiedByURL",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "__TypeKind",
          "description": "An enum describing what kind of type a given `__Type` is.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "SCALAR",
              "description": "Indicates this type is a scalar.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OBJECT",
              "description": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERFACE",
              "description": "Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNION",
              "description": "Indicates this type is a union. `possibleTypes` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ENUM",
              "description": "Indicates this type is an enum. `enumValues` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INPUT_OBJECT",
              "description": "Indicates this type is an input object. `inputFields` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LIST",
              "description": "Indicates this type is a list. `ofType` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NON_NULL",
              "description": "Indicates this type is a non-null. `ofType` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__Field",
          "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
          "fields": [
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "args",
              "description": null,
              "args": [
                {
                  "name": "includeDeprecated",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeprecated",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deprecationReason",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__InputValue",
          "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
          "fields": [
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "defaultValue",
              "description": "A GraphQL-formatted string representing the default value for this input value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeprecated",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deprecationReason",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__EnumValue",
          "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
          "fields": [
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeprecated",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deprecationReason",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__Directive",
          "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
          "fields": [
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locations",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "__DirectiveLocation",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "args",
              "description": null,
              "args": [
                {
                  "name": "includeDeprecated",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isRepeatable",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "__DirectiveLocation",
          "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "QUERY",
              "description": "Location adjacent to a query operation.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MUTATION",
              "description": "Location adjacent to a mutation operation.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUBSCRIPTION",
              "description": "Location adjacent to a subscription operation.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIELD",
              "description": "Location adjacent to a field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FRAGMENT_DEFINITION",
              "description": "Location adjacent to a fragment definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FRAGMENT_SPREAD",
              "description": "Location adjacent to a fragment spread.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INLINE_FRAGMENT",
              "description": "Location adjacent to an inline fragment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VARIABLE_DEFINITION",
              "description": "Location adjacent to a variable definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCHEMA",
              "description": "Location adjacent to a schema definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCALAR",
              "description": "Location adjacent to a scalar definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OBJECT",
              "description": "Location adjacent to an object type definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIELD_DEFINITION",
              "description": "Location adjacent to a field definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ARGUMENT_DEFINITION",
              "description": "Location adjacent to an argument definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERFACE",
              "description": "Location adjacent to an interface definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNION",
              "description": "Location adjacent to a union definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ENUM",
              "description": "Location adjacent to an enum definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ENUM_VALUE",
              "description": "Location adjacent to an enum value definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INPUT_OBJECT",
              "description": "Location adjacent to an input object type definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INPUT_FIELD_DEFINITION",
              "description": "Location adjacent to an input object field definition.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Int",
          "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Float",
          "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "String",
          "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Boolean",
          "description": "The `Boolean` scalar type represents `true` or `false`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "ID",
          "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Address",
          "description": "Represents a postal address in a country.\nFor more information, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses).",
          "fields": [
            {
              "name": "addressLine1",
              "description": "The first line of the address.\nFields that start with `addressLine` provide the address's most specific\ndetails, like street number, street name, and building name. They do *not*\nprovide less specific details like city, state/province, or country (these\ndetails are provided in other fields).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addressLine2",
              "description": "The second line of the address, if any.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addressLine3",
              "description": "The third line of the address, if any.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "administrativeDistrictLevel1",
              "description": "A civil entity within the address's country. In the US, this is the state.\nFor a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "country",
              "description": "The address's country, in the two-letter format of ISO 3166. For example, `US` or `FR`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "Country",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "countryCode",
              "description": "The address's country, in the two-letter format of ISO 3166. For example, `US` or `FR`.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CountryCode",
                  "ofType": null
                }
              },
              "isDeprecated": true,
              "deprecationReason": "Use `country` instead."
            },
            {
              "name": "locality",
              "description": "The city or town of the address. For a full list of field meanings by country,\nsee [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "postalCode",
              "description": "The address's postal code. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sublocality",
              "description": "A civil region within the address's `locality`, if any.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "AddressFilterInput",
          "description": "Input type used to specify filters on `Address` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "addressLine1",
              "description": "Used to filter on the `addressLine1` field:\n\n> The first line of the address.\n>\n> Fields that start with `addressLine` provide the address's most specific\n> details, like street number, street name, and building name. They do *not*\n> provide less specific details like city, state/province, or country (these\n> details are provided in other fields).\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "addressLine2",
              "description": "Used to filter on the `addressLine2` field:\n\n> The second line of the address, if any.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "addressLine3",
              "description": "Used to filter on the `addressLine3` field:\n\n> The third line of the address, if any.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "administrativeDistrictLevel1",
              "description": "Used to filter on the `administrativeDistrictLevel1` field:\n\n> A civil entity within the address's country. In the US, this is the state.\n> For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses).\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "administrativeDistrictLevel2",
              "description": "Used to filter on the `administrativeDistrictLevel2` field:\n\n> A civil entity within the address's `administrativeDistrictLevel1`.  In the US, this is the county.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "administrativeDistrictLevel3",
              "description": "Used to filter on the `administrativeDistrictLevel3` field:\n\n> A civil entity within the address's `administrativeDistrictLevel2`, if any.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "AddressFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "country",
              "description": "Used to filter on the `country` field:\n\n> The address's country, in the two-letter format of ISO 3166. For example, `US` or `FR`.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CountryFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "firstName",
              "description": "Used to filter on the `firstName` field:\n\n> Optional first name when it's representing recipient.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lastName",
              "description": "Used to filter on the `lastName` field:\n\n> Optional last name when it's representing recipient.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "locality",
              "description": "Used to filter on the `locality` field:\n\n> The city or town of the address. For a full list of field meanings by\ncountry, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses).\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AddressFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "organization",
              "description": "Used to filter on the `organization` field:\n\n> Optional organization name when it's representing recipient.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "postalCode",
              "description": "Used to filter on the `postalCode` field:\n\n> The address's postal code. For a full list of field meanings by country, see [Working with Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses).\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "sublocality",
              "description": "Used to filter on the `sublocality` field:\n\n> A civil region within the address's `locality`, if any.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "sublocality2",
              "description": "Used to filter on the `sublocality2` field:\n\n> A civil region within the address's `sublocality`, if any.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "sublocality3",
              "description": "Used to filter on the `sublocality3` field:\n\n> A civil region within the address's `sublocality2`, if any.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "AfterpayPaymentDetails",
          "description": "Permissions: PAYMENTS_READ\n\nAdditional details about Afterpay payments.",
          "fields": [
            {
              "name": "emailAddress",
              "description": "Email address on the buyer's Afterpay account.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "EmailAddress",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "AfterpayPaymentDetailsFilterInput",
          "description": "Input type used to specify filters on `AfterpayPaymentDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "emailAddress",
              "description": "Used to filter on the `emailAddress` field:\n\n> Email address on the buyer's Afterpay account.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "EmailAddressFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "AggregationCountDetail",
          "description": "Provides detail about an aggregation `count`.",
          "fields": [
            {
              "name": "approximateValue",
              "description": "The (approximate) count of documents in this aggregation bucket.\n\nWhen documents in an aggregation bucket are sourced from multiple shards, the count may be only\napproximate. The `upperBound` indicates the maximum value of the true count, but usually\nthe true count is much closer to this approximate value (which also provides a lower bound on the\ntrue count).\n\nWhen this approximation is known to be exact, the same value will be available from `exactValue`\nand `upperBound`.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "exactValue",
              "description": "The exact count of documents in this aggregation bucket, if an exact value can be determined.\n\nWhen documents in an aggregation bucket are sourced from multiple shards, it may not be possible to\nefficiently determine an exact value. When no exact value can be determined, this field will be `null`.\nThe `approximateValue` field--which will never be `null`--can be used to get an approximation\nfor the count.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "upperBound",
              "description": "An upper bound on how large the true count of documents in this aggregation bucket could be.\n\nWhen documents in an aggregation bucket are sourced from multiple shards, it may not be possible to\nefficiently determine an exact value. The `approximateValue` field provides an approximation,\nand this field puts an upper bound on the true count.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "AirPrintInterfaceComponentDetails",
          "description": "Structured data for an `AirPrint` interface, set for DeviceComponents of type `AIRPRINT_INTERFACE`.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "url",
              "description": "The string representation of the AirPrint URL.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "AppFeeRefundDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of a refund for an application fee on a payment.",
          "fields": [
            {
              "name": "locationId",
              "description": "ID of the location associated with the refund.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "paymentId",
              "description": "ID of the payment associated with the refund.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "AppFeeRefundDetailsFilterInput",
          "description": "Input type used to specify filters on `AppFeeRefundDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "locationId",
              "description": "Used to filter on the `locationId` field:\n\n> ID of the location associated with the refund.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment associated with the refund.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "AppFeeRevenueDetails",
          "description": "Permissions: PAYOUTS_READ\n\nRevenue generated from an application fee on a payment.",
          "fields": [
            {
              "name": "locationId",
              "description": "ID of the location associated with the revenue.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "paymentId",
              "description": "ID of the payment associated with the revenue.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "AppFeeRevenueDetailsFilterInput",
          "description": "Input type used to specify filters on `AppFeeRevenueDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "locationId",
              "description": "Used to filter on the `locationId` field:\n\n> ID of the location associated with the revenue.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment associated with the revenue.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ApplicationComponentDetails",
          "description": "Structured data for an `Application`, set for DeviceComponents of type `APPLICATION`.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "applicationState",
              "description": "The current state of the application.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceApplicationState",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "applicationType",
              "description": "The type of application.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceApplicationType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "applicationVersion",
              "description": "The version of the application.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "applicationVersionText",
              "description": "The version of the application. Indexed for full-text search.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceCode",
              "description": "The device code most recently paired to this device on this application.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceCode",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceProfile",
              "description": "The device profile most recently associated with this device and application.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceProfile",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inactive",
              "description": "Indicates whether the application is inactive on this device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mode",
              "description": "The SuperPOS mode associated with this application.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Mode",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sessionLocation",
              "description": "The location of the session for the application.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "superposEnabled",
              "description": "Indicates whether the application is enabled for SuperPOS on this device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The server generated RFC 3339-formatted value of the most recent update to this application.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "AppointmentSegment",
          "description": "Defines an appointment segment of a booking.\nPermissions: APPOINTMENTS_READ",
          "fields": [
            {
              "name": "anyTeamMember",
              "description": "Whether the customer accepts any team member, instead of a specific one, to serve this segment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "durationMinutes",
              "description": "The time span in minutes of an appointment segment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "intermissionMinutes",
              "description": "Time between the end of this segment and the beginning of the subsequent segment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "resourceIds",
              "description": "The IDs of the seller-accessible resources used for this appointment segment.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "serviceVariationId",
              "description": "The ID of the CatalogItemVariation object representing the service booked in this segment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "serviceVariationVersion",
              "description": "The current version of the item variation representing the service booked in this segment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMemberId",
              "description": "The ID of the TeamMember object representing the team member booked in this segment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ArchivedState",
          "description": "Defines the values for the `archived_state` query expression \nused in [SearchCatalogItems](api-endpoint:Catalog-SearchCatalogItems) \nto return the archived, not archived or either type of catalog items.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ARCHIVED_STATE_NOT_ARCHIVED",
              "description": "Requested items are not archived with the `is_archived` attribute set to `false`.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ARCHIVED_STATE_ARCHIVED",
              "description": "Requested items are archived with the `is_archived` attribute set to `true`.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ARCHIVED_STATE_ALL",
              "description": "Requested items can be archived or not archived.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ArchivedStateFilter",
          "description": "The query filter to return not archived (ARCHIVED_STATE_NOT_ARCHIVED), archived (ARCHIVED_STATE_ARCHIVED), or either type (ARCHIVED_STATE_ALL) of items.",
          "fields": null,
          "inputFields": [
            {
              "name": "state",
              "description": "The archived state we are filtering on.",
              "type": {
                "kind": "ENUM",
                "name": "ArchivedState",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "AUTH_TARGET_TYPE",
          "description": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "MERCHANT",
              "description": "The annotated element must be an ID corresponding to a Merchant.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "AuthTarget",
          "description": "The annotated element must be an ID corresponding to a Merchant",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "MERCHANT",
              "description": "The annotated element must be an ID corresponding to a Merchant.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "AutomaticSavingsDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of any automatic transfer from the payment processing balance to the Square Savings account.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment related to the automatic savings.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payoutId",
              "description": "ID of the payout associated with the automatic savings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "AutomaticSavingsDetailsFilterInput",
          "description": "Input type used to specify filters on `AutomaticSavingsDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment related to the automatic savings.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "payoutId",
              "description": "Used to filter on the `payoutId` field:\n\n> ID of the payout associated with the automatic savings.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "AutomaticSavingsReversedDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of any automatic transfer from the Square Savings account back to the processing balance.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment related to the reversed automatic savings.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payoutId",
              "description": "ID of the payout associated with the reversed automatic savings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "AutomaticSavingsReversedDetailsFilterInput",
          "description": "Input type used to specify filters on `AutomaticSavingsReversedDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment related to the reversed automatic savings.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "payoutId",
              "description": "Used to filter on the `payoutId` field:\n\n> ID of the payout associated with the reversed automatic savings.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Availability",
          "description": "Defines an appointment slot that encapsulates the appointment segments, location and starting time available for booking.\nPermissions: APPOINTMENTS_READ",
          "fields": [
            {
              "name": "appointmentSegments",
              "description": "The list of appointment segments available for booking",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "AppointmentSegment",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the location available for booking.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startAt",
              "description": "The RFC 3339 timestamp specifying the beginning time of the slot available for booking.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "AvailabilityFilter",
          "description": "A query filter to search for buyer-accessible availabilities by.",
          "fields": null,
          "inputFields": [
            {
              "name": "bookingId",
              "description": "The query expression to search for buyer-accessible availabilities for an existing booking by matching the specified `booking_id` value.\nThis is commonly used to reschedule an appointment.\nIf this expression is set, the `location_id` and `segment_filters` expressions cannot be set.",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "endAt",
              "description": "A datetime value in RFC 3339 format indicating when the time range ends.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "locationId",
              "description": "The query expression to search for buyer-accessible availabilities with their location IDs matching the specified location ID.\nThis query expression cannot be set if `booking_id` is set.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "segmentFilters",
              "description": "The query expression to search for buyer-accessible availabilities matching the specified list of segment filters.\nIf the size of the `segment_filters` list is `n`, the search returns availabilities with `n` segments per availability.\n  \nThis query expression cannot be set if `booking_id` is set.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "SegmentFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "startAt",
              "description": "A datetime value in RFC 3339 format indicating when the time range starts.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BalanceFoldersTransferDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of a transfer of funds to a banking folder. In the United States, the\nfolder name is 'Checking Folder'; in Canada, it's 'Balance Folder'.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment associated with this activity.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BalanceFoldersTransferDetailsFilterInput",
          "description": "Input type used to specify filters on `BalanceFoldersTransferDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment associated with this activity.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BalanceFoldersTransferReversedDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of a transfer of funds from a banking folder. In the United States, the\nfolder name is 'Checking Folder'; in Canada, it's 'Balance Folder'.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment associated with this activity.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BalanceFoldersTransferReversedDetailsFilterInput",
          "description": "Input type used to specify filters on `BalanceFoldersTransferReversedDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment associated with this activity.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "BankAccountPaymentAccountOwnershipType",
          "description": "The ownership type of the bank account performing the transfer.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ACCOUNT_TYPE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COMPANY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INDIVIDUAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BankAccountPaymentAccountOwnershipTypeFilterInput",
          "description": "Input type used to specify filters on `BankAccountPaymentAccountOwnershipType` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `BankAccountPaymentAccountOwnershipTypeFilterInput`\ninput because of collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "BankAccountPaymentAccountOwnershipTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "BankAccountPaymentAccountOwnershipTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "BankAccountPaymentAccountOwnershipTypeInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BankAccountPaymentAccountOwnershipTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "BankAccountPaymentAccountOwnershipTypeInput",
          "description": "The ownership type of the bank account performing the transfer.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ACCOUNT_TYPE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COMPANY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INDIVIDUAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BankAccountPaymentAchDetails",
          "description": "Permissions: PAYMENTS_READ\n\nACH-specific details about `BANK_ACCOUNT` type payments with the `transferType` of `ACH`.",
          "fields": [
            {
              "name": "accountNumberSuffix",
              "description": "The last few digits of the bank account number.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "accountType",
              "description": "The type of the bank account performing the transfer. The account type can be `CHECKING`, `SAVINGS`, or `UNKNOWN`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "BankAccountType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "routingNumber",
              "description": "The routing number for the bank account.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BankAccountPaymentAchDetailsFilterInput",
          "description": "Input type used to specify filters on `BankAccountPaymentAchDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "accountNumberSuffix",
              "description": "Used to filter on the `accountNumberSuffix` field:\n\n> The last few digits of the bank account number.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "accountType",
              "description": "Used to filter on the `accountType` field:\n\n> The type of the bank account performing the transfer. The account type can be `CHECKING`, `SAVINGS`, or `UNKNOWN`.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BankAccountTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `BankAccountPaymentAchDetailsFilterInput` input\nbecause of collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "BankAccountPaymentAchDetailsFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "BankAccountPaymentAchDetailsFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BankAccountPaymentAchDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "routingNumber",
              "description": "Used to filter on the `routingNumber` field:\n\n> The routing number for the bank account.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BankAccountPaymentDetails",
          "description": "Permissions: PAYMENTS_READ\n\nAdditional details about BANK_ACCOUNT type payments.",
          "fields": [
            {
              "name": "accountOwnershipType",
              "description": "The ownership type of the bank account performing the transfer.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "BankAccountPaymentAccountOwnershipType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "achDetails",
              "description": "ACH-specific information about the transfer. The information is only populated if the `transferType` is `ACH`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "BankAccountPaymentAchDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bankName",
              "description": "The name of the bank associated with the bank account.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "country",
              "description": "The two-letter ISO code representing the country the bank account is located in.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "Country",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "errors",
              "description": "Information about errors encountered during the request.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Error",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fingerprint",
              "description": "Uniquely identifies the bank account for this seller and can be used to\ndetermine if payments are from the same bank account.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "statementDescription",
              "description": "The statement description as sent to the bank.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "transferType",
              "description": "The type of the bank transfer.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "BankAccountPaymentTransferType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BankAccountPaymentDetailsFilterInput",
          "description": "Input type used to specify filters on `BankAccountPaymentDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "accountOwnershipType",
              "description": "Used to filter on the `accountOwnershipType` field:\n\n> The ownership type of the bank account performing the transfer.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BankAccountPaymentAccountOwnershipTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "achDetails",
              "description": "Used to filter on the `achDetails` field:\n\n> ACH-specific information about the transfer. The information is only populated if the `transferType` is `ACH`.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BankAccountPaymentAchDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "bankName",
              "description": "Used to filter on the `bankName` field:\n\n> The name of the bank associated with the bank account.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "country",
              "description": "Used to filter on the `country` field:\n\n> The two-letter ISO code representing the country the bank account is located in.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CountryFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "errors",
              "description": "Used to filter on the `errors` field:\n\n> Information about errors encountered during the request.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ErrorFieldsListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "fingerprint",
              "description": "Used to filter on the `fingerprint` field:\n\n> Uniquely identifies the bank account for this seller and can be used to\ndetermine if payments are from the same bank account.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "statementDescription",
              "description": "Used to filter on the `statementDescription` field:\n\n> The statement description as sent to the bank.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "transferType",
              "description": "Used to filter on the `transferType` field:\n\n> The type of the bank transfer.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BankAccountPaymentTransferTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "BankAccountPaymentTransferType",
          "description": "The type of the bank transfer.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ACH",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OPEN_BANKING",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BankAccountPaymentTransferTypeFilterInput",
          "description": "Input type used to specify filters on `BankAccountPaymentTransferType` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `BankAccountPaymentTransferTypeFilterInput` input\nbecause of collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "BankAccountPaymentTransferTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "BankAccountPaymentTransferTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "BankAccountPaymentTransferTypeInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BankAccountPaymentTransferTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "BankAccountPaymentTransferTypeInput",
          "description": "The type of the bank transfer.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ACH",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OPEN_BANKING",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "BankAccountType",
          "description": "Indicates the financial purpose of the bank account.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "BUSINESS_CHECKING",
              "description": "An account at a financial institution against which checks can be\ndrawn specifically for business purposes (non-personal use).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHECKING",
              "description": "An account at a financial institution against which checks can be\ndrawn by the account depositor.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVESTMENT",
              "description": "An account at a financial institution that contains a deposit of funds\nand/or securities.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER",
              "description": "An account at a financial institution which cannot be described by the\nother types.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SAVINGS",
              "description": "An account at a financial institution that pays interest but cannot be\nused directly as money in the narrow sense of a medium of exchange.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN",
              "description": "Reserved value for unknown.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BankAccountTypeFilterInput",
          "description": "Input type used to specify filters on `BankAccountType` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `BankAccountTypeFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "BankAccountTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "BankAccountTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "BankAccountTypeInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BankAccountTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "BankAccountTypeInput",
          "description": "Indicates the financial purpose of the bank account.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "BUSINESS_CHECKING",
              "description": "An account at a financial institution against which checks can be\ndrawn specifically for business purposes (non-personal use).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHECKING",
              "description": "An account at a financial institution against which checks can be\ndrawn by the account depositor.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVESTMENT",
              "description": "An account at a financial institution that contains a deposit of funds\nand/or securities.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER",
              "description": "An account at a financial institution which cannot be described by the\nother types.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SAVINGS",
              "description": "An account at a financial institution that pays interest but cannot be\nused directly as money in the narrow sense of a medium of exchange.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN",
              "description": "Reserved value for unknown.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BarcodeScannerComponentDetails",
          "description": "Structured data for `Barcode Scanner` peripheral device details, set for DeviceComponents of type `BARCODE_SCANNER`.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "supportsTwoDimensionalCodes",
              "description": "Indicates the capabilities of the barcode scanner.\nIf true, the scanner supports both 1D and 2D codes. If false, the scanner supports only 1D codes.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BarcodeScannerComponentDetailsAggregatedValues",
          "description": "Type used to perform aggregation computations on `BarcodeScannerComponentDetails` fields.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "supportsTwoDimensionalCodes",
              "description": "Computed aggregate values for the `supportsTwoDimensionalCodes` field:\n\n> Indicates the capabilities of the barcode scanner.\n> If true, the scanner supports both 1D and 2D codes. If false, the scanner supports only 1D codes.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BarcodeScannerComponentDetailsFilterInput",
          "description": "Input type used to specify filters on `BarcodeScannerComponentDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `BarcodeScannerComponentDetailsFilterInput` input\nbecause of collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "BarcodeScannerComponentDetailsFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "BarcodeScannerComponentDetailsFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BarcodeScannerComponentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "supportsTwoDimensionalCodes",
              "description": "Used to filter on the `supportsTwoDimensionalCodes` field:\n\n> Indicates the capabilities of the barcode scanner.\n> If true, the scanner supports both 1D and 2D codes. If false, the scanner supports only 1D codes.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BooleanFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BarcodeScannerComponentDetailsGroupedBy",
          "description": "Type used to specify the `BarcodeScannerComponentDetails` fields to group by for aggregations.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "supportsTwoDimensionalCodes",
              "description": "The `supportsTwoDimensionalCodes` field value for this group:\n\n> Indicates the capabilities of the barcode scanner.\n> If true, the scanner supports both 1D and 2D codes. If false, the scanner supports only 1D codes.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BasicBooleanFilter",
          "description": "Input type used to specify filters on `Boolean` fields.",
          "fields": null,
          "inputFields": [
            {
              "name": "equalTo",
              "description": "Matches records where the the field value is equal to the provided value.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BasicCurrencyFilter",
          "description": "Input type used to specify filters on `Currency` fields.",
          "fields": null,
          "inputFields": [
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "CurrencyInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BasicDateTimeFilter",
          "description": "Input type used to specify filters on `DateTime` fields.",
          "fields": null,
          "inputFields": [
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "DateTime",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "gt",
              "description": "Matches records where the the field value is greater than (>) the provided value.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "gte",
              "description": "Matches records where the the field value is greater than or equal to (>=) the provided value.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lt",
              "description": "Matches records where the the field value is less than (<) the provided value.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lte",
              "description": "Matches records where the the field value is less than or equal to (<=) the provided value.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BasicIDFilter",
          "description": "Input type used to specify filters on `ID` fields.",
          "fields": null,
          "inputFields": [
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BasicIDFilterInput",
          "description": "Input type used to specify filters on `ID` fields.",
          "fields": null,
          "inputFields": [
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BasicIntFilter",
          "description": "Input type used to specify filters on `Int` fields.",
          "fields": null,
          "inputFields": [
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "gt",
              "description": "Matches records where the the field value is greater than (>) the provided value.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "gte",
              "description": "Matches records where the the field value is greater than or equal to (>=) the provided value.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lt",
              "description": "Matches records where the the field value is less than (<) the provided value.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lte",
              "description": "Matches records where the the field value is less than or equal to (<=) the provided value.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BasicJsonSafeLongFilter",
          "description": "Input type used to specify filters on `JsonSafeLong` fields.",
          "fields": null,
          "inputFields": [
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "JsonSafeLong",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "gt",
              "description": "Matches records where the the field value is greater than (>) the provided value.",
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "gte",
              "description": "Matches records where the the field value is greater than or equal to (>=) the provided value.",
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lt",
              "description": "Matches records where the the field value is less than (<) the provided value.",
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lte",
              "description": "Matches records where the the field value is less than or equal to (<=) the provided value.",
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BasicMoneyFilter",
          "description": "Input type used to specify filters on `Money` fields.",
          "fields": null,
          "inputFields": [
            {
              "name": "amount",
              "description": "Used to filter on the `amount` field:\n\n> The amount of money, in the smallest denomination of the currency\n> indicated by `currency`. For example, when `currency` is `USD`, `amount` is\n> in cents. Monetary amounts can be positive or negative. See the specific\n> field description to determine the meaning of the sign in a particular case.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicJsonSafeLongFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "currency",
              "description": "Used to filter on the `currency` field:\n\n> The type of currency, in __ISO 4217 format__. For example, the currency\n> code for US dollars is `USD`.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicCurrencyFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BasicStringFilter",
          "description": "Input type used to specify filters on `String` fields.",
          "fields": null,
          "inputFields": [
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BasicTextFilter",
          "description": "A basic text filter",
          "fields": null,
          "inputFields": [
            {
              "name": "value",
              "description": "Matches records that contain the specified value.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BatteryComponentDetails",
          "description": "Structured data for a `Battery`, set for DeviceComponents of type `BATTERY`.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "externalPower",
              "description": "The status of external power.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceExternalPower",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "visiblePercent",
              "description": "The battery charge percentage as displayed on the device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BluetoothInterfaceComponentDetails",
          "description": "Structured data for a `Bluetooth` interface, set for DeviceComponents of type `BLUETOOTH_INTERFACE`.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "bluetoothSignalStrength",
              "description": "A representation of signal strength of the Bluetooth connection.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceSignalStrengthMeasurement",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "macAddress",
              "description": "The MAC address of the peripheral device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Booking",
          "description": "Represents a booking as a time-bound service contract for a seller's staff member to provide a specified service\nat a given location to a requesting customer in one or more appointment segments.\nPermissions: APPOINTMENTS_READ",
          "fields": [
            {
              "name": "address",
              "description": "Stores a customer address if the location type is `CUSTOMER_LOCATION`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Address",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "allDay",
              "description": "Whether the booking is of a full business day.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appointmentSegments",
              "description": "A list of appointment segments for this booking.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "AppointmentSegment",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The RFC 3339 timestamp specifying the creation time of this booking.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "creatorDetails",
              "description": "Information about the booking creator.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "BookingCreatorDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customer",
              "description": "The ID of the Customer object representing the customer receiving the booked service.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Customer",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customerNote",
              "description": "The free-text field for the customer to supply notes about the booking. For example, the note can be preferences that cannot be expressed by supported attributes of a relevant CatalogObject instance.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "A unique ID of this object representing a booking.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the Location object representing the location where the booked service is provided. Once set when the booking is created, its value cannot be changed.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locationType",
              "description": "The type of location where the booking is held.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "BusinessAppointmentSettingsBookingLocationType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sellerNote",
              "description": "The free-text field for the seller to supply notes about the booking. For example, the note can be preferences that cannot be expressed by supported attributes of a specific CatalogObject instance.\nThis field should not be visible to customers.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "source",
              "description": "The source of the booking.\nAccess to this field requires seller-level permissions.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "BookingBookingSource",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startAt",
              "description": "The RFC 3339 timestamp specifying the starting time of this booking.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "The status of the booking, describing where the booking stands with respect to the booking state machine.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "BookingStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "transitionTimeMinutes",
              "description": "Additional time at the end of a booking.\nApplications should not make this field visible to customers of a seller.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The RFC 3339 timestamp specifying the most recent update time of this booking.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The revision number for the booking used for optimistic concurrency.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BookingAvailabilityConnection",
          "description": "A list of availabilities for booking.\nPermissions:APPOINTMENTS_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of availabilities for booking.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Availability",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "BookingBookingSource",
          "description": "Supported sources a booking was created from.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "API",
              "description": "The booking was created by a seller or a buyer from the Square Bookings API.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIRST_PARTY_BUYER",
              "description": "The booking was created by a buyer from a Square Appointments application, such as Square Online Booking Site.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIRST_PARTY_MERCHANT",
              "description": "The booking was created by a seller from a Square Appointments application, such as the Square Appointments Dashboard or a Square Appointments mobile app.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "THIRD_PARTY_BUYER",
              "description": "The booking was created by a buyer created from a third-party application.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BookingConnection",
          "description": "A list of bookings.\nPermissions:APPOINTMENTS_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of Booking.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Booking",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BookingCreatorDetails",
          "description": "Information about a booking creator.\nPermissions: APPOINTMENTS_READ",
          "fields": [
            {
              "name": "creatorType",
              "description": "The seller-accessible type of the creator of the booking.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "BookingCreatorDetailsCreatorType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customer",
              "description": "The ID of the customer who created the booking, when the booking creator is of the `CUSTOMER` type.\nAccess to this field requires seller-level permissions.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Customer",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMemberId",
              "description": "The ID of the team member who created the booking, when the booking creator is of the `TEAM_MEMBER` type.\nAccess to this field requires seller-level permissions.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "BookingCreatorDetailsCreatorType",
          "description": "Supported types of a booking creator.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CUSTOMER",
              "description": "The creator is of the buyer type.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TEAM_MEMBER",
              "description": "The creator is of the seller type.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BookingFilter",
          "description": "Represents a set of query expressions (filters) to narrow the scope of targeted bookings returned\nPermissions:APPOINTMENTS_READ",
          "fields": null,
          "inputFields": [
            {
              "name": "bookingId",
              "description": "A non-empty list of Booking IDs specifying bookings to retrieve.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "customerId",
              "description": "The customer for whom to retrieve bookings. If this is not set, bookings for all customers are retrieved.",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "locationId",
              "description": "The location for which to retrieve bookings. If this is not set, all locations' bookings are retrieved.",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "The Square-assigned ID of the merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "startAtMax",
              "description": "The RFC 3339 timestamp specifying the latest of the start time. If this is not set, the time of 31 days after start_at_min is used.\n\nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n\nUTC: 2020-01-26T02:25:34Z\n\nPacific Standard Time with UTC offset: 2020-01-25T18:25:34-08:00",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "startAtMin",
              "description": "The RFC 3339 timestamp specifying the earliest of the start time. If this is not set, the current time is used.\n\nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n\nUTC: 2020-01-26T02:25:34Z\n\nPacific Standard Time with UTC offset: 2020-01-25T18:25:34-08:00",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "teamMemberId",
              "description": "The team member for whom to retrieve bookings. If this is not set, bookings of all members are retrieved.",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "BookingStatus",
          "description": "Supported booking statuses.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ACCEPTED",
              "description": "An accepted booking agreed to or accepted by the seller.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CANCELLED_BY_CUSTOMER",
              "description": "A customer-cancelled booking. It is visible to both the seller and the customer.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CANCELLED_BY_SELLER",
              "description": "A seller-cancelled booking. It is visible to both the seller and the customer.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DECLINED",
              "description": "A declined booking. It had once been pending, but was then declined by the seller.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NO_SHOW",
              "description": "A no-show booking. The booking was accepted at one time, but have now been marked as a no-show by\nthe seller because the client either missed the booking or cancelled it without enough notice.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PENDING",
              "description": "An unaccepted booking. It is visible to both sellers and customers.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BooleanFilterInput",
          "description": "Input type used to specify filters on `Boolean` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "BooleanFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BooleanFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BooleanListElementFilterInput",
          "description": "Input type used to specify filters on elements of a `[Boolean]` field.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `BooleanListElementFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "BooleanListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "BooleanListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BooleanListFilterInput",
          "description": "Input type used to specify filters on `[Boolean]` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `BooleanListFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "BooleanListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "BooleanListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anySatisfy",
              "description": "Matches records where any of the list elements match the provided sub-filter.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BooleanListElementFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BooleanListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Break",
          "description": "A record of a team member's break on a timecard.\nPermissions: TIMECARDS_SETTINGS_READ",
          "fields": [
            {
              "name": "breakType",
              "description": "The BreakType that this break was templated on.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "BreakType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "endAt",
              "description": "RFC 3339; follows the same timezone information as the timecard. Precision up to\nthe minute is respected; seconds are truncated.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "expectedDuration",
              "description": "Format: RFC-3339 P[n]Y[n]M[n]DT[n]H[n]M[n]S. The expected length of\nthe break.\n  \nExample for break expected duration of 15 minutes: PT15M",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Duration",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The UUID for this object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isPaid",
              "description": "Whether this break counts towards time worked for compensation\npurposes.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "A human-readable name.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startAt",
              "description": "RFC 3339; follows the same timezone information as the timecard. Precision up to\nthe minute is respected; seconds are truncated.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BreakType",
          "description": "A template for a type of break that can be added to a\ntimecard, including the expected duration and paid status.\nPermissions: TIMECARDS_SETTINGS_READ",
          "fields": [
            {
              "name": "breakName",
              "description": "A human-readable name for this type of break. The name is displayed to\nteam members in Square products.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "A read-only timestamp in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "expectedDuration",
              "description": "Format: RFC-3339 P[n]Y[n]M[n]DT[n]H[n]M[n]S. The expected length of\nthis break. Precision less than minutes is truncated.\n  \nExample for break expected duration of 15 minutes: PT15M",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Duration",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The UUID for this object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isPaid",
              "description": "Whether this break counts towards time worked for compensation\npurposes.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the business location this type of break applies to.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "A read-only timestamp in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "Used for resolving concurrency issues. The request fails if the version\nprovided does not match the server version at the time of the request. If a value is not\nprovided, Square's servers execute a \"blind\" write; potentially\noverwriting another writer's data.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BreakTypeConnection",
          "description": "A list of Breaks.\n\nPermissions:TIMECARDS_SETTINGS_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of break types",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "BreakType",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BreakTypeFilter",
          "description": "BreakTypeFilter is used for filtering a query with BreakType",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Fetch break types for the specified ids.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "locationId",
              "description": "Fetch break types for the specified location.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "Fetch break types for the specified merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BusinessAppointmentSettings",
          "description": "The service appointment settings, including where and how the service is provided.\nPermissions: APPOINTMENTS_READ",
          "fields": [
            {
              "name": "alignmentTime",
              "description": "The time unit of the service duration for bookings.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "BusinessAppointmentSettingsAlignmentTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "anyTeamMemberBookingEnabled",
              "description": "Indicates whether a customer can choose from all available time slots and have a staff member assigned\nautomatically (`true`) or not (`false`).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cancellationFeeMoney",
              "description": "The flat-fee amount charged for a no-show booking.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cancellationPolicy",
              "description": "The cancellation policy adopted by the seller.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "BusinessAppointmentSettingsCancellationPolicy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cancellationPolicyText",
              "description": "The free-form text of the seller's cancellation policy.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cancellationWindowSeconds",
              "description": "The cut-off time in seconds for allowing clients to cancel or reschedule an appointment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locationTypes",
              "description": "Types of the location allowed for bookings.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "BusinessAppointmentSettingsBookingLocationType",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "maxAppointmentsPerDayLimit",
              "description": "The maximum number of daily appointments per team member or per location.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "maxAppointmentsPerDayLimitType",
              "description": "Indicates whether the daily appointment limit applies to team members or to\nbusiness locations.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "BusinessAppointmentSettingsMaxAppointmentsPerDayLimitType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "maxBookingLeadTimeSeconds",
              "description": "The maximum lead time in seconds before a service can be booked. A booking must be created at most this amount of time before its starting time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "minBookingLeadTimeSeconds",
              "description": "The minimum lead time in seconds before a service can be booked. A booking must be created at least this amount of time before its starting time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "multipleServiceBookingEnabled",
              "description": "Indicates whether a customer can book multiple services in a single online booking.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "skipBookingFlowStaffSelection",
              "description": "Indicates whether customers has an assigned staff member (`true`) or can select s staff member of their choice (`false`).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "BusinessAppointmentSettingsAlignmentTime",
          "description": "Time units of a service duration for bookings.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "HALF_HOURLY",
              "description": "The service duration unit is a 30-minute interval. Bookings can be scheduled every half hour.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HOURLY",
              "description": "The service duration unit is a 60-minute interval. Bookings can be scheduled every hour.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "QUARTER_HOURLY",
              "description": "The service duration unit is a 15-minute interval. Bookings can be scheduled every quarter hour.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SERVICE_DURATION",
              "description": "The service duration unit is one visit of a fixed time interval specified by the seller.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "BusinessAppointmentSettingsBookingLocationType",
          "description": "Supported types of location where service is provided.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "BUSINESS_LOCATION",
              "description": "The service is provided at a seller location.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUSTOMER_LOCATION",
              "description": "The service is provided at a customer location.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PHONE",
              "description": "The service is provided over the phone.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "BusinessAppointmentSettingsCancellationPolicy",
          "description": "The category of the seller’s cancellation policy.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CANCELLATION_TREATED_AS_NO_SHOW",
              "description": "Cancellations are treated as no shows and may incur a fee as specified by `cancellation_fee_money`.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUSTOM_POLICY",
              "description": "Cancellations follow the seller-specified policy that is described in free-form text and not enforced automatically by Square.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "BusinessAppointmentSettingsMaxAppointmentsPerDayLimitType",
          "description": "Types of daily appointment limits.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "PER_LOCATION",
              "description": "The maximum number of daily appointments is set on a per location basis.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PER_TEAM_MEMBER",
              "description": "The maximum number of daily appointments is set on a per team member basis.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BusinessBookingProfile",
          "description": "A seller's business booking profile, including booking policy, appointment settings, etc.\nPermissions: APPOINTMENTS_BUSINESS_SETTINGS_READ",
          "fields": [
            {
              "name": "allowUserCancel",
              "description": "Indicates whether customers can cancel or reschedule their own bookings (`true`) or not (`false`).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bookingEnabled",
              "description": "Indicates whether the seller is open for booking.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bookingPolicy",
              "description": "The policy for the seller to automatically accept booking requests (`ACCEPT_ALL`) or not (`REQUIRES_ACCEPTANCE`).",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "BusinessBookingProfileBookingPolicy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "businessAppointmentSettings",
              "description": "Settings for appointment-type bookings.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "BusinessAppointmentSettings",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The RFC 3339 timestamp specifying the booking's creation time.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customerTimezoneChoice",
              "description": "The choice of customer's time zone information of a booking.\nThe Square online booking site and all notifications to customers uses either the seller location’s time zone\nor the time zone the customer chooses at booking.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "BusinessBookingProfileCustomerTimezoneChoice",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sellerId",
              "description": "The ID of the seller, obtainable using the Merchants API.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "supportSellerLevelWrites",
              "description": "Indicates whether the seller's subscription to Square Appointments supports creating, updating or canceling an appointment through the API (`true`) or not (`false`) using seller permission.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "BusinessBookingProfileBookingPolicy",
          "description": "Policies for accepting bookings.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ACCEPT_ALL",
              "description": "The seller accepts all booking requests automatically.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REQUIRES_ACCEPTANCE",
              "description": "The seller must accept requests to complete bookings.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BusinessBookingProfileConnection",
          "description": "Retrieves a seller's booking profile.\nPermissions:APPOINTMENTS_BUSINESS_SETTINGS_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "Lists location booking profiles of a seller.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "BusinessBookingProfile",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "BusinessBookingProfileCustomerTimezoneChoice",
          "description": "Choices of customer-facing time zone used for bookings.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "BUSINESS_LOCATION_TIMEZONE",
              "description": "Use the time zone of the business location for bookings.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUSTOMER_CHOICE",
              "description": "Use the customer-chosen time zone for bookings.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BusinessBookingProfileFilter",
          "description": "Represents a set of query expressions (filters) to narrow the scope of targeted business booking profile\nreturned\nPermissions:APPOINTMENTS_BUSINESS_SETTINGS_READ",
          "fields": null,
          "inputFields": [
            {
              "name": "merchantId",
              "description": "The Square-assigned ID of the merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BusinessHours",
          "description": "The hours of operation for a business location.\n\nPermissions:MERCHANT_PROFILE_READ",
          "fields": [
            {
              "name": "periods",
              "description": "The list of time periods during which the business is open. There can be at most 10 periods per day.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "BusinessHoursPeriod",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BusinessHoursPeriod",
          "description": "A period of time during which a business location is open.\n\nPermissions:MERCHANT_PROFILE_READ",
          "fields": [
            {
              "name": "dayOfWeek",
              "description": "The day of week for this time period.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DayOfWeek",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "endLocalTime",
              "description": "The end time of a business hours period, specified in local time using partial-time RFC 3339 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startLocalTime",
              "description": "The start time of a business hours period, specified in local time using partial-time RFC 3339 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "BuyNowPayLaterPaymentBrand",
          "description": "The brand used for a Buy Now Pay Later payment.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AFTERPAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLEARPAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BuyNowPayLaterPaymentBrandFilterInput",
          "description": "Input type used to specify filters on `BuyNowPayLaterPaymentBrand` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `BuyNowPayLaterPaymentBrandFilterInput` input because\nof collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "BuyNowPayLaterPaymentBrandFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "BuyNowPayLaterPaymentBrandFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "BuyNowPayLaterPaymentBrandInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BuyNowPayLaterPaymentBrandFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "BuyNowPayLaterPaymentBrandInput",
          "description": "The brand used for a Buy Now Pay Later payment.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AFTERPAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLEARPAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "BuyNowPayLaterPaymentDetails",
          "description": "Permissions: PAYMENTS_READ\n\nAdditional details about a Buy Now Pay Later payment type.",
          "fields": [
            {
              "name": "afterpayDetails",
              "description": "Details about an Afterpay payment. These details are only populated if the `brand` is `AFTERPAY`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "AfterpayPaymentDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "brand",
              "description": "The brand used for the Buy Now Pay Later payment.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "BuyNowPayLaterPaymentBrand",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clearpayDetails",
              "description": "Details about a Clearpay payment. These details are only populated if the `brand` is `CLEARPAY`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ClearpayPaymentDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BuyNowPayLaterPaymentDetailsFilterInput",
          "description": "Input type used to specify filters on `BuyNowPayLaterPaymentDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "afterpayDetails",
              "description": "Used to filter on the `afterpayDetails` field:\n\n> Details about an Afterpay payment. These details are only populated if the `brand` is `AFTERPAY`.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AfterpayPaymentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "brand",
              "description": "Used to filter on the `brand` field:\n\n> The brand used for the Buy Now Pay Later payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BuyNowPayLaterPaymentBrandFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "clearpayDetails",
              "description": "Used to filter on the `clearpayDetails` field:\n\n> Details about a Clearpay payment. These details are only populated if the `brand` is `CLEARPAY`.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ClearpayPaymentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Card",
          "description": "Represents the payment details of a card to be used for payments. These details\nare determined by the payment token generated by Web Payments SDK.\n\nPermissions: PAYMENTS_READ.",
          "fields": [
            {
              "name": "billingAddress",
              "description": "The billing address for this card.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Address",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bin",
              "description": "The first six digits of the card number, known as the Bank Identification\nNumber (BIN). Only the Payments API returns this field.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardBrand",
              "description": "The card's brand.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CardBrand",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardCoBrand",
              "description": "The card's co-brand if available. For example, an Afterpay virtual card would have a co-brand of AFTERPAY.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CardCoBrand",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardType",
              "description": "The type of the card.\nThe Card object includes this field only in response to Payments API calls.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CardType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardholderName",
              "description": "The name of the cardholder.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "expMonth",
              "description": "The expiration month of the associated card as an integer, generally between 1\nand 12. Can be outside that normally valid range on failed payments--we just\nrecord this value as we received it.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "expYear",
              "description": "The four-digit year of the card's expiration date.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fingerprint",
              "description": "Intended as a Square-assigned identifier, based\non the card number, to identify the card across multiple locations within a\nsingle application.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "Unique ID for this card. Generated by Square.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "last4",
              "description": "The last 4 digits of the card number.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "prepaidType",
              "description": "Indicates whether the Card is prepaid or not.\nThe Card object includes this field only in response to Payments API calls.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CardPrepaidType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardBrand",
          "description": "Indicates a card's brand, such as `VISA` or `MASTERCARD`.\nThis enumeration is essentially the union of 3 separate protobuf enums:\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\nThis enum is what we present to external clients in our `/v2/payments` API.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\nThis enum is what is used from a [`CardFilter`](https://prototype.sqprod.co/#/docs/squareup.payments.search.Filter.CardFilter#card_brand)\nthat is accepted by Spot's Search API. It includes 3 extra enum values not present on the `Card.Brand` filter\nand also has an alternate name for 3 enum values.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.\nThis enum is what is used within a [`CardTransaction`'s](https://prototype.sqprod.co/#/docs/squareup.esperanto.model.CardTransaction)\n[`Tender`](https://prototype.sqprod.co/#/docs/squareup.esperanto.model.Tender) on a\n[`PaymentRecord`](https://prototype.sqprod.co/#/docs/squareup.esperanto.model.PaymentRecord#card_transaction) within Spot.\nIt is just like `CardTenderType` (including the 3 extra values, and 3 renamed\nvalues) but also includes 1 additional value.\nIdeally we would only have a single source enum here. However, to handle the full dataset and all use cases\nwe need to cover, we have defined this as a union of these 3 enums. When an enum value exists on both the\npublic `Card.Brand` enum and the internal enums, but with a different name, we have chosen the public name.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AFTERPAY",
              "description": "Comes from the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ALIPAY",
              "description": "Comes from the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AMERICAN_EXPRESS",
              "description": "Present on all 3 of the source enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AU_PAY",
              "description": "Comes from the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BALANCE",
              "description": "Comes from the internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) or\ninternal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enums.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CASH_APP",
              "description": "Comes from the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHINA_UNIONPAY",
              "description": "Comes from the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n\nAlso known as `UNIONPAY` on the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DISCOVER",
              "description": "Present on all 3 of the source enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DISCOVER_DINERS",
              "description": "Present on all 3 of the source enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "D_BARAI",
              "description": "Comes from the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EBT",
              "description": "Present on all 3 of the source enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EFTPOS",
              "description": "Present on all 3 of the source enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FELICA",
              "description": "Present on all 3 of the source enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERAC",
              "description": "Present on all 3 of the source enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JCB",
              "description": "Present on all 3 of the source enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MASTERCARD",
              "description": "Comes from the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n\nAlso known as `MASTER_CARD` on the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MERPAY",
              "description": "Comes from the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER_BRAND",
              "description": "Comes from the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n\nAlso known as `UNKNOWN` on the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYPAY",
              "description": "Comes from the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RAKUTEN_PAY",
              "description": "Comes from the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_ACCOUNT_BALANCE",
              "description": "Comes from the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_CAPITAL_CARD",
              "description": "Present on all 3 of the source enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_GIFT_CARD",
              "description": "Comes from the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n\nAlso known as `SQUARE_GIFT_CARD_V2` on the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VISA",
              "description": "Present on all 3 of the source enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WECHAT_PAY",
              "description": "Comes from the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CardBrandFilterInput",
          "description": "Input type used to specify filters on `CardBrand` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CardBrandFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardBrandFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardBrandFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CardBrandInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CardBrandFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardBrandInput",
          "description": "Indicates a card's brand, such as `VISA` or `MASTERCARD`.\n\nThis enumeration is essentially the union of 3 separate protobuf enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n  This enum is what we present to external clients in our `/v2/payments` API.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n  This enum is what is used from a [`CardFilter`](https://prototype.sqprod.co/#/docs/squareup.payments.search.Filter.CardFilter#card_brand)\n  that is accepted by Spot's Search API. It includes 3 extra enum values not present on the `Card.Brand` filter\n  and also has an alternate name for 3 enum values.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.\n  This enum is what is used within a [`CardTransaction`'s](https://prototype.sqprod.co/#/docs/squareup.esperanto.model.CardTransaction)\n  [`Tender`](https://prototype.sqprod.co/#/docs/squareup.esperanto.model.Tender) on a\n  [`PaymentRecord`](https://prototype.sqprod.co/#/docs/squareup.esperanto.model.PaymentRecord#card_transaction) within Spot.\n  It is just like `CardTenderType` (including the 3 extra values, and 3 renamed\nvalues) but also includes 1 additional value.\n\nIdeally we would only have a single source enum here. However, to handle the full dataset and all use cases\nwe need to cover, we have defined this as a union of these 3 enums. When an enum value exists on both the\npublic `Card.Brand` enum and the internal enums, but with a different name, we have chosen the public name.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AFTERPAY",
              "description": "Comes from the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ALIPAY",
              "description": "Comes from the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AMERICAN_EXPRESS",
              "description": "Present on all 3 of the source enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AU_PAY",
              "description": "Comes from the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BALANCE",
              "description": "Comes from the internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) or\ninternal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enums.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CASH_APP",
              "description": "Comes from the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHINA_UNIONPAY",
              "description": "Comes from the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n\nAlso known as `UNIONPAY` on the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DISCOVER",
              "description": "Present on all 3 of the source enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DISCOVER_DINERS",
              "description": "Present on all 3 of the source enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "D_BARAI",
              "description": "Comes from the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EBT",
              "description": "Present on all 3 of the source enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EFTPOS",
              "description": "Present on all 3 of the source enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FELICA",
              "description": "Present on all 3 of the source enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERAC",
              "description": "Present on all 3 of the source enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JCB",
              "description": "Present on all 3 of the source enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MASTERCARD",
              "description": "Comes from the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n\nAlso known as `MASTER_CARD` on the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MERPAY",
              "description": "Comes from the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER_BRAND",
              "description": "Comes from the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n\nAlso known as `UNKNOWN` on the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYPAY",
              "description": "Comes from the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RAKUTEN_PAY",
              "description": "Comes from the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_ACCOUNT_BALANCE",
              "description": "Comes from the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_CAPITAL_CARD",
              "description": "Present on all 3 of the source enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_GIFT_CARD",
              "description": "Comes from the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n\nAlso known as `SQUARE_GIFT_CARD_V2` on the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VISA",
              "description": "Present on all 3 of the source enums:\n\n- The public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.\n- The internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType) enum.\n- The internal [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WECHAT_PAY",
              "description": "Comes from the internal [`CardTenderType`](https://prototype.sqprod.co/#/docs/squareup.common.tender.CardTenderType)\nand [`InstrumentType`](https://prototype.sqprod.co/#/docs/squareup.common.instrument.InstrumentType) enums.\n\nNot present on the public [`Card.Brand`](https://prototype.sqprod.co/#/docs/squareup.connect.v2.resources.Card.Brand) enum.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CardBrandListElementFilterInput",
          "description": "Input type used to specify filters on elements of a `[CardBrand]` field.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CardBrandListElementFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardBrandListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardBrandListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "CardBrandInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CardBrandListFilterInput",
          "description": "Input type used to specify filters on `[CardBrand]` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CardBrandListFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardBrandListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardBrandListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anySatisfy",
              "description": "Matches records where any of the list elements match the provided sub-filter.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CardBrandListElementFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CardBrandListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardCoBrand",
          "description": "Indicates the brand for a co-branded card.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AFTERPAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLEARPAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CardCoBrandFilterInput",
          "description": "Input type used to specify filters on `CardCoBrand` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CardCoBrandFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardCoBrandFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardCoBrandFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CardCoBrandInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CardCoBrandFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardCoBrandInput",
          "description": "Indicates the brand for a co-branded card.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AFTERPAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLEARPAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CardFilterInput",
          "description": "Input type used to specify filters on `Card` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "cardBrand",
              "description": "Used to filter on the `cardBrand` field:\n\n> The card's brand.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CardBrandFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cardType",
              "description": "Used to filter on the `cardType` field:\n\n> The type of the card.\n> The Card object includes this field only in response to Payments API calls.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CardTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cardholderName",
              "description": "Used to filter on the `cardholderName` field:\n\n> The name of the cardholder.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "last4",
              "description": "Used to filter on the `last4` field:\n\n> The last 4 digits of the card number.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardIssuerAlert",
          "description": "Indicates the type of issuer alert for a card on file.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ISSUER_ALERT_CARD_CLOSED",
              "description": "The underlying account of the card was closed, which is a strong signal that future\ncharges to the card are likely to fail.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CardOnFile",
          "description": "Represents the payment details of a card to be used for payments.These\ndetails are determined by the payment token generated by Web Payments SDK.\nPermissions: PAYMENTS_READ",
          "fields": [
            {
              "name": "id",
              "description": "Unique ID for this card. Generated by Square.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The ID of the merchant associated with the card.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardBrand",
              "description": "The card's brand.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CardBrand",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "last4",
              "description": "The last 4 digits of the card number.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "expMonth",
              "description": "The expiration month of the associated card as an integer between 1 and 12.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "expYear",
              "description": "The four-digit year of the card's expiration date.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardholderName",
              "description": "The name of the cardholder.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "billingAddress",
              "description": "The billing address for this card. `US` postal codes can be provided as a 5-digit zip code\nor 9-digit ZIP+4 (example: `12345-6789`). For a full list of field meanings by country, see\n[Working with Addresses](https://developer.squareup.com/docs/build-basics/common-data-types/working-with-addresses).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Address",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "referenceId",
              "description": "An optional user-defined reference ID that associates this card with\nanother entity in an external system. For example, a customer ID from an\nexternal customer management system.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "enabled",
              "description": "Indicates whether or not a card can be used for payments.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardType",
              "description": "The type of the card.\nThe Card object includes this field only in response to Payments API calls.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CardType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "prepaidType",
              "description": "Indicates whether the card is prepaid or not.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CardPrepaidType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bin",
              "description": "The first six digits of the card number, known as the Bank Identification Number (BIN). Only the Payments API\nreturns this field.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "Current version number of the card. Increments with each card update. Requests to update an\nexisting Card object will be rejected unless the version in the request matches the current\nversion for the Card.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issuerAlert",
              "description": "An alert from the issuing bank about the card status. Alerts can indicate whether\nfuture charges to the card are likely to fail. For more information, see\n[Manage Card on File Declines](https://developer.squareup.com/docs/cards-api/manage-card-on-file-declines).\n\nThis field is present only if there's an active issuer alert.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CardIssuerAlert",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issuerAlertAt",
              "description": "The timestamp of when the current issuer alert was received and processed, in\nRFC 3339 format.\n\nThis field is present only if there's an active issuer alert.\n\nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n\nUTC:  2020-01-26T02:25:34Z\n\nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hsaFsa",
              "description": "Indicates whether the card is linked to a Health Savings Account (HSA) or Flexible\nSpending Account (FSA), based on the card BIN.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customer",
              "description": "**Required** The ID of a customer to be associated with the card.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Customer",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fingerprint",
              "description": "Intended as a Square-assigned identifier, based\non the card number, to identify the card across multiple locations within a\nsingle application.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "coBrand",
              "description": "The card's co-brand if available. For example, an Afterpay virtual card would have a\nco-brand of AFTERPAY.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CardCoBrand",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchant",
              "description": "The merchant associated with the card.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Merchant",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CardOnFileConnection",
          "description": "Contains information of CardOnFile query result.\n\nPermissions:PAYMENTS_READ",
          "fields": [
            {
              "name": "pageInfo",
              "description": "Provides information about the specific fetched page. This implements the PageInfo specification from the [Relay GraphQL Cursor Connections Specification](https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo).",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "CardOnFile query result.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CardOnFile",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CardOnFileFilter",
          "description": "The filter to return CardOnFile.",
          "fields": null,
          "inputFields": [
            {
              "name": "merchantId",
              "description": "The merchant ID for the card on files to query.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "Optional card on file ID to filter with. Only a single value is accepted.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "customerId",
              "description": "Optionally Limits the results to cards associated with the customer supplied. By default, all cards owned by the merchant are returned. Only a single value is accepted.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "includeDisabled",
              "description": "Optionally includes disabled cards. By default, all enabled cards owned by the merchant are returned.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicBooleanFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "referenceId",
              "description": "Optionally limits the results to cards associated with the reference_id supplied.  Only a single value is accepted.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CardPaymentDetails",
          "description": "Permissions: PAYMENTS_READ\n\nReflects the current status of a card payment. Contains only non-confidential information.",
          "fields": [
            {
              "name": "applicationCryptogram",
              "description": "For EMV payments, the cryptogram generated for the payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "applicationIdentifier",
              "description": "For EMV payments, the application ID identifies the EMV application used for the payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "applicationName",
              "description": "For EMV payments, the human-readable name of the EMV application used for the payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "authResultCode",
              "description": "The status code returned by the card issuer that describes the payment's authorization status.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "avsStatus",
              "description": "The status code returned from the Address Verification System (AVS) check.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CardPaymentDetailsAvsStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "card",
              "description": "The credit card's non-confidential details.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Card",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardPaymentTimeline",
              "description": "The timeline for card payments.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CardPaymentTimeline",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cvvStatus",
              "description": "The status code returned from the Card Verification Value (CVV) check.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CardPaymentDetailsCvvStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "entryMethod",
              "description": "The method used to enter the card's details for the payment.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CardPaymentDetailsEntryMethod",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "errors",
              "description": "Information about errors encountered during the request.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Error",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "refundRequiresCardPresence",
              "description": "Whether the card must be physically present for the payment to be refunded.  If set to `true`, the card must be present.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "statementDescription",
              "description": "The statement description sent to the card networks.\nNote: The actual statement description varies and is likely to be truncated and appended with\nadditional information on a per issuer basis.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "The card payment's current state.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CardPaymentDetailsStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "verificationMethod",
              "description": "For EMV payments, the method used to verify the cardholder's identity.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CardPaymentDetailsVerificationMethod",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "verificationResults",
              "description": "For EMV payments, the results of the cardholder verification.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CardPaymentDetailsVerificationResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardPaymentDetailsAvsStatus",
          "description": "Enumeration of possible status codes returned from an Address Verification System (AVS) check.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AVS_ACCEPTED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AVS_NOT_CHECKED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AVS_REJECTED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CardPaymentDetailsAvsStatusFilterInput",
          "description": "Input type used to specify filters on `CardPaymentDetailsAvsStatus` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CardPaymentDetailsAvsStatusFilterInput` input because\nof collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardPaymentDetailsAvsStatusFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardPaymentDetailsAvsStatusFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CardPaymentDetailsAvsStatusInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CardPaymentDetailsAvsStatusFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardPaymentDetailsAvsStatusInput",
          "description": "Enumeration of possible status codes returned from an Address Verification System (AVS) check.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AVS_ACCEPTED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AVS_NOT_CHECKED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AVS_REJECTED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardPaymentDetailsCvvStatus",
          "description": "Enumeration of possible status codes returned from a Card Verification Value (CVV) check.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CVV_ACCEPTED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CVV_NOT_CHECKED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CVV_REJECTED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CardPaymentDetailsCvvStatusFilterInput",
          "description": "Input type used to specify filters on `CardPaymentDetailsCvvStatus` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CardPaymentDetailsCvvStatusFilterInput` input because\nof collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardPaymentDetailsCvvStatusFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardPaymentDetailsCvvStatusFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CardPaymentDetailsCvvStatusInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CardPaymentDetailsCvvStatusFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardPaymentDetailsCvvStatusInput",
          "description": "Enumeration of possible status codes returned from a Card Verification Value (CVV) check.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CVV_ACCEPTED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CVV_NOT_CHECKED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CVV_REJECTED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardPaymentDetailsEntryMethod",
          "description": "The method used to enter a card's details for the payment.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CONTACTLESS",
              "description": "Card was tapped to a reader (eg NFC).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EMV",
              "description": "Card was dipped into an EMV reader, and went through the EMV payment flow.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KEYED",
              "description": "Card was keyed in. A CNP payment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ON_FILE",
              "description": "Card data was pulled from an instrument store.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SWIPED",
              "description": "Card was swiped through a reader or stand.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CardPaymentDetailsEntryMethodFilterInput",
          "description": "Input type used to specify filters on `CardPaymentDetailsEntryMethod` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CardPaymentDetailsEntryMethodFilterInput` input\nbecause of collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardPaymentDetailsEntryMethodFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardPaymentDetailsEntryMethodFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CardPaymentDetailsEntryMethodInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CardPaymentDetailsEntryMethodFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardPaymentDetailsEntryMethodInput",
          "description": "The method used to enter a card's details for the payment.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CONTACTLESS",
              "description": "Card was tapped to a reader (eg NFC).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EMV",
              "description": "Card was dipped into an EMV reader, and went through the EMV payment flow.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KEYED",
              "description": "Card was keyed in. A CNP payment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ON_FILE",
              "description": "Card data was pulled from an instrument store.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SWIPED",
              "description": "Card was swiped through a reader or stand.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CardPaymentDetailsFilterInput",
          "description": "Input type used to specify filters on `CardPaymentDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "card",
              "description": "Used to filter on the `card` field:\n\n> The credit card's non-confidential details.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CardFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardPaymentDetailsStatus",
          "description": "A card payment's current state.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AUTHORIZED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CAPTURED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FAILED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VOIDED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CardPaymentDetailsStatusFilterInput",
          "description": "Input type used to specify filters on `CardPaymentDetailsStatus` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CardPaymentDetailsStatusFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardPaymentDetailsStatusFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardPaymentDetailsStatusFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CardPaymentDetailsStatusInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CardPaymentDetailsStatusFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardPaymentDetailsStatusInput",
          "description": "A card payment's current state.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AUTHORIZED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CAPTURED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FAILED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VOIDED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardPaymentDetailsVerificationMethod",
          "description": "Enumeration of possible methods used for EMV paymentsto verify the cardholder's identity.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "NONE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ON_DEVICE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PIN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PIN_AND_SIGNATURE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SIGNATURE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CardPaymentDetailsVerificationMethodFilterInput",
          "description": "Input type used to specify filters on `CardPaymentDetailsVerificationMethod` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CardPaymentDetailsVerificationMethodFilterInput`\ninput because of collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardPaymentDetailsVerificationMethodFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardPaymentDetailsVerificationMethodFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CardPaymentDetailsVerificationMethodInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CardPaymentDetailsVerificationMethodFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardPaymentDetailsVerificationMethodInput",
          "description": "Enumeration of possible methods used for EMV paymentsto verify the cardholder's identity.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "NONE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ON_DEVICE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PIN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PIN_AND_SIGNATURE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SIGNATURE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardPaymentDetailsVerificationResult",
          "description": "Enumeration of possible card verification results for EMV payments.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "FAILURE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUCCESS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CardPaymentDetailsVerificationResultFilterInput",
          "description": "Input type used to specify filters on `CardPaymentDetailsVerificationResult` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CardPaymentDetailsVerificationResultFilterInput`\ninput because of collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardPaymentDetailsVerificationResultFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardPaymentDetailsVerificationResultFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CardPaymentDetailsVerificationResultInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CardPaymentDetailsVerificationResultFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardPaymentDetailsVerificationResultInput",
          "description": "Enumeration of possible card verification results for EMV payments.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "FAILURE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUCCESS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CardPaymentTimeline",
          "description": "Permissions: PAYMENTS_READ\n\nThe timeline for card payments.",
          "fields": [
            {
              "name": "authorizedAt",
              "description": "The timestamp when the payment was authorized, in RFC 3339 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "capturedAt",
              "description": "The timestamp when the payment was captured, in RFC 3339 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "voidedAt",
              "description": "The timestamp when the payment was voided, in RFC 3339 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CardPaymentTimelineFilterInput",
          "description": "Input type used to specify filters on `CardPaymentTimeline` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "authorizedAt",
              "description": "Used to filter on the `authorizedAt` field:\n\n> The timestamp when the payment was authorized, in RFC 3339 format.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "capturedAt",
              "description": "Used to filter on the `capturedAt` field:\n\n> The timestamp when the payment was captured, in RFC 3339 format.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "voidedAt",
              "description": "Used to filter on the `voidedAt` field:\n\n> The timestamp when the payment was voided, in RFC 3339 format.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardPrepaidType",
          "description": "Indicates a card's prepaid type, such as `NOT_PREPAID` or `PREPAID`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "NOT_PREPAID",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PREPAID",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_PREPAID_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CardPrepaidTypeFilterInput",
          "description": "Input type used to specify filters on `CardPrepaidType` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CardPrepaidTypeFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardPrepaidTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardPrepaidTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CardPrepaidTypeInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CardPrepaidTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardPrepaidTypeInput",
          "description": "Indicates a card's prepaid type, such as `NOT_PREPAID` or `PREPAID`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "NOT_PREPAID",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PREPAID",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_PREPAID_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CardReaderComponentDetails",
          "description": "Structured data for a `CardReader`, set for DeviceComponents of type `CARD_READER`.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "cardReaderStatus",
              "description": "The current status of the internal card reader.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CardReaderStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardReaderType",
              "description": "The type of card reader.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CardReaderType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardReaderVersion",
              "description": "The version of the card reader.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardReaderStatus",
          "description": "An enum for CardReaderStatus.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CARD_READER_STATUS_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CONNECTED",
              "description": "Connected, but not ready for payments.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DISCONNECTED",
              "description": "Fully disconnected.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "READY",
              "description": "Connected and ready for payments.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TAMPERED",
              "description": "Tampered with or otherwise damaged.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATING",
              "description": "Undergoing a firmware update.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CardReaderStatusFilterInput",
          "description": "Input type used to specify filters on `CardReaderStatus` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CardReaderStatusFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardReaderStatusFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardReaderStatusFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CardReaderStatusInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CardReaderStatusFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardReaderStatusInput",
          "description": "An enum for CardReaderStatus.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CARD_READER_STATUS_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CONNECTED",
              "description": "Connected, but not ready for payments.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DISCONNECTED",
              "description": "Fully disconnected.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "READY",
              "description": "Connected and ready for payments.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TAMPERED",
              "description": "Tampered with or otherwise damaged.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATING",
              "description": "Undergoing a firmware update.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardReaderType",
          "description": "An enum for CardReaderType.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AUDIO_DIP_GEN1_V1",
              "description": "Chip reader.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AUDIO_SWIPE_GEN1_V1",
              "description": "Magstripe reader (audio jack).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_READER_TYPE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EMBEDDED",
              "description": "Embedded card readers (ECR) in COTS devices.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HANDHELD_GEN1_V1",
              "description": "Square Handheld (1st Gen, v1).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LIGHTNING_SWIPE_GEN1_V1",
              "description": "Magstripe reader (lightning).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REGISTER_GEN1_V1",
              "description": "Square Register (1st Gen, v1).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REGISTER_GEN1_V2",
              "description": "Square Register (1st Gen, v2).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REGISTER_GEN1_V3",
              "description": "Square Register (1st Gen, v3).",
              "isDeprecated": true,
              "deprecationReason": "Deprecated for Gen2 V1 instead."
            },
            {
              "name": "REGISTER_GEN2_V1",
              "description": "Square Register (2nd Gen, v1).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STAND_GEN1_V1",
              "description": "Square Stand (1st Gen, v1).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STAND_GEN1_V2",
              "description": "Square Stand (1st Gen, v2).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STAND_GEN1_V3",
              "description": "Square Stand (1st Gen, v3).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STAND_GEN1_V4",
              "description": "Square Stand (1st Gen, v4).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STAND_GEN1_V5",
              "description": "Square Stand (1st Gen, v5).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STAND_GEN2_V1",
              "description": "Square Stand (2nd Gen, v1).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STAND_GEN2_V2",
              "description": "Square Stand (2nd Gen, v2).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TAPDIP_GEN1_V1",
              "description": "Square Reader (1st Gen, v1).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TAPDIP_GEN1_V2",
              "description": "Square Reader (1st Gen, v2).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TAPDIP_GEN1_V3",
              "description": "Square Reader (1st Gen, v3).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TAPDIP_GEN2_V1",
              "description": "Square Reader (2nd Gen, v1).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TERMINAL_GEN1_V1",
              "description": "Square Terminal (1st Gen, v1).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TERMINAL_GEN1_V2",
              "description": "Square Terminal (1st Gen, v2).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TERMINAL_GEN2_V1",
              "description": "Square Terminal T3 (2nd Gen, v1).",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CardReaderTypeFilterInput",
          "description": "Input type used to specify filters on `CardReaderType` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CardReaderTypeFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardReaderTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardReaderTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CardReaderTypeInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CardReaderTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardReaderTypeInput",
          "description": "An enum for CardReaderType.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AUDIO_DIP_GEN1_V1",
              "description": "Chip reader.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AUDIO_SWIPE_GEN1_V1",
              "description": "Magstripe reader (audio jack).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_READER_TYPE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EMBEDDED",
              "description": "Embedded card readers (ECR) in COTS devices.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HANDHELD_GEN1_V1",
              "description": "Square Handheld (1st Gen, v1).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LIGHTNING_SWIPE_GEN1_V1",
              "description": "Magstripe reader (lightning).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REGISTER_GEN1_V1",
              "description": "Square Register (1st Gen, v1).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REGISTER_GEN1_V2",
              "description": "Square Register (1st Gen, v2).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REGISTER_GEN1_V3",
              "description": "Square Register (1st Gen, v3).",
              "isDeprecated": true,
              "deprecationReason": "Deprecated for Gen2 V1 instead."
            },
            {
              "name": "REGISTER_GEN2_V1",
              "description": "Square Register (2nd Gen, v1).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STAND_GEN1_V1",
              "description": "Square Stand (1st Gen, v1).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STAND_GEN1_V2",
              "description": "Square Stand (1st Gen, v2).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STAND_GEN1_V3",
              "description": "Square Stand (1st Gen, v3).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STAND_GEN1_V4",
              "description": "Square Stand (1st Gen, v4).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STAND_GEN1_V5",
              "description": "Square Stand (1st Gen, v5).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STAND_GEN2_V1",
              "description": "Square Stand (2nd Gen, v1).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STAND_GEN2_V2",
              "description": "Square Stand (2nd Gen, v2).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TAPDIP_GEN1_V1",
              "description": "Square Reader (1st Gen, v1).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TAPDIP_GEN1_V2",
              "description": "Square Reader (1st Gen, v2).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TAPDIP_GEN1_V3",
              "description": "Square Reader (1st Gen, v3).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TAPDIP_GEN2_V1",
              "description": "Square Reader (2nd Gen, v1).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TERMINAL_GEN1_V1",
              "description": "Square Terminal (1st Gen, v1).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TERMINAL_GEN1_V2",
              "description": "Square Terminal (1st Gen, v2).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TERMINAL_GEN2_V1",
              "description": "Square Terminal T3 (2nd Gen, v1).",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardType",
          "description": "Indicates a card's type, such as `CREDIT` or `DEBIT`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CREDIT",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEBIT",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_CARD_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEFAULT_CARD_TYPE_DO_NOT_USE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CardTypeFilterInput",
          "description": "Input type used to specify filters on `CardType` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CardTypeFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CardTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CardTypeInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CardTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CardTypeInput",
          "description": "Indicates a card's type, such as `CREDIT` or `DEBIT`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CREDIT",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEBIT",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_CARD_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CashAppPaymentDetails",
          "description": "Permissions: PAYMENTS_READ\n\nAdditional details about `WALLET` type payments with the `brand` of `CASH_APP`.",
          "fields": [
            {
              "name": "buyerCashtag",
              "description": "$Cashtag of the Cash App account holder.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "buyerCountryCode",
              "description": "The country of the Cash App account holder.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "Country",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "buyerFullName",
              "description": "The name of the Cash App account holder.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CashAppPaymentDetailsFilterInput",
          "description": "Input type used to specify filters on `CashAppPaymentDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "buyerCashtag",
              "description": "Used to filter on the `buyerCashtag` field:\n\n> $Cashtag of the Cash App account holder.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "buyerCountryCode",
              "description": "Used to filter on the `buyerCountryCode` field:\n\n> The country of the Cash App account holder.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CountryFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "buyerFullName",
              "description": "Used to filter on the `buyerFullName` field:\n\n> The name of the Cash App account holder.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CashDrawerDevice",
          "description": "Permissions: CASH_DRAWER_READ",
          "fields": [
            {
              "name": "id",
              "description": "The device Square-issued ID",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The device merchant-specified name.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CashDrawerEventType",
          "description": "The types of events on a CashDrawerShift.Each event type represents an employee action on the actual cash drawer\nrepresented by a CashDrawerShift.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CASH_TENDER_CANCELLED_PAYMENT",
              "description": "Triggered when a split tender bill is cancelled after cash has been\ntendered.\nA CASH_TENDER_CANCELLED_PAYMENT should have a corresponding CASH_TENDER_PAYMENT.\nA CashDrawerEvent of this type must not have a negative amount.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CASH_TENDER_PAYMENT",
              "description": "Triggered when a cash tender payment occurs on a cash drawer.\nA CashDrawerEvent of this type can must not have a negative amount.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CASH_TENDER_REFUND",
              "description": "Triggered when a cash tender refund occurs.\nA CashDrawerEvent of this type must not have a negative amount.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NO_SALE",
              "description": "Triggered when a no sale occurs on a cash drawer.\nA CashDrawerEvent of this type must have a zero money amount.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER_TENDER_CANCELLED_PAYMENT",
              "description": "Triggered when a split tender bill is cancelled after a non-cash tender\nhas been tendered. An OTHER_TENDER_CANCELLED_PAYMENT should have a corresponding\nOTHER_TENDER_PAYMENT. A CashDrawerEvent of this type must have a zero money\namount.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER_TENDER_PAYMENT",
              "description": "Triggered when a check, gift card, or other non-cash payment occurs\non a cash drawer.\nA CashDrawerEvent of this type must have a zero money amount.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER_TENDER_REFUND",
              "description": "Triggered when an other tender refund occurs.\nA CashDrawerEvent of this type must have a zero money amount.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAID_IN",
              "description": "Triggered when money unrelated to a payment is added to the cash drawer.\nFor example, an employee adds coins to the drawer.\nA CashDrawerEvent of this type must not have a negative amount.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAID_OUT",
              "description": "Triggered when money is removed from the drawer for other reasons\nthan making change.\nFor example, an employee pays a delivery person with cash from the cash drawer.\nA CashDrawerEvent of this type must not have a negative amount.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CashDrawerShift",
          "description": "This model gives the details of a cash drawer shift.The cash_payment_money, cash_refund_money, cash_paid_in_money,\nand cash_paid_out_money fields are all computed by summing their respective\nevent types.\nPermissions: CASH_DRAWER_READ",
          "fields": [
            {
              "name": "cashPaidInMoney",
              "description": "The amount of money added to the cash drawer for reasons other than cash\npayments. It is computed by summing the events of type PAID_IN. The amount is\nalways greater than or equal to zero.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cashPaidOutMoney",
              "description": "The amount of money removed from the cash drawer for reasons other than\ncash refunds. It is computed by summing the events of type PAID_OUT. The amount\nis always greater than or equal to zero.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cashPaymentMoney",
              "description": "The amount of money added to the cash drawer from cash payments.\nThis is computed by summing all events with the types CASH_TENDER_PAYMENT and\nCASH_TENDER_CANCELED_PAYMENT. The amount is always greater than or equal to\nzero.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cashRefundsMoney",
              "description": "The amount of money removed from the cash drawer from cash refunds.\nIt is computed by summing the events of type CASH_TENDER_REFUND. The amount\nis always greater than or equal to zero.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "closedAt",
              "description": "The time when the shift was closed, in ISO 8601 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "closedCashMoney",
              "description": "The amount of money found in the cash drawer at the end of the shift\nby an auditing employee. The amount should be positive.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "closingTeamMember",
              "description": "The ID of the team member that closed the cash drawer shift by auditing\nthe cash drawer contents.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TeamMember",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The shift start time in RFC 3339 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "The free-form text description of a cash drawer by an employee.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "device",
              "description": "The device running Square Point of Sale that was connected to the cash drawer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CashDrawerDevice",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "endedAt",
              "description": "The time when the shift ended, in ISO 8601 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "endingTeamMember",
              "description": "The ID of the team member that ended the cash drawer shift.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TeamMember",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "expectedCashMoney",
              "description": "The amount of money that should be in the cash drawer at the end of the\nshift, based on the shift's other money amounts.\nThis can be negative if employees have not correctly recorded all the events\non the cash drawer.\ncash_paid_out_money is a summation of amounts from cash_payment_money (zero\nor positive), cash_refunds_money (zero or negative), cash_paid_in_money (zero\nor positive), and cash_paid_out_money (zero or negative) event types.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The shift unique ID.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the location the cash drawer shift belongs to.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "openedAt",
              "description": "The time when the shift began, in ISO 8601 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "openedCashMoney",
              "description": "The amount of money in the cash drawer at the start of the shift.\nThe amount must be greater than or equal to zero.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "openingTeamMember",
              "description": "The ID of the team member that started the cash drawer shift.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TeamMember",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "The shift current state.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CashDrawerShiftState",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMembers",
              "description": "The IDs of all team members that were logged into Square Point of Sale at any\npoint while the cash drawer shift was open.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TeamMember",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The shift updated at time in RFC 3339 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CashDrawerShiftConnection",
          "description": "A list of CashDrawerShifts.\n\nPermissions: CASH_DRAWER_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of break types",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CashDrawerShift",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CashDrawerShiftEvent",
          "description": "Permissions: CASH_DRAWER_READ",
          "fields": [
            {
              "name": "createdAt",
              "description": "The event time in RFC 3339 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "An optional description of the event, entered by the employee that\ncreated the event.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "eventMoney",
              "description": "The amount of money that was added to or removed from the cash drawer\nin the event. The amount can be positive (for added money)\nor zero (for other tender type payments). The addition or removal of money can be determined by\nby the event type.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "eventType",
              "description": "The type of cash drawer shift event.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CashDrawerEventType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The unique ID of the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMember",
              "description": "The ID of the team member that created the event.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TeamMember",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CashDrawerShiftEventConnection",
          "description": "A list of CashDrawerShiftEvents.\n\nPermissions: CASH_DRAWER_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of break types",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CashDrawerShiftEvent",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CashDrawerShiftEventFilter",
          "description": "Defines a filter used in a search for `CashDrawerShiftEvent` records.",
          "fields": null,
          "inputFields": [
            {
              "name": "locationId",
              "description": "Fetch shifts for the specified location.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "Fetch shifts for the specified merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "shiftId",
              "description": "Fetch events for the shift ids.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CashDrawerShiftFilter",
          "description": "Defines a filter used in a search for `CashDrawerShift` records.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Fetch shifts for the specified ids.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "locationId",
              "description": "Fetch shifts for the specified location.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "Fetch shifts for the specified merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "openedAt",
              "description": "The openedAt time range in ISO 8601 format.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TimeRangeFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CashDrawerShiftState",
          "description": "The current state of a cash drawer shift.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CLOSED",
              "description": "An ended cash drawer shift that is closed with a completed employee\ncontent audit and recorded result.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ENDED",
              "description": "A cash drawer shift that is ended but has not yet had an employee content audit.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OPEN",
              "description": "An open cash drawer shift.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CashPaymentDetails",
          "description": "Permissions: PAYMENTS_READ\n\nStores details about a cash payment. Contains only non-confidential information. For more information, see\n[Take Cash Payments](https://developer.squareup.com/docs/payments-api/take-payments/cash-payments).",
          "fields": [
            {
              "name": "buyerSuppliedMoney",
              "description": "The amount and currency of the money supplied by the buyer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "changeBackMoney",
              "description": "The amount of change due back to the buyer.\nThis read-only field is calculated from the `amountMoney` and `buyerSuppliedMoney` fields.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CashPaymentDetailsFilterInput",
          "description": "Input type used to specify filters on `CashPaymentDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "buyerSuppliedMoney",
              "description": "Used to filter on the `buyerSuppliedMoney` field:\n\n> The amount and currency of the money supplied by the buyer.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MoneyFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "changeBackMoney",
              "description": "Used to filter on the `changeBackMoney` field:\n\n> The amount of change due back to the buyer.\n> This read-only field is calculated from the `amountMoney` and `buyerSuppliedMoney` fields.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MoneyFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CatalogAttributeBasicStringFilter",
          "description": "CatalogAttributeBasicStringFilter is used for filtering a query with a string attribute",
          "fields": null,
          "inputFields": [
            {
              "name": "attributeName",
              "description": "The name of the attribute to be searched. Matching of the attribute name is exact.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "value",
              "description": "The desired values of the search attribute. Matching of the attribute values is exact and case insensitive. A maximum of 250 values may be searched in a request.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CatalogAttributeRangeFilter",
          "description": "CatalogAttributeRangeFilter is used for filtering a query with an int attribute",
          "fields": null,
          "inputFields": [
            {
              "name": "attributeName",
              "description": "The name of the attribute to be searched.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "min",
              "description": "The desired minimum value for the search attribute (inclusive).",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "max",
              "description": "The desired maximum value for the search attribute (inclusive).",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CatalogAttributeSort",
          "description": "CatalogAttributeSort is used for filtering the result in an item query",
          "fields": null,
          "inputFields": [
            {
              "name": "attributeName",
              "description": "The name of the attribute used to sort the result.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "initialAttributeValue",
              "description": "The first attribute value to be returned by the query. Ascending sorts will return only objects with this value or greater,\nwhile descending sorts will return only objects with this value or less. If unset,\nstart at the beginning (for ascending sorts) or end (for descending sorts).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "sortOrder",
              "description": "ASC or DESC",
              "type": {
                "kind": "ENUM",
                "name": "SortOrder",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CatalogAttributeStringSetFilter",
          "description": "CatalogAttributeStringSetFilter is used for filtering a query with a string set or array attribute",
          "fields": null,
          "inputFields": [
            {
              "name": "attributeName",
              "description": "The name of the attribute to be searched. Matching of the attribute name is exact.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "value",
              "description": "The desired values of the search attribute. Matching of the attribute values is exact and case insensitive. A maximum of 250 values may be searched in a request.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogAvailabilityPeriod",
          "description": "Represents a time period of availability.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "startLocalTime",
              "description": "The start time of an availability period, specified in local time using partial-time\nRFC 3339 format. For example, `8:30:00` for a period starting at 8:30 in the morning.\nNote that the seconds value is always :00, but it is appended for conformance to the RFC.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "endLocalTime",
              "description": "The end time of an availability period, specified in local time using partial-time\nRFC 3339 format. For example, `21:00:00` for a period ending at 9:00 in the evening.\nNote that the seconds value is always :00, but it is appended for conformance to the RFC.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "dayOfWeek",
              "description": "The day of the week for this availability period.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DayOfWeek",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "An identifier to reference this object in the catalog. When a new CatalogObject is inserted, the client should set the id to a temporary identifier starting with a '#' character. Other objects being inserted or updated within the same request may use this identifier to refer to the new object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. For the REST API, when a new CatalogObject in inserted, the version supplied must match the version in the database otherwise the write will be rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogV1Ids",
              "description": "The Connect v1 IDs for this object at each location where it is present, where they differ from the object's Connect V2 ID. The field will only be present for objects that have been created or modified by legacy APIs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "If true, the object has been deleted from the database. Must be false for new objects being inserted. When deleted, updatedAt will equal the deletion time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Last modification timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "This value will always be null. Custom attributes do not apply to this object",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "absentAt",
              "description": "A list of locations where the object is not present, even if presentAtAll is true. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAt",
              "description": "A list of locations where the object is present, even if presentAtAll is false. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAtAll",
              "description": "If true, this object is present at all locations (including future locations), except where specified in absentAt. If false, this object is not present at any locations (including future locations), except where specified in presentAt. If not specified, defaults to true.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "CatalogObject",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogCategory",
          "description": "A category to which a CatalogItem instance belongs.\n\nPermissions:ITEMS_READ",
          "fields": [
            {
              "name": "name",
              "description": "The category name. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "categoryType",
              "description": "The type of the category.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CatalogCategoryType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "parentCategory",
              "description": "The ID of the parent category of this category instance.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogObjectCategory",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isTopLevel",
              "description": "Indicates whether a category is a top level category, which does not have any parent_category.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "channels",
              "description": "A list of IDs representing channels, such as a Square Online site, where the category can be made visible.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "onlineVisibility",
              "description": "Indicates whether the category is visible (`true`) or hidden (`false`) on all of the seller's Square Online sites.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ecomSeoData",
              "description": "The SEO data for a seller's Square Online store.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogEcomSeoData",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "images",
              "description": "The IDs of images associated with this `CatalogCategory` instance.\nCurrently these images are not displayed by Square, but are free to be displayed in 3rd party applications.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogImage",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "availabilityPeriods",
              "description": "The IDs of the `CatalogAvailabilityPeriod` objects associated with the category.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogAvailabilityPeriod",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "rootCategory",
              "description": "The top-level category in a category hierarchy.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogCategory",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pathToRoot",
              "description": "The path from the category to its root category. The first node of the path is the parent of the category\nand the last is the root category. The path is empty if the category is a root category.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CategoryPathToRootNode",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "An identifier to reference this object in the catalog. When a new CatalogObject is inserted, the client should set the id to a temporary identifier starting with a \"#\" character. Other objects being inserted or updated within the same request may use this identifier to refer to the new object.\nWhen the server receives the new object, it will supply a unique identifier that replaces the temporary identifier for all future references.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. For the REST API, when a new CatalogObject in inserted, the version supplied must match the version in the database otherwise the write will be rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogV1Ids",
              "description": "The Connect v1 IDs for this object at each location where it is present, where they differ from the object's Connect V2 ID. The field will only be present for objects that have been created or modified by legacy APIs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "If true, the object has been deleted from the database. Must be false for new objects being inserted. When deleted, updatedAt will equal the deletion time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Last modification timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "This value will always be null. Custom attributes do not apply to this object",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "absentAt",
              "description": "A list of locations where the object is not present, even if presentAtAll is true. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAt",
              "description": "A list of locations where the object is present, even if presentAtAll is false. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAtAll",
              "description": "If true, this object is present at all locations (including future locations), except where specified in absentAt. If false, this object is not present at any locations (including future locations), except where specified in presentAt. If not specified, defaults to true.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "CatalogObject",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CatalogCategoryType",
          "description": "Indicates the type of a category.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "REGULAR_CATEGORY",
              "description": "The regular category.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MENU_CATEGORY",
              "description": "The menu category.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KITCHEN_CATEGORY",
              "description": "Kitchen categories are used by KDS (Kitchen Display System) to route items to specific clients",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogCustomAttributeBoolean",
          "description": "Provides information when CatalogCustomAttributeValue.value is Boolean.\n\nPermissions:ITEMS_READ",
          "fields": [
            {
              "name": "value",
              "description": "A true or false value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogCustomAttributeDefinition",
          "description": "Contains information defining a custom attribute.Custom attributes are\nintended to store additional information about a catalog object or to associate a\ncatalog object with an entity in another system. Do not use custom attributes\nto store any sensitive information (personally identifiable information, card details, etc.).\n[Read more about custom attributes](https://developer.squareup.com/docs/catalog-api/add-custom-attributes)\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "type",
              "description": "The type of this custom attribute. Cannot be modified after creation.\nRequired.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CatalogCustomAttributeType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": " The name of this definition for API and seller-facing UI purposes.\nThe name must be unique within the (merchant, application) pair. Required.\nMay not be empty and may not exceed 255 characters. Can be modified after creation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "Seller-oriented description of the meaning of this Custom Attribute,\nany constraints that the seller should observe, etc. May be displayed as a tooltip in Square UIs.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sourceApplication",
              "description": "__Read only.__ Contains information about the application that\ncreated this custom attribute definition.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "SourceApplication",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "allowedObjectTypes",
              "description": "The set of `CatalogObject` types that this custom atttribute may be applied to.\nCurrently, only `ITEM`, `ITEM_VARIATION`, and `MODIFIER` are allowed. At least one type must be included.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CatalogObjectType",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sellerVisibility",
              "description": "The visibility of a custom attribute in seller-facing UIs (including Square Point\nof Sale applications and Square Dashboard). May be modified.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CatalogCustomAttributeDefinitionSellerVisibility",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appVisibility",
              "description": "The visibility of a custom attribute to applications other than the application\nthat created the attribute.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CatalogCustomAttributeDefinitionAppVisibility",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "key",
              "description": "The name of the desired custom attribute key that can be used to access\nthe custom attribute value on catalog objects. Cannot be modified after the\ncustom attribute definition has been created.\nMust be between 1 and 60 characters, and may only contain the characters `[a-zA-Z0-9_-]`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "usageCount",
              "description": "The number of custom attributes that reference this\ncustom attribute definition. Set by the server in response to a ListCatalog\nrequest with `include_counts` set to `true`.  If the actual count is greater\nthan 100, `custom_attribute_usage_count` will be set to `100`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "config",
              "description": "Configuration for CatalogCustomAttributeDefinition",
              "args": [],
              "type": {
                "kind": "UNION",
                "name": "CatalogCustomAttributeDefinitionConfig",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "An identifier to reference this object in the catalog. When a new CatalogObject is inserted, the client should set the id to a temporary identifier starting with a '#' character. Other objects being inserted or updated within the same request may use this identifier to refer to the new object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. For the REST API, when a new CatalogObject in inserted, the version supplied must match the version in the database otherwise the write will be rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogV1Ids",
              "description": "The Connect v1 IDs for this object at each location where it is present, where they differ from the object's Connect V2 ID. The field will only be present for objects that have been created or modified by legacy APIs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "If true, the object has been deleted from the database. Must be false for new objects being inserted. When deleted, updatedAt will equal the deletion time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Last modification timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "This value will always be null. Custom attributes do not apply to this object",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "absentAt",
              "description": "A list of locations where the object is not present, even if presentAtAll is true. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAt",
              "description": "A list of locations where the object is present, even if presentAtAll is false. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAtAll",
              "description": "If true, this object is present at all locations (including future locations), except where specified in absentAt. If false, this object is not present at any locations (including future locations), except where specified in presentAt. If not specified, defaults to true.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "CatalogObject",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CatalogCustomAttributeDefinitionAppVisibility",
          "description": "Defines the visibility of a custom attribute to applications other than their\ncreating application.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "APP_VISIBILITY_HIDDEN",
              "description": "Other applications cannot read this custom attribute.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "APP_VISIBILITY_READ_ONLY",
              "description": "Other applications can read this custom attribute definition and\nvalues.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "APP_VISIBILITY_READ_WRITE_VALUES",
              "description": "Other applications can read and write custom attribute values on objects.\nThey can read but cannot edit the custom attribute definition.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "UNION",
          "name": "CatalogCustomAttributeDefinitionConfig",
          "description": "Defines the config for CatalogCustomAttributeDefinition.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "CatalogCustomAttributeNumberConfig",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogCustomAttributeSelectionConfig",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogCustomAttributeStringConfig",
              "ofType": null
            }
          ]
        },
        {
          "kind": "ENUM",
          "name": "CatalogCustomAttributeDefinitionSellerVisibility",
          "description": "Defines the visibility of a custom attribute to sellers in Square\nclient applications, Square APIs or in Square UIs (including Square Point\nof Sale applications and Square Dashboard).",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "SELLER_VISIBILITY_HIDDEN",
              "description": "Sellers cannot read this custom attribute in Square client\napplications or Square APIs.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SELLER_VISIBILITY_READ_WRITE_VALUES",
              "description": "Sellers can read and write this custom attribute value in catalog objects,\nbut cannot edit the custom attribute definition.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CatalogCustomAttributeFilter",
          "description": "CatalogCustomAttributeFilter allows custom attribute query expressions for the item query",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "A query expression to filter items or item variations by matching their custom attributes'\ncustom_attribute_definition_id property value against the the specified id. Exactly one of custom_attribute_definition_id or key must be specified.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "key",
              "description": "A query expression to filter items or item variations by matching their custom attributes' key property value against\nthe specified key. Exactly one of custom_attribute_definition_id or key must be specified.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "bool",
              "description": "A query expression to filter items or item variations by matching their custom attributes' boolean_value property\nvalues against the specified Boolean expression. Exactly one of string_filter, number_filter, selection_uids_filter,\nor bool_filter must be specified.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "string",
              "description": "A query expression to filter items or item variations by matching their custom attributes' string_value property\nvalue against the specified text. Exactly one of string_filter, number_filter, selection_uids_filter, or bool_filter\nmust be specified.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "uids",
              "description": "A query expression to filter items or item variations by matching their custom attributes' selection_uid_values\nvalues against the specified selection uids. Exactly one of string_filter, number_filter, selection_uids_filter, or bool_filter must be specified.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "min",
              "description": "The lower bound of the number range. At least one of min or max must be specified. If unspecified, the results will have no minimum value.",
              "type": {
                "kind": "SCALAR",
                "name": "Decimal",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "max",
              "description": "The upper bound of the number range. At least one of min or max must be specified. If unspecified, the results will have no maximum value.",
              "type": {
                "kind": "SCALAR",
                "name": "Decimal",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogCustomAttributeNumber",
          "description": "Provides information when CatalogCustomAttributeValue.value is Number.\n\nPermissions:ITEMS_READ",
          "fields": [
            {
              "name": "value",
              "description": "Contains a string representation of a decimal number, using a . as the decimal separator.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Decimal",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogCustomAttributeNumberConfig",
          "description": "Permissions: ITEMS_READ",
          "fields": [
            {
              "name": "precision",
              "description": "An integer between 0 and 5 that represents the maximum number of\npositions allowed after the decimal in number custom attribute values\nFor example:\n\n- if the precision is 0, the quantity can be 1, 2, 3, etc.\n- if the precision is 1, the quantity can be 0.1, 0.2, etc.\n- if the precision is 2, the quantity can be 0.01, 0.12, etc.\n\nDefault: 5",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogCustomAttributeSelection",
          "description": "Provides information when CatalogCustomAttributeValue.value is Selection.\n\nPermissions:ITEMS_READ",
          "fields": [
            {
              "name": "uids",
              "description": "One or more choices from allowed_selections.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogCustomAttributeSelectionConfig",
          "description": "Configuration associated with `SELECTION`-type custom attribute definitions.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "maxAllowedSelections",
              "description": "The maximum number of selections that can be set. The maximum value for this\nattribute is 100. The default value is 1. The value can be modified, but changing the value will not\naffect existing custom attribute values on objects. Clients need to\nhandle custom attributes with more selected values than allowed by this limit.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "allowedSelections",
              "description": "The set of valid `CatalogCustomAttributeSelections`. Up to a maximum of 100\nselections can be defined. Can be modified.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeSelectionDefinition",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogCustomAttributeSelectionDefinition",
          "description": "A named selection for this `SELECTION`-type custom attribute definition.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "uid",
              "description": "Unique ID set by Square.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Selection name, unique within `allowed_selections`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogCustomAttributeString",
          "description": "Provides information when CatalogCustomAttributeValue.value is String.\n\nPermissions:ITEMS_READ",
          "fields": [
            {
              "name": "value",
              "description": "The string value of the custom attribute.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogCustomAttributeStringConfig",
          "description": "Configuration associated with Custom Attribute Definitions of type `STRING`.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "enforceUniqueness",
              "description": "If true, each Custom Attribute instance associated with this Custom Attribute\nDefinition must have a unique value within the seller's catalog. For\nexample, this may be used for a value like a SKU that should not be\nduplicated within a seller's catalog. May not be modified after the\ndefinition has been created.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CatalogCustomAttributeType",
          "description": "Defines the possible types for a custom attribute.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "STRING",
              "description": "A free-form string containing up to 255 characters.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BOOLEAN",
              "description": "A `true` or `false` value.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NUMBER",
              "description": "A decimal string representation of a number. Can support up to 5 digits after the decimal point.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SELECTION",
              "description": "One or more choices from `allowed_selections`.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogCustomAttributeValue",
          "description": "An instance of a custom attribute.\nCustom attributes can be defined and added to ITEM and ITEM_VARIATION type catalog objects.\n\nPermissions:ITEMS_READ",
          "fields": [
            {
              "name": "definition",
              "description": "Contains information defining a custom attribute.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogCustomAttributeDefinition",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": "Provides information for CatalogCustomAttributeValue.value",
              "args": [],
              "type": {
                "kind": "UNION",
                "name": "CatalogCustomAttributeValueUnion",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "UNION",
          "name": "CatalogCustomAttributeValueUnion",
          "description": "Provides information for CatalogCustomAttributeValue.value.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "CatalogCustomAttributeBoolean",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogCustomAttributeString",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogCustomAttributeNumber",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogCustomAttributeSelection",
              "ofType": null
            }
          ]
        },
        {
          "kind": "OBJECT",
          "name": "CatalogDiscount",
          "description": "A discount applicable to items.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "name",
              "description": "The discount name. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "discountType",
              "description": "Indicates whether the discount is a fixed amount or percentage, or entered at the time of sale.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CatalogDiscountType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "amountMoney",
              "description": "The amount of the discount. Specify an amount of `0` if `discount_type` is `VARIABLE_AMOUNT`.\n\nDo not use this field for percentage-based or variable discounts.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pinRequired",
              "description": "Indicates whether a mobile staff member needs to enter their PIN to apply the\ndiscount to a payment in the Square Point of Sale app.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "modifyTaxBasis",
              "description": "Indicates whether this discount should reduce the price used to calculate tax.\n\nMost discounts should use `MODIFY_TAX_BASIS`. However, in some circumstances taxes must\nbe calculated based on an item's price, ignoring a particular discount. For example,\nin many US jurisdictions, a manufacturer coupon or instant rebate reduces the price a\ncustomer pays but does not reduce the sale price used to calculate how much sales tax is\ndue. In this case, the discount representing that manufacturer coupon should have\n`DO_NOT_MODIFY_TAX_BASIS` for this field.\n\nIf you are unsure whether you need to use this field, consult your tax professional.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CatalogDiscountModifyTaxBasis",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "maximumAmountMoney",
              "description": "For a percentage discount, the maximum absolute value of the discount. For example, if a\n50% discount has a `maximum_amount_money` of $20, a $100 purchase will yield a $20 discount,\nnot a $50 discount.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "labelColor",
              "description": "The color of the discount display label in the Square Point of Sale app. This must be a valid hex color code.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "HexColor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "percentage",
              "description": "The percentage of the discount as a string representation of a decimal number, using a `.` as the decimal\nseparator and without a `%` sign. A value of `7.5` corresponds to `7.5%`. Specify a percentage of `0` if `discount_type`\nis `VARIABLE_PERCENTAGE`.\n\nDo not use this field for amount-based or variable discounts.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Decimal",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "An identifier to reference this object in the catalog. When a new CatalogObject is inserted, the client should set the id to a temporary identifier starting with a '#' character. Other objects being inserted or updated within the same request may use this identifier to refer to the new object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. For the REST API, when a new CatalogObject in inserted, the version supplied must match the version in the database otherwise the write will be rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogV1Ids",
              "description": "The Connect v1 IDs for this object at each location where it is present, where they differ from the object's Connect V2 ID. The field will only be present for objects that have been created or modified by legacy APIs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "If true, the object has been deleted from the database. Must be false for new objects being inserted. When deleted, updatedAt will equal the deletion time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Last modification timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "This value will always be null. Custom attributes do not apply to this object",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "absentAt",
              "description": "A list of locations where the object is not present, even if presentAtAll is true. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAt",
              "description": "A list of locations where the object is present, even if presentAtAll is false. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAtAll",
              "description": "If true, this object is present at all locations (including future locations), except where specified in absentAt. If false, this object is not present at any locations (including future locations), except where specified in presentAt. If not specified, defaults to true.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "CatalogObject",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CatalogDiscountModifyTaxBasis",
          "description": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "MODIFY_TAX_BASIS",
              "description": "Application of the discount will modify the tax basis.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DO_NOT_MODIFY_TAX_BASIS",
              "description": "Application of the discount will not modify the tax basis.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CatalogDiscountType",
          "description": "How to apply a CatalogDiscount to a CatalogItem.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "FIXED_PERCENTAGE",
              "description": "Apply the discount as a fixed percentage (e.g., 5%) off the item price.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIXED_AMOUNT",
              "description": "Apply the discount as a fixed amount (e.g., $1.00) off the item price.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VARIABLE_PERCENTAGE",
              "description": "Apply the discount as a variable percentage off the item price. The percentage will be specified at the time of sale.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VARIABLE_AMOUNT",
              "description": "Apply the discount as a variable amount off the item price. The amount will be specified at the time of sale.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogEcomSeoData",
          "description": "SEO data for for a seller's Square Online store.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "pageTitle",
              "description": "The SEO title used for the Square Online store.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageDescription",
              "description": "The SEO description used for the Square Online store.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "permalink",
              "description": "The SEO permalink used for the Square Online store.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogImage",
          "description": "An image file to use in Square catalogs.It can be associated with\n`CatalogItem`, `CatalogItemVariation`, `CatalogCategory`, and `CatalogModifierList` objects.\nOnly the images on items and item variations are exposed in Dashboard.\nOnly the first image on an item is displayed in Square Point of Sale (SPOS).\nImages on items and variations are displayed through Square Online Store.\nImages on other object types are for use by 3rd party application developers.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "name",
              "description": "The internal name to identify this image in calls to the Square API.\nThis is a searchable attribute for use in applicable query filters\nusing the [SearchCatalogObjects](api-endpoint:Catalog-SearchCatalogObjects).\nIt is not unique and should not be shown in a buyer facing context.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "caption",
              "description": "A caption that describes what is shown in the image. Displayed in the\nSquare Online Store. This is a searchable attribute for use in applicable query filters\nusing the [SearchCatalogObjects](api-endpoint:Catalog-SearchCatalogObjects).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "photoStudioOrderId",
              "description": "The immutable order ID for this image object created by the Photo Studio service in Square Online Store.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The URL of this image, generated by Square after an image is uploaded\nusing the [CreateCatalogImage](api-endpoint:Catalog-CreateCatalogImage) endpoint.\nTo modify the image, use the UpdateCatalogImage endpoint. Do not change the URL field.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Url",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "An identifier to reference this object in the catalog. When a new CatalogObject is inserted, the client should set the id to a temporary identifier starting with a '#' character. Other objects being inserted or updated within the same request may use this identifier to refer to the new object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. For the REST API, when a new CatalogObject in inserted, the version supplied must match the version in the database otherwise the write will be rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogV1Ids",
              "description": "The Connect v1 IDs for this object at each location where it is present, where they differ from the object's Connect V2 ID. The field will only be present for objects that have been created or modified by legacy APIs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "If true, the object has been deleted from the database. Must be false for new objects being inserted. When deleted, updatedAt will equal the deletion time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Last modification timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "This value will always be null. Custom attributes do not apply to this object",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "absentAt",
              "description": "A list of locations where the object is not present, even if presentAtAll is true. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAt",
              "description": "A list of locations where the object is present, even if presentAtAll is false. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAtAll",
              "description": "If true, this object is present at all locations (including future locations), except where specified in absentAt. If false, this object is not present at any locations (including future locations), except where specified in presentAt. If not specified, defaults to true.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "CatalogObject",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogItem",
          "description": "An CatalogObject instance of the ITEM type, also referred to as an item, in the catalog.\n\nPermissions:ITEMS_READ",
          "fields": [
            {
              "name": "name",
              "description": "The item's name. This is a searchable attribute for use in applicable query filters, its value must not be empty, and the length is of Unicode code points.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "The item's description. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points.\n\nDeprecated at 2022-07-20, this field is planned to retire in 6 months. You should migrate to use `description_html` to set the description\nof the CatalogItem instance.  The `description` and `description_html` field values are kept in sync. If you try to\nset the both fields, the `description_html` text value overwrites the `description` value. Updates in one field are also reflected in the other,\nexcept for when you use an early version before Square API 2022-07-20 and `description_html` is set to blank, setting the `description` value to null\ndoes not nullify `description_html`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "abbreviation",
              "description": "The text of the item's display label in the Square Point of Sale app. Only up to the first five characters of the string are used.\nThis attribute is searchable, and its value length is of Unicode code points.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "availableOnline",
              "description": "If `true`, the item can be added to shipping orders from the merchant's online store.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "availableForPickup",
              "description": "If `true`, the item can be added to pickup orders from the merchant's online store.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "availableElectronically",
              "description": "If `true`, the item can be added to electronically fulfilled orders from the merchant's online store.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "productType",
              "description": "The product type of the item. Once set, the `product_type` value cannot be modified.\n\nItems of the `LEGACY_SQUARE_ONLINE_SERVICE` and `LEGACY_SQUARE_ONLINE_MEMBERSHIP` product types can be updated\nbut cannot be created using the API.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CatalogItemProductType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "skipModifierScreen",
              "description": "If `false`, the Square Point of Sale app will present the `CatalogItem`'s\ndetails screen immediately, allowing the merchant to choose `CatalogModifier`s\nbefore adding the item to the cart.  This is the default behavior.\n\nIf `true`, the Square Point of Sale app will immediately add the item to the cart with the pre-selected\nmodifiers, and merchants can edit modifiers by drilling down onto the item's details.\n\nThird-party clients are encouraged to implement similar behaviors.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sortName",
              "description": "A name to sort the item by. If this name is unspecified, namely, the `sort_name` field is absent, the regular `name` field is used for sorting.\nIts value must not be empty.\n\nIt is currently supported for sellers of the Japanese locale only.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "categories",
              "description": "The list of categories.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogObjectCategory",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "descriptionHtml",
              "description": "The item's description as expressed in valid HTML elements. The length of this field value, including those of HTML tags,\nis of Unicode points. With application query filters, the text values of the HTML elements and attributes are searchable. Invalid or\nunsupported HTML elements or attributes are ignored.\n\nSupported HTML elements include:\n- `a`: Link. Supports linking to website URLs, email address, and telephone numbers.\n- `b`, `strong`:  Bold text\n- `br`: Line break\n- `code`: Computer code\n- `div`: Section\n- `h1-h6`: Headings\n- `i`, `em`: Italics\n- `li`: List element\n- `ol`: Numbered list\n- `p`: Paragraph\n- `ul`: Bullet list\n- `u`: Underline\n\n\nSupported HTML attributes include:\n- `align`: Alignment of the text content\n- `href`: Link destination\n- `rel`: Relationship between link's target and source\n- `target`: Place to open the linked document",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "descriptionPlaintext",
              "description": "A server-generated plaintext version of the `description_html` field, without formatting tags.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "channels",
              "description": "A list of IDs representing channels, such as a Square Online site, where the item can be made visible or available.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isArchived",
              "description": "Indicates whether this item is archived (`true`) or not (`false`).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ecomSeoData",
              "description": "The SEO data for a seller's Square Online store.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogEcomSeoData",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "foodAndBeverageDetails",
              "description": "The food and beverage-specific details for the `FOOD_AND_BEV` item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogItemFoodAndBeverageDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reportingCategory",
              "description": "The item's reporting category.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogObjectCategory",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "labelColor",
              "description": "The color of the item's display label in the Square Point of Sale app. This must be a valid hex color code.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "HexColor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "category",
              "description": "The ID of the item's category, if any. Deprecated since 2023-12-13. Use `CatalogItem.categories`, instead.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogCategory",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Will be removed on 2024-04-17. Use `categories` instead."
            },
            {
              "name": "options",
              "description": "List of item options IDs for this item. Used to manage and group item\nvariations in a specified order.\n\nMaximum: 6 item options.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogItemOption",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "taxes",
              "description": "A set of IDs indicating the taxes enabled for\nthis item. When updating an item, any taxes listed here will be added to the item.\nTaxes may also be added to or deleted from an item using `UpdateItemTaxes`.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogTax",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "variations",
              "description": "A list of CatalogItemVariation objects for this item. An item must have\nat least one variation.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogItemVariation",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "images",
              "description": "The IDs of images associated with this `CatalogItem` instance.\nThese images will be shown to customers in Square Online Store.\nThe first image will show up as the icon for this item in POS.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogImage",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "modifierListInfos",
              "description": "A set of `CatalogItemModifierListInfo` objects\nrepresenting the modifier lists that apply to this item, along with the overrides and min\nand max limits that are specific to this item. Modifier lists\nmay also be added to or deleted from an item using `UpdateItemModifierLists`.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogItemModifierListInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "An identifier to reference this object in the catalog. When a new CatalogObject is inserted, the client should set the id to a temporary identifier starting with a \"#\" character. Other objects being inserted or updated within the same request may use this identifier to refer to the new object.\nWhen the server receives the new object, it will supply a unique identifier that replaces the temporary identifier for all future references.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. For the REST API, when a new CatalogObject in inserted, the version supplied must match the version in the database otherwise the write will be rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogV1Ids",
              "description": "The Connect v1 IDs for this object at each location where it is present, where they differ from the object's Connect V2 ID. The field will only be present for objects that have been created or modified by legacy APIs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "If true, the object has been deleted from the database. Must be false for new objects being inserted. When deleted, updatedAt will equal the deletion time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Last modification timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "This value will always be null. Custom attributes do not apply to this object",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "absentAt",
              "description": "A list of locations where the object is not present, even if presentAtAll is true. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAt",
              "description": "A list of locations where the object is present, even if presentAtAll is false. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAtAll",
              "description": "If true, this object is present at all locations (including future locations), except where specified in absentAt. If false, this object is not present at any locations (including future locations), except where specified in presentAt. If not specified, defaults to true.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "CatalogObject",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogItemConnection",
          "description": "Contains information of items query result.\n\nPermissions:ITEMS_READ",
          "fields": [
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "List of CatalogItems",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CatalogItem",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CatalogItemFilter",
          "description": "Used for filtering results for Items of CatalogQueries",
          "fields": null,
          "inputFields": [
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "categoryId",
              "description": "Filters for CatalogItems that belong to one of the specified CatalogCategory's.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "customAttribute",
              "description": "The customer attribute filter to return items or item variations matching the specified custom attribute expressions.\nA maximum number of 10 custom attribute expressions are supported in a single call.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "CatalogCustomAttributeFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "enabledLocationId",
              "description": "The enabled location IDs. An item must be enabled at all of the Location IDs listed here.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "productType",
              "description": "The product types query expression to return items having the specified product types.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CatalogItemProductTypeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "stockLevel",
              "description": "The stock-level query expression to return items with the specified stock levels in their variations",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CatalogStockLevel",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "text",
              "description": "The text filter expression to return items containing specified text in the name, description,\nor abbreviation attribute value of an item, or in the name, sku, or upc attribute value of an item variation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "archivedState",
              "description": "The query filter to return not archived (ARCHIVED_STATE_NOT_ARCHIVED), archived (ARCHIVED_STATE_ARCHIVED), or either type (ARCHIVED_STATE_ALL) of items.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ArchivedStateFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogItemFoodAndBeverageDetails",
          "description": "The food and beverage-specific details of a `FOOD_AND_BEV` item.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "calorieCount",
              "description": "The calorie count (in the unit of kcal) for the `FOOD_AND_BEV` type of items.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "dietaryPreferences",
              "description": "The dietary preferences for the `FOOD_AND_BEV` item.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogItemFoodAndBeverageDetailsDietaryPreference",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ingredients",
              "description": "The ingredients for the `FOOD_AND_BEV` type item.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogItemFoodAndBeverageDetailsIngredient",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogItemFoodAndBeverageDetailsDietaryPreference",
          "description": "Dietary preferences that can be assigned to an `FOOD_AND_BEV` item and its ingredients.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "type",
              "description": "The dietary preference type. Supported values include `STANDARD` and `CUSTOM` as specified in `FoodAndBeverageDetails.DietaryPreferenceType`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CatalogItemFoodAndBeverageDetailsDietaryPreferenceType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "standardName",
              "description": "The name of the dietary preference from a standard pre-defined list. This should be null if it's a custom dietary preference.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customName",
              "description": "The name of a user-defined custom dietary preference. This should be null if it's a standard dietary preference.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference",
          "description": "Standard dietary preferences for food and beverage items that are recommended on item creation.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DAIRY_FREE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GLUTEN_FREE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HALAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KOSHER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NUT_FREE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VEGAN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VEGETARIAN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CatalogItemFoodAndBeverageDetailsDietaryPreferenceType",
          "description": "The type of dietary preference for the `FOOD_AND_BEV` type of items and integredients.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "STANDARD",
              "description": "A standard value from a pre-determined list.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUSTOM",
              "description": "A user-defined custom value.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogItemFoodAndBeverageDetailsIngredient",
          "description": "Describes the ingredient used in a `FOOD_AND_BEV` item.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "type",
              "description": "The dietary preference type of the ingredient. Supported values include `STANDARD` and `CUSTOM` as specified in `FoodAndBeverageDetails.DietaryPreferenceType`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CatalogItemFoodAndBeverageDetailsDietaryPreferenceType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "standardName",
              "description": "The name of the ingredient from a standard pre-defined list. This should be null if it's a custom dietary preference.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customName",
              "description": "The name of a custom user-defined ingredient. This should be null if it's a standard dietary preference.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient",
          "description": "Standard ingredients for food and beverage items that are recommended on item creation.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CELERY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CRUSTACEANS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EGGS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FISH",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GLUTEN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LUPIN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MILK",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MOLLUSCS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MUSTARD",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PEANUTS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SESAME",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SULPHITES",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TREE_NUTS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogItemModifierListInfo",
          "description": "References a text-based modifier or a list of non text-based modifiers applied to a `CatalogItem` instance\nand specifies supported behaviors of the application.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "modifierOverrides",
              "description": "A set of `CatalogModifierOverride` objects that override whether a given `CatalogModifier` is enabled by default.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogModifierOverride",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "enabled",
              "description": "If `true`, enable this `CatalogModifierList`. The default value is `true`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ordinal",
              "description": "The position of this `CatalogItemModifierListInfo` object within the `modifier_list_info` list applied \nto a `CatalogItem` instance.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "modifierList",
              "description": "The ID of the `CatalogModifierList` controlled by this `CatalogModifierListInfo`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogModifierList",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "minSelectedModifiers",
              "description": "If 0 or larger, the smallest number of `CatalogModifier`s that must be selected from this `CatalogModifierList`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "maxSelectedModifiers",
              "description": "If 0 or larger, the largest number of `CatalogModifier`s that can be selected from this `CatalogModifierList`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogItemOption",
          "description": "A group of variations for a `CatalogItem`.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "name",
              "description": "The item option's display name for the seller. Must be unique across\nall item options. This is a searchable attribute for use in applicable query filters.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "displayName",
              "description": "The item option's display name for the customer. This is a searchable attribute for use in applicable query filters.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "The item option's human-readable description. Displayed in the Square\nPoint of Sale app for the seller and in the Online Store or on receipts for\nthe buyer. This is a searchable attribute for use in applicable query filters.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "showColors",
              "description": "If true, display colors for entries in `values` when present.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "values",
              "description": "A list of CatalogObjects containing the\n`CatalogItemOptionValue`s for this item.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogItemOptionValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "An identifier to reference this object in the catalog. When a new CatalogObject is inserted, the client should set the id to a temporary identifier starting with a '#' character. Other objects being inserted or updated within the same request may use this identifier to refer to the new object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. For the REST API, when a new CatalogObject in inserted, the version supplied must match the version in the database otherwise the write will be rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogV1Ids",
              "description": "The Connect v1 IDs for this object at each location where it is present, where they differ from the object's Connect V2 ID. The field will only be present for objects that have been created or modified by legacy APIs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "If true, the object has been deleted from the database. Must be false for new objects being inserted. When deleted, updatedAt will equal the deletion time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Last modification timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "This value will always be null. Custom attributes do not apply to this object",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "absentAt",
              "description": "A list of locations where the object is not present, even if presentAtAll is true. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAt",
              "description": "A list of locations where the object is present, even if presentAtAll is false. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAtAll",
              "description": "If true, this object is present at all locations (including future locations), except where specified in absentAt. If false, this object is not present at any locations (including future locations), except where specified in presentAt. If not specified, defaults to true.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "CatalogObject",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogItemOptionValue",
          "description": "An enumerated value that can link a\n`CatalogItemVariation` to an item option as one of\nits item option values.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "name",
              "description": "Name of this item option value. This is a searchable attribute for use in applicable query filters.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "A human-readable description for the option value. This is a searchable attribute for use in applicable query filters.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "color",
              "description": "The HTML-supported hex color for the item option (e.g., \"#ff8d4e85\").\nOnly displayed if `show_colors` is enabled on the parent `ItemOption`. When\nleft unset, `color` defaults to white (\"#ffffff\") when `show_colors` is\nenabled on the parent `ItemOption`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "HexColor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ordinal",
              "description": "Determines where this option value appears in a list of option values.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "option",
              "description": "Unique ID of the associated item option.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogItemOption",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "An identifier to reference this object in the catalog. When a new CatalogObject is inserted, the client should set the id to a temporary identifier starting with a '#' character. Other objects being inserted or updated within the same request may use this identifier to refer to the new object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. For the REST API, when a new CatalogObject in inserted, the version supplied must match the version in the database otherwise the write will be rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogV1Ids",
              "description": "The Connect v1 IDs for this object at each location where it is present, where they differ from the object's Connect V2 ID. The field will only be present for objects that have been created or modified by legacy APIs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "If true, the object has been deleted from the database. Must be false for new objects being inserted. When deleted, updatedAt will equal the deletion time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Last modification timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "This value will always be null. Custom attributes do not apply to this object",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "absentAt",
              "description": "A list of locations where the object is not present, even if presentAtAll is true. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAt",
              "description": "A list of locations where the object is present, even if presentAtAll is false. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAtAll",
              "description": "If true, this object is present at all locations (including future locations), except where specified in absentAt. If false, this object is not present at any locations (including future locations), except where specified in presentAt. If not specified, defaults to true.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "CatalogObject",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CatalogItemProductType",
          "description": "The type of a CatalogItem.Connect V2 only allows the creation of `REGULAR` or `APPOINTMENTS_SERVICE` items.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "REGULAR",
              "description": "An ordinary item.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GIFT_CARD",
              "description": "A Square gift card.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "APPOINTMENTS_SERVICE",
              "description": "A service that can be booked using the Square Appointments app.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FOOD_AND_BEV",
              "description": "A food or beverage item that can be sold by restaurants and other food venues.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EVENT",
              "description": "An event which tickets can be sold for, including location, address, and times.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DIGITAL",
              "description": "A digital item like an ebook or song.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DONATION",
              "description": "A donation which site visitors can send for any cause.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LEGACY_SQUARE_ONLINE_SERVICE",
              "description": "A legacy Square Online service that is manually fulfilled. This corresponds to the `Other` item type displayed in the Square Seller Dashboard and Square POS apps.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LEGACY_SQUARE_ONLINE_MEMBERSHIP",
              "description": "A legacy Square Online membership that is manually fulfilled. This corresponds to the `Membership` item type displayed in the Square Seller Dashboard and Square POS apps.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CatalogItemProductTypeFilter",
          "description": "CatalogObjectTypeFilter is used for filtering a query with CatalogItemProductType",
          "fields": null,
          "inputFields": [
            {
              "name": "equalToAnyOf",
              "description": "Used for filtering a query with CatalogItemProductType",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "CatalogItemProductType",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogItemVariation",
          "description": "An item variation, representing a product for sale, in the Catalog object model.Each item must have at least one\nitem variation and can have at most 250 item variations.\n\nAn item variation can be sellable, stockable, or both if it has a unit of measure for its count for the sold number of the variation, the stocked\nnumber of the variation, or both. For example, when a variation representing wine is stocked and sold by the bottle, the variation is both\nstockable and sellable. But when a variation of the wine is sold by the glass, the sold units cannot be used as a measure of the stocked units. This by-the-glass\nvariation is sellable, but not stockable. To accurately keep track of the wine's inventory count at any time, the sellable count must be\nconverted to stockable count. Typically, the seller defines this unit conversion. For example, 1 bottle equals 5 glasses. The Square API exposes\nthe `stockable_conversion` property on the variation to specify the conversion. Thus, when two glasses of the wine are sold, the sellable count\ndecreases by 2, and the stockable count automatically decreases by 0.4 bottle according to the conversion.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "name",
              "description": "The item variation's name. This is a searchable attribute for use in applicable query filters.\n\nIts value has a maximum length of 255 Unicode code points. However, when the parent item\nuses item options, this attribute is auto-generated, read-only, and can be\nlonger than 255 Unicode code points.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sku",
              "description": "The item variation's SKU, if any. This is a searchable attribute for use in applicable query filters.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "upc",
              "description": "The universal product code (UPC) of the item variation, if any. This is a searchable attribute for use in applicable query filters.\n\nThe value of this attribute should be a number of 12-14 digits long.  This restriction is enforced on the Square Seller Dashboard,\nSquare Point of Sale or Retail Point of Sale apps, where this attribute shows in the GTIN field. If a non-compliant UPC value is assigned\nto this attribute using the API, the value is not editable on the Seller Dashboard, Square Point of Sale or Retail Point of Sale apps\nunless it is updated to fit the expected format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pricingType",
              "description": "Indicates whether the item variation's price is fixed or determined at the time\nof sale.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CatalogPricingType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "priceMoney",
              "description": "The item variation's price, if fixed pricing is used.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locationOverrides",
              "description": "Per-location price and inventory overrides.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogItemVariationLocationOverride",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "trackInventory",
              "description": "If `true`, inventory tracking is active for the variation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "userData",
              "description": "Arbitrary user metadata to associate with the item variation. This attribute value length is of Unicode code points.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "serviceDuration",
              "description": "If the `CatalogItem` that owns this item variation is of type\n`APPOINTMENTS_SERVICE`, then this is the duration of the service in milliseconds. For\nexample, a 30 minute appointment would have the value `1800000`, which is equal to\n30 (minutes) * 60 (seconds per minute) * 1000 (milliseconds per second).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "availableForBooking",
              "description": "If the `CatalogItem` that owns this item variation is of type\n`APPOINTMENTS_SERVICE`, a bool representing whether this service is available for booking.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sellable",
              "description": "Whether this variation can be sold. The inventory count of a sellable variation indicates\nthe number of units available for sale. When a variation is both stockable and sellable,\nits sellable inventory count can be smaller than or equal to its stockable count.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "stockable",
              "description": "Whether stock is counted directly on this variation (TRUE) or only on its components (FALSE).\nWhen a variation is both stockable and sellable, the inventory count of a stockable variation keeps track of the number of units of this variation in stock\nand is not an indicator of the number of units of the variation that can be sold.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMemberIds",
              "description": "Tokens of employees that can perform the service represented by this variation. Only valid for\nvariations of type `APPOINTMENTS_SERVICE`.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "stockableConversion",
              "description": "The unit conversion rule, as prescribed by the CatalogStockConversion type,\nthat describes how this non-stockable (i.e., sellable/receivable) item variation is converted\nto/from the stockable item variation sharing the same parent item. With the stock conversion,\nyou can accurately track inventory when an item variation is sold in one unit, but stocked in\nanother unit.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogStockConversion",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ordinal",
              "description": "The order in which this item variation should be displayed. This value is read-only. On writes, the ordinal\nfor each item variation within a parent `CatalogItem` is set according to the item variations's\nposition. On reads, the value is not guaranteed to be sequential or unique.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "item",
              "description": "The ID of the `CatalogItem` associated with this item variation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogItem",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "unit",
              "description": "ID of the ‘CatalogMeasurementUnit’ that is used to measure the quantity\nsold of this item variation. If left unset, the item will be sold in\nwhole quantities.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogMeasurementUnit",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "images",
              "description": "The IDs of images associated with this `CatalogItemVariation` instance.\nThese images will be shown to customers in Square Online Store.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogImage",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "optionValues",
              "description": "List of item option values associated with this item variation. Listed\nin the same order as the item options of the parent item.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogItemOptionValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inventoryAlert",
              "description": "Indicates whether the item variation displays an alert when its inventory quantity is less than or equal\nto its `inventory_alert_threshold`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "InventoryAlert",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "An identifier to reference this object in the catalog. When a new CatalogObject is inserted, the client should set the id to a temporary identifier starting with a \"#\" character. Other objects being inserted or updated within the same request may use this identifier to refer to the new object.\nWhen the server receives the new object, it will supply a unique identifier that replaces the temporary identifier for all future references.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. For the REST API, when a new CatalogObject in inserted, the version supplied must match the version in the database otherwise the write will be rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogV1Ids",
              "description": "The Connect v1 IDs for this object at each location where it is present, where they differ from the object's Connect V2 ID. The field will only be present for objects that have been created or modified by legacy APIs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "If true, the object has been deleted from the database. Must be false for new objects being inserted. When deleted, updatedAt will equal the deletion time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Last modification timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "This value will always be null. Custom attributes do not apply to this object",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "absentAt",
              "description": "A list of locations where the object is not present, even if presentAtAll is true. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAt",
              "description": "A list of locations where the object is present, even if presentAtAll is false. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAtAll",
              "description": "If true, this object is present at all locations (including future locations), except where specified in absentAt. If false, this object is not present at any locations (including future locations), except where specified in presentAt. If not specified, defaults to true.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "CatalogObject",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogItemVariationLocationOverride",
          "description": "Price and inventory alerting overrides for a `CatalogItemVariation` at a specific `Location`.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "priceMoney",
              "description": "The price of the `CatalogItemVariation` at the given `Location`, or blank for variable pricing.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pricingType",
              "description": "The pricing type (fixed or variable) for the `CatalogItemVariation` at the given `Location`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CatalogPricingType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "trackInventory",
              "description": "If `true`, inventory tracking is active for the `CatalogItemVariation` at this `Location`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "soldOut",
              "description": "Indicates whether the overridden item variation is sold out at the specified location.\n\nWhen inventory tracking is enabled on the item variation either globally or at the specified location,\nthe item variation is automatically marked as sold out when its inventory count reaches zero. The seller\ncan manually set the item variation as sold out even when the inventory count is greater than zero.\nAttempts by an application to set this attribute are ignored. Regardless how the sold-out status is set,\napplications should treat its inventory count as zero when this attribute value is `true`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "soldOutValidUntil",
              "description": "The seller-assigned timestamp, of the RFC 3339 format, to indicate when this sold-out variation\nbecomes available again at the specified location. Attempts by an application to set this attribute are ignored.\nWhen the current time is later than this attribute value, the affected item variation is no longer sold out.\n\nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n\nUTC:  2020-01-26T02:25:34Z\n\nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inventoryAlert",
              "description": "Indicates whether the `CatalogItemVariation` displays an alert when its inventory\nquantity is less than or equal to its `inventory_alert_threshold`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "InventoryAlert",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the `Location`. This can include locations that are deactivated.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogMeasurementUnit",
          "description": "Represents the unit used to measure a `CatalogItemVariation` and\nspecifies the precision for decimal quantities.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "precision",
              "description": "An integer between 0 and 5 that represents the maximum number of\npositions allowed after the decimal in quantities measured with this unit.\nFor example:\n\n- if the precision is 0, the quantity can be 1, 2, 3, etc.\n- if the precision is 1, the quantity can be 0.1, 0.2, etc.\n- if the precision is 2, the quantity can be 0.01, 0.12, etc.\n\nDefault: 3",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "unit",
              "description": "Indicates the unit used to measure the quantity of a catalog item variation.",
              "args": [],
              "type": {
                "kind": "UNION",
                "name": "MeasurementUnit",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "An identifier to reference this object in the catalog. When a new CatalogObject is inserted, the client should set the id to a temporary identifier starting with a '#' character. Other objects being inserted or updated within the same request may use this identifier to refer to the new object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. For the REST API, when a new CatalogObject in inserted, the version supplied must match the version in the database otherwise the write will be rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogV1Ids",
              "description": "The Connect v1 IDs for this object at each location where it is present, where they differ from the object's Connect V2 ID. The field will only be present for objects that have been created or modified by legacy APIs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "If true, the object has been deleted from the database. Must be false for new objects being inserted. When deleted, updatedAt will equal the deletion time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Last modification timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "This value will always be null. Custom attributes do not apply to this object",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "absentAt",
              "description": "A list of locations where the object is not present, even if presentAtAll is true. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAt",
              "description": "A list of locations where the object is present, even if presentAtAll is false. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAtAll",
              "description": "If true, this object is present at all locations (including future locations), except where specified in absentAt. If false, this object is not present at any locations (including future locations), except where specified in presentAt. If not specified, defaults to true.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "CatalogObject",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogModifier",
          "description": "A modifier applicable to items at the time of sale.An example of a modifier is a Cheese add-on to a Burger item.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "name",
              "description": "The modifier name.  This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "priceMoney",
              "description": "The modifier price.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locationOverrides",
              "description": "Location-specific price overrides.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ModifierLocationOverride",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ordinal",
              "description": "Determines where this `CatalogModifier` appears in the `CatalogModifierList`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "image",
              "description": "The ID of the image associated with this `CatalogModifier` instance.\nCurrently this image is not displayed by Square, but is free to be displayed in 3rd party applications.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogImage",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "modifierList",
              "description": "The ID of the `CatalogModifierList` associated with this modifier.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogModifierList",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "An identifier to reference this object in the catalog. When a new CatalogObject is inserted, the client should set the id to a temporary identifier starting with a '#' character. Other objects being inserted or updated within the same request may use this identifier to refer to the new object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. For the REST API, when a new CatalogObject in inserted, the version supplied must match the version in the database otherwise the write will be rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogV1Ids",
              "description": "The Connect v1 IDs for this object at each location where it is present, where they differ from the object's Connect V2 ID. The field will only be present for objects that have been created or modified by legacy APIs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "If true, the object has been deleted from the database. Must be false for new objects being inserted. When deleted, updatedAt will equal the deletion time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Last modification timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "This value will always be null. Custom attributes do not apply to this object",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "absentAt",
              "description": "A list of locations where the object is not present, even if presentAtAll is true. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAt",
              "description": "A list of locations where the object is present, even if presentAtAll is false. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAtAll",
              "description": "If true, this object is present at all locations (including future locations), except where specified in absentAt. If false, this object is not present at any locations (including future locations), except where specified in presentAt. If not specified, defaults to true.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "CatalogObject",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogModifierList",
          "description": "For a text-based modifier, this encapsulates the modifier's text when its `modifier_type` is `TEXT`.For example, to sell T-shirts with custom prints, a text-based modifier can be used to capture the buyer-supplied \ntext string to be selected for the T-shirt at the time of sale.\n\nFor non text-based modifiers, this encapsulates a non-empty list of modifiers applicable to items \nat the time of sale. Each element of the modifier list is a `CatalogObject` instance of the `MODIFIER` type.   \nFor example, a \"Condiments\" modifier list applicable to a \"Hot Dog\" item\nmay contain \"Ketchup\", \"Mustard\", and \"Relish\" modifiers. \n\nA non text-based modifier can be applied to the modified item once or multiple times, if the `selection_type` field \nis set to `SINGLE` or `MULTIPLE`, respectively. On the other hand, a text-based modifier can be applied to the item \nonly once and the `selection_type` field is always set to `SINGLE`.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "name",
              "description": "The name of the `CatalogModifierList` instance. This is a searchable attribute for use in applicable query filters, and its value length is of \nUnicode code points.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "selectionType",
              "description": "Indicates whether a single (`SINGLE`) or multiple (`MULTIPLE`) modifiers from the list\ncan be applied to a single `CatalogItem`.\n\nFor text-based modifiers, the `selection_type` attribute is always `SINGLE`. The other value is ignored.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CatalogModifierListSelectionType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "modifierType",
              "description": "The type of the modifier. \n\nWhen this `modifier_type` value is `TEXT`,  the `CatalogModifierList` represents a text-based modifier. \nWhen this `modifier_type` value is `LIST`, the `CatalogModifierList` contains a list of `CatalogModifier` objects.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CatalogModifierListModifierType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "maxLength",
              "description": "The maximum length, in Unicode points, of the text string of the text-based modifier as represented by \nthis `CatalogModifierList` object with the `modifier_type` set to `TEXT`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "textRequired",
              "description": "Whether the text string must be a non-empty string (`true`) or not (`false`) for a text-based modifier\nas represented by this `CatalogModifierList` object with the `modifier_type` set to `TEXT`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "internalName",
              "description": "A note for internal use by the business.   \n\nFor example, for a text-based modifier applied to a T-shirt item, if the buyer-supplied text of \"Hello, Kitty!\"  \nis to be printed on the T-shirt, this `internal_name` attribute can be \"Use italic face\" as \nan instruction for the business to follow.  \n\nFor non text-based modifiers, this `internal_name` attribute can be \nused to include SKUs, internal codes, or supplemental descriptions for internal use.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ordinal",
              "description": "The position of this `CatalogModifierList` within a list of `CatalogModifierList` instances.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "modifiers",
              "description": "A non-empty list of `CatalogModifier` objects to be included in the `CatalogModifierList`, \nfor non text-based modifiers when the `modifier_type` attribute is `LIST`. Each element of this list \nis a `CatalogObject` instance of the `MODIFIER` type, containing the following attributes:\n```\n{\n\"id\": \"{{catalog_modifier_id}}\",\n\"type\": \"MODIFIER\", \n\"modifier_data\": {{a CatalogModifier instance>}} \n}\n```",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogModifier",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "images",
              "description": "The IDs of images associated with this `CatalogModifierList` instance.\nCurrently these images are not displayed on Square products, but may be displayed in 3rd-party applications.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogImage",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "An identifier to reference this object in the catalog. When a new CatalogObject is inserted, the client should set the id to a temporary identifier starting with a '#' character. Other objects being inserted or updated within the same request may use this identifier to refer to the new object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. For the REST API, when a new CatalogObject in inserted, the version supplied must match the version in the database otherwise the write will be rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogV1Ids",
              "description": "The Connect v1 IDs for this object at each location where it is present, where they differ from the object's Connect V2 ID. The field will only be present for objects that have been created or modified by legacy APIs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "If true, the object has been deleted from the database. Must be false for new objects being inserted. When deleted, updatedAt will equal the deletion time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Last modification timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "This value will always be null. Custom attributes do not apply to this object",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "absentAt",
              "description": "A list of locations where the object is not present, even if presentAtAll is true. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAt",
              "description": "A list of locations where the object is present, even if presentAtAll is false. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAtAll",
              "description": "If true, this object is present at all locations (including future locations), except where specified in absentAt. If false, this object is not present at any locations (including future locations), except where specified in presentAt. If not specified, defaults to true.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "CatalogObject",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CatalogModifierListModifierType",
          "description": "Defines the type of `CatalogModifierList`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "LIST",
              "description": "The `CatalogModifierList` instance is a non-empty list of non text-based modifiers.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TEXT",
              "description": "The `CatalogModifierList` instance is a single text-based modifier.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CatalogModifierListSelectionType",
          "description": "Indicates whether a CatalogModifierList supports multiple selections.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "SINGLE",
              "description": "Indicates that a CatalogModifierList allows only a\nsingle CatalogModifier to be selected.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MULTIPLE",
              "description": "Indicates that a CatalogModifierList allows multiple\nCatalogModifier to be selected.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogModifierOverride",
          "description": "Options to control how to override the default behavior of the specified modifier.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "onByDefault",
              "description": "If `true`, this `CatalogModifier` should be selected by default for this `CatalogItem`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "modifier",
              "description": "The ID of the `CatalogModifier` whose default behavior is being overridden.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogModifier",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INTERFACE",
          "name": "CatalogObject",
          "description": "An interface for catalog objects. \nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "id",
              "description": "An identifier to reference this object in the catalog. When a new CatalogObject is inserted, the client should set the id to a temporary identifier starting with a '#' character. Other objects being inserted or updated within the same request may use this identifier to refer to the new object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. For the REST API, when a new CatalogObject in inserted, the version supplied must match the version in the database otherwise the write will be rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogV1Ids",
              "description": "The Connect v1 IDs for this object at each location where it is present, where they differ from the object's Connect V2 ID. The field will only be present for objects that have been created or modified by legacy APIs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "If true, the object has been deleted from the database. Must be false for new objects being inserted. When deleted, updatedAt will equal the deletion time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Last modification timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "This value will always be null. Custom attributes do not apply to this object",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "absentAt",
              "description": "A list of locations where the object is not present, even if presentAtAll is true. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAt",
              "description": "A list of locations where the object is present, even if presentAtAll is false. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAtAll",
              "description": "If true, this object is present at all locations (including future locations), except where specified in absentAt. If false, this object is not present at any locations (including future locations), except where specified in presentAt. If not specified, defaults to true.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "CatalogAvailabilityPeriod",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogCategory",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogCustomAttributeDefinition",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogDiscount",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogImage",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogItem",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogItemOption",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogItemOptionValue",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogItemVariation",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogMeasurementUnit",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogModifier",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogModifierList",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogPricingRule",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogProductSet",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogQuickAmountsSettings",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogSubscriptionPlan",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogSubscriptionPlanVariation",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogTax",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CatalogTimePeriod",
              "ofType": null
            }
          ]
        },
        {
          "kind": "OBJECT",
          "name": "CatalogObjectCategory",
          "description": "A category that can be assigned to an item or a parent category that can be assigned \nto another category.For example, a clothing category can be assigned to a t-shirt item or \nbe made as the parent category to the pants category.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "ordinal",
              "description": "The order of the object within the context of the category.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "category",
              "description": "The ID of the object's category.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogCategory",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogObjectConnection",
          "description": "Contains information of a query result.\n\nPermissions:ITEMS_READ",
          "fields": [
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "List of CatalogObjects",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INTERFACE",
                      "name": "CatalogObject",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CatalogObjectFilter",
          "description": "CatalogObjectFilter is used for querying catalog objects.\n\nThere are rules on what filters can be set at a time.\n1. IdFilter and CatalogObjectTypeFilter do not apply if type specific query such as ItemsForTax, ItemsForModifierList,\nItemsForItemOptions, or ItemVariationsForItemOptionValues is set.\n2. Only 1 type specifc query can be set at a time.\n3. Only one of the followings can exist\n(a) set one type specific query\n(b) set any combinations of 'text', 'prefix', 'exact', 'range' together\n(c) set 'set' query\n4. The rest of filters are logically AND together.s",
          "fields": null,
          "inputFields": [
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "type",
              "description": "A list of object types to retrieve. If the value is nil, it will return all types.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CatalogObjectTypeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "The object IDs of any type of catalog objects to be retrieved. If the value is nil, it will return all catalog objects.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "includeDeleted",
              "description": "If true, deleted objects will be included in the results. Deleted objects will have their isDeleted field set to true.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "sortedAttributes",
              "description": "A query expression to sort/filter returned query result by the given attribute.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CatalogAttributeSort",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "exact",
              "description": "An exact query expression to return objects with attribute name and value matching the specified attribute name and value exactly. Value matching is case insensitive.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CatalogAttributeBasicStringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "prefix",
              "description": "A prefix query expression to return objects with attribute values that have a prefix matching the specified string value. Value maching is case insensitive.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CatalogAttributeBasicStringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "range",
              "description": "A range query expression to return objects with numberic values that lie in the specified range.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CatalogAttributeRangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "set",
              "description": "A set query expression to return objects with attribute name and value matching the specified attribute name and any of the specified attribute values exactly. Value matching is case insensitive.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CatalogAttributeStringSetFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "text",
              "description": "A text query expression to return objects whose searchable attributes contain all of the given keywords, irrespective of their order.\nFor example, if a CatalogItem contains custom attribute values of {\"name\": \"t-shirt\"} and {\"description\": \"Small, Purple\"},\nthe query filter of {\"keywords\": [\"shirt\", \"sma\", \"purp\"]} returns this item. It supports up to 3 values that are at least 3 charater long.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CatalogStringSetFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "itemVariationsForItemOptionValue",
              "description": "A query expression to return CatalogItemVariations that contain all of the specified CatalogItemOption IDs.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "itemsForItemOption",
              "description": "A query expression to return CatalogItems that contains the specified CatalogItemOption IDs.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "itemsForModifierList",
              "description": "A query expression to return CatalogItems that have any of the CatalogModifierLists IDs enabled.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "itemsForTax",
              "description": "A query expression to return CatalogItems that have any of the CatalogTax IDs enabled.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "includeCategoryPathToRoot",
              "description": "Specifies whether or not to include the `path_to_root` list for each returned category instance. The `path_to_root` list consists\nof `CategoryPathToRootNode` objects and specifies the path that starts with the immediate parent category of the returned category\nand ends with its root category. If the returned category is a top-level category, the `path_to_root` list is empty and is not returned\nin the response payload.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogObjectReference",
          "description": "A reference to a Catalog object at a specific version.In general this is\nused as an entry point into a graph of catalog objects, where the objects exist\nat a specific version.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "catalogVersion",
              "description": "The version of the object.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "objectId",
              "description": "The ID of the referenced object.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CatalogObjectType",
          "description": "Possible types of CatalogObjects returned from the catalog, each\ncontaining type-specific properties in the `*_data` field corresponding to the specified object type.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ITEM",
              "description": "The `CatalogObject` instance is of the [CatalogItem](entity:CatalogItem) type and represents an item. The item-specific data\nmust be set on the `item_data` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IMAGE",
              "description": "The `CatalogObject` instance is of the [CatalogImage](entity:CatalogImage) type and represents an image. The image-specific data\nmust be set on the `image_data` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CATEGORY",
              "description": "The `CatalogObject` instance is of the [CatalogCategory](entity:CatalogCategory) type and represents a category. The category-specific data\nmust be set on the `category_data` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEM_VARIATION",
              "description": "The `CatalogObject` instance is of the  [CatalogItemVariation](entity:CatalogItemVariation) type and represents an item variation, also referred to as variation.\nThe item variation-specific data must be set on the `item_variation_data` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TAX",
              "description": "The `CatalogObject` instance is of the [CatalogTax](entity:CatalogTax) type and represents a tax. The tax-specific data\nmust be set on the `tax_data` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DISCOUNT",
              "description": "The `CatalogObject` instance is of the [CatalogDiscount](entity:CatalogDiscount) type and represents a discount. The discount-specific data\nmust be set on the `discount_data` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MODIFIER_LIST",
              "description": "The `CatalogObject` instance is of the [CatalogModifierList](entity:CatalogModifierList) type and represents a modifier list.\nThe modifier-list-specific data must be set on the `modifier_list_data` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MODIFIER",
              "description": "The `CatalogObject` instance is of the [CatalogModifier](entity:CatalogModifier) type and represents a modifier. The modifier-specific data\nmust be set on the `modifier_data` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRICING_RULE",
              "description": "The `CatalogObject` instance is of the [CatalogPricingRule](entity:CatalogPricingRule) type and represents a pricing rule. The pricing-rule-specific data\nmust be set on the `pricing_rule_data` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRODUCT_SET",
              "description": "The `CatalogObject` instance is of the [CatalogProductSet](entity:CatalogProductSet) type and represents a product set.\nThe product-set-specific data will be stored in the `product_set_data` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TIME_PERIOD",
              "description": "The `CatalogObject` instance is of the [CatalogTimePeriod](entity:CatalogTimePeriod) type and represents a time period.\nThe time-period-specific data must be set on the `time_period_data` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MEASUREMENT_UNIT",
              "description": "The `CatalogObject` instance is of the [CatalogMeasurementUnit](entity:CatalogMeasurementUnit) type and represents a measurement unit specifying the unit of\nmeasure and precision in which an item variation is sold. The measurement-unit-specific data must set on the `measurement_unit_data` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUBSCRIPTION_PLAN_VARIATION",
              "description": "The `CatalogObject` instance is of the [CatalogSubscriptionPlan](entity:CatalogSubscriptionPlan) type and represents a subscription plan.\nThe subscription-plan-specific data must be stored on the `subscription_plan_data` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEM_OPTION",
              "description": "The `CatalogObject` instance is of the [CatalogItemOption](entity:CatalogItemOption) type and represents a list of options (such as a color or size of a T-shirt)\nthat can be assigned to item variations. The item-option-specific data must be on the `item_option_data` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEM_OPTION_VAL",
              "description": "The `CatalogObject` instance is of the [CatalogItemOptionValue](entity:CatalogItemOptionValue) type and represents a value associated with one or more item options.\nFor example, an item option of \"Size\" may have item option values such as \"Small\" or \"Medium\".\nThe item-option-value-specific data must be on the `item_option_value_data` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUSTOM_ATTRIBUTE_DEFINITION",
              "description": "The `CatalogObject` instance is of the [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition) type and represents the definition of a custom attribute.\nThe custom-attribute-definition-specific data must be set on the `custom_attribute_definition_data` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "QUICK_AMOUNTS_SETTINGS",
              "description": "The `CatalogObject` instance is of the [CatalogQuickAmountsSettings](entity:CatalogQuickAmountsSettings) type and represents settings to configure preset charges for quick payments at each location.\nFor example, a location may have a list of both AUTO and MANUAL quick amounts that are set to DISABLED.\nThe quick-amounts-settings-specific data must be set on the `quick_amounts_settings_data` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUBSCRIPTION_PLAN",
              "description": "The `CatalogObject` instance is of the [CatalogSubscriptionPlan](entity:CatalogSubscriptionPlan) type and represents a subscription plan.\nThe subscription plan specific data must be stored on the `subscription_plan_data` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AVAILABILITY_PERIOD",
              "description": "The `CatalogObject` instance is of the [CatalogAvailabilityPeriod](entity:CatalogAvailabilityPeriod) type and represents an availability period.\nThe availability period specific data must be stored on the `availability_period_data` field.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CatalogObjectTypeFilter",
          "description": "CatalogObjectTypeFilter is used for filtering a query with CatalogObjectType",
          "fields": null,
          "inputFields": [
            {
              "name": "equalToAnyOf",
              "description": "Used for filtering a query with CatalogObjectType",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "CatalogObjectType",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogPricingRule",
          "description": "Defines how discounts are automatically applied to a set of items that match the pricing rule\nduring the active time period.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "name",
              "description": "User-defined name for the pricing rule. For example, \"Buy one get one\nfree\" or \"10% off\".",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "validFromDate",
              "description": "Represents the date the Pricing Rule is valid from. Represented in RFC 3339 full-date format (YYYY-MM-DD).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "validFromLocalTime",
              "description": "Represents the local time the pricing rule should be valid from. Represented in RFC 3339 partial-time format\n(HH:MM:SS). Partial seconds will be truncated.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "validUntilDate",
              "description": "Represents the date the Pricing Rule is valid until. Represented in RFC 3339 full-date format (YYYY-MM-DD).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "validUntilLocalTime",
              "description": "Represents the local time the pricing rule should be valid until. Represented in RFC 3339 partial-time format\n(HH:MM:SS). Partial seconds will be truncated.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "excludeStrategy",
              "description": "If an `exclude_products_id` was given, controls which subset of matched\nproducts is excluded from any discounts.\n\nDefault value: `LEAST_EXPENSIVE`",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "ExcludeStrategy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "minimumOrderSubtotalMoney",
              "description": "The minimum order subtotal (before discounts or taxes are applied)\nthat must be met before this rule may be applied.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "discount",
              "description": "Unique ID for the `CatalogDiscount` to take off\nthe price of all matched items.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogDiscount",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "matchProducts",
              "description": "Unique ID for the `CatalogProductSet` that will be matched by this rule. A match rule\nmatches within the entire cart, and can match multiple times. This field will always be set.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogProductSet",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "applyProducts",
              "description": "__Deprecated__: Please use the `exclude_products_id` field to apply\nan exclude set instead. Exclude sets allow better control over quantity\nranges and offer more flexibility for which matched items receive a discount.\n\n`CatalogProductSet` to apply the pricing to.\nAn apply rule matches within the subset of the cart that fits the match rules (the match set).\nAn apply rule can only match once in the match set.\nIf not supplied, the pricing will be applied to all products in the match set.\nOther products retain their base price, or a price generated by other rules.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogProductSet",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "excludeProducts",
              "description": "`CatalogProductSet` to exclude from the pricing rule.\nAn exclude rule matches within the subset of the cart that fits the match rules (the match set).\nAn exclude rule can only match once in the match set.\nIf not supplied, the pricing will be applied to all products in the match set.\nOther products retain their base price, or a price generated by other rules.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogProductSet",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "timePeriods",
              "description": "A list of unique IDs for the catalog time periods when\nthis pricing rule is in effect. If left unset, the pricing rule is always\nin effect.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogTimePeriod",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customerGroupIds",
              "description": "A list of IDs of customer groups, the members of which are eligible for discounts specified in this pricing rule.\nNotice that a group ID is generated by the Customers API.\nIf this field is not set, the specified discount applies to matched products sold to anyone whether the buyer\nhas a customer profile created or not. If this `customer_group_ids_any` field is set, the specified discount\napplies only to matched products sold to customers belonging to the specified customer groups.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "An identifier to reference this object in the catalog. When a new CatalogObject is inserted, the client should set the id to a temporary identifier starting with a '#' character. Other objects being inserted or updated within the same request may use this identifier to refer to the new object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. For the REST API, when a new CatalogObject in inserted, the version supplied must match the version in the database otherwise the write will be rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogV1Ids",
              "description": "The Connect v1 IDs for this object at each location where it is present, where they differ from the object's Connect V2 ID. The field will only be present for objects that have been created or modified by legacy APIs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "If true, the object has been deleted from the database. Must be false for new objects being inserted. When deleted, updatedAt will equal the deletion time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Last modification timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "This value will always be null. Custom attributes do not apply to this object",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "absentAt",
              "description": "A list of locations where the object is not present, even if presentAtAll is true. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAt",
              "description": "A list of locations where the object is present, even if presentAtAll is false. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAtAll",
              "description": "If true, this object is present at all locations (including future locations), except where specified in absentAt. If false, this object is not present at any locations (including future locations), except where specified in presentAt. If not specified, defaults to true.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "CatalogObject",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CatalogPricingType",
          "description": "Indicates whether the price of a CatalogItemVariation should be entered manually at the time of sale.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "FIXED_PRICING",
              "description": "The catalog item variation's price is fixed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VARIABLE_PRICING",
              "description": "The catalog item variation's price is entered at the time of sale.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogProductSet",
          "description": "Represents a collection of catalog objects for the purpose of applying a\n`PricingRule`.Including a catalog object will include all of its subtypes.\nFor example, including a category in a product set will include all of its\nitems and associated item variations in the product set. Including an item in\na product set will also include its item variations.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "name",
              "description": "User-defined name for the product set. For example, \"Clearance Items\"\nor \"Winter Sale Items\".",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "quantityExact",
              "description": "If set, there must be exactly this many items from `products_any` or `products_all`\nin the cart for the discount to apply.\n\nCannot be combined with either `quantity_min` or `quantity_max`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "quantityMin",
              "description": "If set, there must be at least this many items from `products_any` or `products_all`\nin a cart for the discount to apply. See `quantity_exact`. Defaults to 0 if\n`quantity_exact`, `quantity_min` and `quantity_max` are all unspecified.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "quantityMax",
              "description": "If set, the pricing rule will apply to a maximum of this many items from\n`products_any` or `products_all`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "allProducts",
              "description": "If set to `true`, the product set will include every item in the catalog.\nOnly one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "allSetProducts",
              "description": "Unique IDs for any `CatalogObject` included in this product set.\nAll objects in this set must be included in an order for a pricing rule to apply.\n\nOnly one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.\n\nMax: 500 catalog object IDs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INTERFACE",
                  "name": "CatalogObject",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "anySetProducts",
              "description": " Unique IDs for any `CatalogObject` included in this product set. Any\nnumber of these catalog objects can be in an order for a pricing rule to apply.\n\nThis can be used with `product_ids_all` in a parent `CatalogProductSet` to\nmatch groups of products for a bulk discount, such as a discount for an\nentree and side combo.\n\nOnly one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.\n\nMax: 500 catalog object IDs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INTERFACE",
                  "name": "CatalogObject",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "An identifier to reference this object in the catalog. When a new CatalogObject is inserted, the client should set the id to a temporary identifier starting with a '#' character. Other objects being inserted or updated within the same request may use this identifier to refer to the new object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. For the REST API, when a new CatalogObject in inserted, the version supplied must match the version in the database otherwise the write will be rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogV1Ids",
              "description": "The Connect v1 IDs for this object at each location where it is present, where they differ from the object's Connect V2 ID. The field will only be present for objects that have been created or modified by legacy APIs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "If true, the object has been deleted from the database. Must be false for new objects being inserted. When deleted, updatedAt will equal the deletion time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Last modification timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "This value will always be null. Custom attributes do not apply to this object",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "absentAt",
              "description": "A list of locations where the object is not present, even if presentAtAll is true. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAt",
              "description": "A list of locations where the object is present, even if presentAtAll is false. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAtAll",
              "description": "If true, this object is present at all locations (including future locations), except where specified in absentAt. If false, this object is not present at any locations (including future locations), except where specified in presentAt. If not specified, defaults to true.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "CatalogObject",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogQuickAmount",
          "description": "Represents a Quick Amount in the Catalog.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "type",
              "description": "Represents the type of the Quick Amount.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CatalogQuickAmountType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "amount",
              "description": "Represents the actual amount of the Quick Amount with Money type.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "score",
              "description": "Describes the ranking of the Quick Amount provided by machine learning model, in the range [0, 100].\nMANUAL type amount will always have score = 100.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ordinal",
              "description": "The order in which this Quick Amount should be displayed.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogQuickAmountsSettings",
          "description": "A parent Catalog Object model represents a set of Quick Amounts and the settings control the amounts.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "option",
              "description": "Represents the option seller currently uses on Quick Amounts.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CatalogQuickAmountsSettingsOption",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "eligibleForAutoAmounts",
              "description": "Represents location's eligibility for auto amounts\nThe boolean should be consistent with whether there are AUTO amounts in the `amounts`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "amounts",
              "description": "Represents a set of Quick Amounts at this location.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogQuickAmount",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "An identifier to reference this object in the catalog. When a new CatalogObject is inserted, the client should set the id to a temporary identifier starting with a '#' character. Other objects being inserted or updated within the same request may use this identifier to refer to the new object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. For the REST API, when a new CatalogObject in inserted, the version supplied must match the version in the database otherwise the write will be rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogV1Ids",
              "description": "The Connect v1 IDs for this object at each location where it is present, where they differ from the object's Connect V2 ID. The field will only be present for objects that have been created or modified by legacy APIs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "If true, the object has been deleted from the database. Must be false for new objects being inserted. When deleted, updatedAt will equal the deletion time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Last modification timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "This value will always be null. Custom attributes do not apply to this object",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "absentAt",
              "description": "A list of locations where the object is not present, even if presentAtAll is true. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAt",
              "description": "A list of locations where the object is present, even if presentAtAll is false. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAtAll",
              "description": "If true, this object is present at all locations (including future locations), except where specified in absentAt. If false, this object is not present at any locations (including future locations), except where specified in presentAt. If not specified, defaults to true.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "CatalogObject",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CatalogQuickAmountsSettingsOption",
          "description": "Determines a seller's option on Quick Amounts feature.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DISABLED",
              "description": "Option for seller to disable Quick Amounts.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MANUAL",
              "description": "Option for seller to choose manually created Quick Amounts.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AUTO",
              "description": "Option for seller to choose automatically created Quick Amounts.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CatalogQuickAmountType",
          "description": "Determines the type of a specific Quick Amount.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "QUICK_AMOUNT_TYPE_MANUAL",
              "description": "Quick Amount is created manually by the seller.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "QUICK_AMOUNT_TYPE_AUTO",
              "description": "Quick Amount is generated automatically by machine learning algorithms.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogServiceCharge",
          "description": "Catalog service charge\n\nPermissions:ORDERS_READ",
          "fields": [
            {
              "name": "id",
              "description": "ID belonging to the service charge.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CatalogSort",
          "description": "CatalogSort is used for sorting the result for items query",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "name_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogStockConversion",
          "description": "Represents the rule of conversion between a stockable CatalogItemVariation\nand a non-stockable sell-by or receive-by `CatalogItemVariation` that\nshare the same underlying stock.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "stockableQuantity",
              "description": "The quantity of the stockable item variation (as identified by `stockable_item_variation_id`)\nequivalent to the non-stockable item variation quantity (as specified in `nonstockable_quantity`)\nas defined by this stock conversion.  It accepts a decimal number in a string format that can take\nup to 10 digits before the decimal point and up to 5 digits after the decimal point.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nonstockableQuantity",
              "description": "The converted equivalent quantity of the non-stockable CatalogItemVariation\nin its measurement unit. The `stockable_quantity` value and this `nonstockable_quantity` value together\ndefine the conversion ratio between stockable item variation and the non-stockable item variation.\nIt accepts a decimal number in a string format that can take up to 10 digits before the decimal point\nand up to 5 digits after the decimal point.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "stockableItemVariation",
              "description": "References to the stockable CatalogItemVariation\nfor this stock conversion. Selling, receiving or recounting the non-stockable `CatalogItemVariation`\ndefined with a stock conversion results in adjustments of this stockable `CatalogItemVariation`.\nThis immutable field must reference a stockable `CatalogItemVariation`\nthat shares the parent CatalogItem of the converted `CatalogItemVariation.`",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogItemVariation",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CatalogStockLevel",
          "description": "Defines supported stock levels of the item inventory.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "OUT",
              "description": "The item inventory is empty.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOW",
              "description": "The item inventory is low.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CatalogStringSetFilter",
          "description": "CatalogStringSetFilter is used for filtering a query with a string set or arrays",
          "fields": null,
          "inputFields": [
            {
              "name": "value",
              "description": "The values belonging to the query text filter.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogSubscriptionPlan",
          "description": "Describes a subscription plan.A subscription plan represents what you want to sell in a subscription model, and includes references to each of the associated subscription plan variations.\nFor more information, see [Subscription Plans and Variations](https://developer.squareup.com/docs/subscriptions-api/plans-and-variations).\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "name",
              "description": "The name of the plan.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "phases",
              "description": "A list of SubscriptionPhase containing the SubscriptionPhase for this plan.\nThis field it required. Not including this field will throw a REQUIRED_FIELD_MISSING error",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "SubscriptionPhase",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "allItems",
              "description": "If true, all items in the merchant's catalog are subscribable by this SubscriptionPlan.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subscriptionPlanVariations",
              "description": "The list of subscription plan variations available for this product",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogSubscriptionPlanVariation",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "eligibleItems",
              "description": "The list of IDs of `CatalogItems` that are eligible for subscription by this SubscriptionPlan's variations.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogItem",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "eligibleCategories",
              "description": "The list of IDs of `CatalogCategory` that are eligible for subscription by this SubscriptionPlan's variations.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCategory",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "An identifier to reference this object in the catalog. When a new CatalogObject is inserted, the client should set the id to a temporary identifier starting with a '#' character. Other objects being inserted or updated within the same request may use this identifier to refer to the new object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. For the REST API, when a new CatalogObject in inserted, the version supplied must match the version in the database otherwise the write will be rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogV1Ids",
              "description": "The Connect v1 IDs for this object at each location where it is present, where they differ from the object's Connect V2 ID. The field will only be present for objects that have been created or modified by legacy APIs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "If true, the object has been deleted from the database. Must be false for new objects being inserted. When deleted, updatedAt will equal the deletion time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Last modification timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "This value will always be null. Custom attributes do not apply to this object",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "absentAt",
              "description": "A list of locations where the object is not present, even if presentAtAll is true. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAt",
              "description": "A list of locations where the object is present, even if presentAtAll is false. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAtAll",
              "description": "If true, this object is present at all locations (including future locations), except where specified in absentAt. If false, this object is not present at any locations (including future locations), except where specified in presentAt. If not specified, defaults to true.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "CatalogObject",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogSubscriptionPlanVariation",
          "description": "Describes a subscription plan variation.A subscription plan variation represents how the subscription for a product or service is sold.\nFor more information, see [Subscription Plans and Variations](https://developer.squareup.com/docs/subscriptions-api/plans-and-variations).\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "name",
              "description": "The name of the plan variation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "phases",
              "description": "A list containing each SubscriptionPhase for this plan variation.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "SubscriptionPhase",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "monthlyBillingAnchorDate",
              "description": "The day of the month the billing period starts.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canProrate",
              "description": "Whether bills for this plan variation can be split for proration.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subscriptionPlan",
              "description": "The id of the subscription plan, if there is one.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogSubscriptionPlan",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "successorPlanVariation",
              "description": "The ID of a \"successor\" plan variation to this one. If the field is set, and this object is disabled at all\nlocations, it indicates that this variation is deprecated and the object identified by the successor ID be used in\nits stead.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogSubscriptionPlanVariation",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "An identifier to reference this object in the catalog. When a new CatalogObject is inserted, the client should set the id to a temporary identifier starting with a '#' character. Other objects being inserted or updated within the same request may use this identifier to refer to the new object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. For the REST API, when a new CatalogObject in inserted, the version supplied must match the version in the database otherwise the write will be rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogV1Ids",
              "description": "The Connect v1 IDs for this object at each location where it is present, where they differ from the object's Connect V2 ID. The field will only be present for objects that have been created or modified by legacy APIs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "If true, the object has been deleted from the database. Must be false for new objects being inserted. When deleted, updatedAt will equal the deletion time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Last modification timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "This value will always be null. Custom attributes do not apply to this object",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "absentAt",
              "description": "A list of locations where the object is not present, even if presentAtAll is true. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAt",
              "description": "A list of locations where the object is present, even if presentAtAll is false. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAtAll",
              "description": "If true, this object is present at all locations (including future locations), except where specified in absentAt. If false, this object is not present at any locations (including future locations), except where specified in presentAt. If not specified, defaults to true.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "CatalogObject",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogTax",
          "description": "A tax applicable to an item.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "name",
              "description": "The tax's name. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "calculationPhase",
              "description": "Whether the tax is calculated based on a payment's subtotal or total.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "TaxCalculationPhase",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inclusionType",
              "description": "Whether the tax is `ADDITIVE` or `INCLUSIVE`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "TaxInclusionType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appliesToCustomAmounts",
              "description": "If `true`, the fee applies to custom amounts entered into the Square Point of Sale\napp that are not associated with a particular `CatalogItem`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "enabled",
              "description": "A Boolean flag to indicate whether the tax is displayed as enabled (`true`) in the Square Point of Sale app or not (`false`).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "percentage",
              "description": "The percentage of the tax in decimal form, using a `'.'` as the decimal separator and without a `'%'` sign.\nA value of `7.5` corresponds to 7.5%. For a location-specific tax rate, contact the tax authority of the location or a tax consultant.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Decimal",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appliesToProductSet",
              "description": "The ID of a `CatalogProductSet` object. If set, the tax is applicable to all products in the product set.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogProductSet",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "An identifier to reference this object in the catalog. When a new CatalogObject is inserted, the client should set the id to a temporary identifier starting with a '#' character. Other objects being inserted or updated within the same request may use this identifier to refer to the new object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. For the REST API, when a new CatalogObject in inserted, the version supplied must match the version in the database otherwise the write will be rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogV1Ids",
              "description": "The Connect v1 IDs for this object at each location where it is present, where they differ from the object's Connect V2 ID. The field will only be present for objects that have been created or modified by legacy APIs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "If true, the object has been deleted from the database. Must be false for new objects being inserted. When deleted, updatedAt will equal the deletion time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Last modification timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "This value will always be null. Custom attributes do not apply to this object",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "absentAt",
              "description": "A list of locations where the object is not present, even if presentAtAll is true. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAt",
              "description": "A list of locations where the object is present, even if presentAtAll is false. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAtAll",
              "description": "If true, this object is present at all locations (including future locations), except where specified in absentAt. If false, this object is not present at any locations (including future locations), except where specified in presentAt. If not specified, defaults to true.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "CatalogObject",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CatalogTimePeriod",
          "description": "Represents a time period - either a single period or a repeating period.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "event",
              "description": "An iCalendar (RFC 5545) [event](https://tools.ietf.org/html/rfc5545#section-3.6.1), which\nspecifies the name, timing, duration and recurrence of this time period.\n\nExample:\n\n```\nDTSTART:20190707T180000\nDURATION:P2H\nRRULE:FREQ=WEEKLY;BYDAY=MO,WE,FR\n```\n\nOnly `SUMMARY`, `DTSTART`, `DURATION` and `RRULE` fields are supported.\n`DTSTART` must be in local (unzoned) time format. Note that while `BEGIN:VEVENT`\nand `END:VEVENT` is not required in the request. The response will always\ninclude them.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "iCalendarEvent",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "An identifier to reference this object in the catalog. When a new CatalogObject is inserted, the client should set the id to a temporary identifier starting with a '#' character. Other objects being inserted or updated within the same request may use this identifier to refer to the new object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. For the REST API, when a new CatalogObject in inserted, the version supplied must match the version in the database otherwise the write will be rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogV1Ids",
              "description": "The Connect v1 IDs for this object at each location where it is present, where they differ from the object's Connect V2 ID. The field will only be present for objects that have been created or modified by legacy APIs.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "If true, the object has been deleted from the database. Must be false for new objects being inserted. When deleted, updatedAt will equal the deletion time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Last modification timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "This value will always be null. Custom attributes do not apply to this object",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CatalogCustomAttributeValue",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "absentAt",
              "description": "A list of locations where the object is not present, even if presentAtAll is true. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAt",
              "description": "A list of locations where the object is present, even if presentAtAll is false. Only the Location.id will be filled in.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Location",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "presentAtAll",
              "description": "If true, this object is present at all locations (including future locations), except where specified in absentAt. If false, this object is not present at any locations (including future locations), except where specified in presentAt. If not specified, defaults to true.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "CatalogObject",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CategoryPathToRootNode",
          "description": "A node in the path from a retrieved category to its root node.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "categoryName",
              "description": "The category's name.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "category",
              "description": "The category's ID.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogCategory",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CellularDataComponentDetails",
          "description": "Structured data for `CellularData`, set for DeviceComponents of type `CELLULAR_DATA`.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "cellularConnectionType",
              "description": "The type of the cellular connection.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceCellularConnectionType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cellularSignalStrength",
              "description": "A representation of signal strength of the cellular data connection.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceSignalStrengthMeasurement",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ChargeDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of credit card payment captures.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment for the charge.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ChargeDetailsFilterInput",
          "description": "Input type used to specify filters on `ChargeDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment for the charge.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ClearpayPaymentDetails",
          "description": "Permissions: PAYMENTS_READ\n\nAdditional details about Clearpay payments.",
          "fields": [
            {
              "name": "emailAddress",
              "description": "Email address on the buyer's Clearpay account.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "EmailAddress",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ClearpayPaymentDetailsFilterInput",
          "description": "Input type used to specify filters on `ClearpayPaymentDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "emailAddress",
              "description": "Used to filter on the `emailAddress` field:\n\n> Email address on the buyer's Clearpay account.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "EmailAddressFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "Country",
          "description": "Indicates the country associated with another entity, such as a business.\nValues are in [ISO 3166-1-alpha-2 format](http://www.iso.org/iso/home/standards/country_codes.htm).",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AD",
              "description": "Andorra",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AE",
              "description": "United Arab Emirates",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AF",
              "description": "Afghanistan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AG",
              "description": "Antigua and Barbuda",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AI",
              "description": "Anguilla",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AL",
              "description": "Albania",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AM",
              "description": "Armenia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AO",
              "description": "Angola",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AQ",
              "description": "Antartica",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AR",
              "description": "Argentina",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AS",
              "description": "American Samoa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AT",
              "description": "Austria",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AU",
              "description": "Australia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AW",
              "description": "Aruba",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AX",
              "description": "Åland Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AZ",
              "description": "Azerbaijan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BA",
              "description": "Bosnia and Herzegovina",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BB",
              "description": "Barbados",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BD",
              "description": "Bangladesh",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BE",
              "description": "Belgium",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BF",
              "description": "Burkina Faso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BG",
              "description": "Bulgaria",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BH",
              "description": "Bahrain",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BI",
              "description": "Burundi",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BJ",
              "description": "Benin",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BL",
              "description": "Saint Barthélemy",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BM",
              "description": "Bermuda",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BN",
              "description": "Brunei",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BO",
              "description": "Bolivia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BQ",
              "description": "Bonaire",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BR",
              "description": "Brazil",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BS",
              "description": "Bahamas",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BT",
              "description": "Bhutan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BV",
              "description": "Bouvet Island",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BW",
              "description": "Botswana",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BY",
              "description": "Belarus",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BZ",
              "description": "Belize",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CA",
              "description": "Canada",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CC",
              "description": "Cocos Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CD",
              "description": "Democratic Republic of the Congo",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CF",
              "description": "Central African Republic",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CG",
              "description": "Congo",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CH",
              "description": "Switzerland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CI",
              "description": "Ivory Coast",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CK",
              "description": "Cook Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CL",
              "description": "Chile",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CM",
              "description": "Cameroon",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CN",
              "description": "China",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CO",
              "description": "Colombia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CR",
              "description": "Costa Rica",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CU",
              "description": "Cuba",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CV",
              "description": "Cabo Verde",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CW",
              "description": "Curaçao",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CX",
              "description": "Christmas Island",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CY",
              "description": "Cyprus",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CZ",
              "description": "Czechia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DE",
              "description": "Germany",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DJ",
              "description": "Djibouti",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DK",
              "description": "Denmark",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DM",
              "description": "Dominica",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DO",
              "description": "Dominican Republic",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DZ",
              "description": "Algeria",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EC",
              "description": "Ecuador",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EE",
              "description": "Estonia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EG",
              "description": "Egypt",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EH",
              "description": "Western Sahara",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ER",
              "description": "Eritrea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ES",
              "description": "Spain",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ET",
              "description": "Ethiopia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FI",
              "description": "Finland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FJ",
              "description": "Fiji",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FK",
              "description": "Falkland Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FM",
              "description": "Federated States of Micronesia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FO",
              "description": "Faroe Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FR",
              "description": "France",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GA",
              "description": "Gabon",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GB",
              "description": "United Kingdom",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GD",
              "description": "Grenada",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GE",
              "description": "Georgia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GF",
              "description": "French Guiana",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GG",
              "description": "Guernsey",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GH",
              "description": "Ghana",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GI",
              "description": "Gibraltar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GL",
              "description": "Greenland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GM",
              "description": "Gambia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GN",
              "description": "Guinea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GP",
              "description": "Guadeloupe",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GQ",
              "description": "Equatorial Guinea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GR",
              "description": "Greece",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GS",
              "description": "South Georgia and the South Sandwich Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GT",
              "description": "Guatemala",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GU",
              "description": "Guam",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GW",
              "description": "Guinea-Bissau",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GY",
              "description": "Guyana",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HK",
              "description": "Hong Kong",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HM",
              "description": "Heard Island and McDonald Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HN",
              "description": "Honduras",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HR",
              "description": "Croatia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HT",
              "description": "Haiti",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HU",
              "description": "Hungary",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID",
              "description": "Indonesia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IE",
              "description": "Ireland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IL",
              "description": "Israel",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IM",
              "description": "Isle of Man",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IN",
              "description": "India",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IO",
              "description": "British Indian Ocean Territory",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IQ",
              "description": "Iraq",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IR",
              "description": "Iran",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IS",
              "description": "Iceland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IT",
              "description": "Italy",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JE",
              "description": "Jersey",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JM",
              "description": "Jamaica",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JO",
              "description": "Jordan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JP",
              "description": "Japan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KE",
              "description": "Kenya",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KG",
              "description": "Kyrgyzstan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KH",
              "description": "Cambodia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KI",
              "description": "Kiribati",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KM",
              "description": "Comoros",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KN",
              "description": "Saint Kitts and Nevis",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KP",
              "description": "Democratic People's Republic of Korea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KR",
              "description": "Republic of Korea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KW",
              "description": "Kuwait",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KY",
              "description": "Cayman Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KZ",
              "description": "Kazakhstan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LA",
              "description": "Lao People's Democratic Republic",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LB",
              "description": "Lebanon",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LC",
              "description": "Saint Lucia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LI",
              "description": "Liechtenstein",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LK",
              "description": "Sri Lanka",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LR",
              "description": "Liberia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LS",
              "description": "Lesotho",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LT",
              "description": "Lithuania",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LU",
              "description": "Luxembourg",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LV",
              "description": "Latvia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LY",
              "description": "Libya",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MA",
              "description": "Morocco",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MC",
              "description": "Monaco",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MD",
              "description": "Moldova",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ME",
              "description": "Montenegro",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MF",
              "description": "Saint Martin",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MG",
              "description": "Madagascar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MH",
              "description": "Marshall Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MK",
              "description": "North Macedonia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ML",
              "description": "Mali",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MM",
              "description": "Myanmar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MN",
              "description": "Mongolia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MO",
              "description": "Macao",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MP",
              "description": "Northern Mariana Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MQ",
              "description": "Martinique",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MR",
              "description": "Mauritania",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MS",
              "description": "Montserrat",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MT",
              "description": "Malta",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MU",
              "description": "Mauritius",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MV",
              "description": "Maldives",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MW",
              "description": "Malawi",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MX",
              "description": "Mexico",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MY",
              "description": "Malaysia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MZ",
              "description": "Mozambique",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NA",
              "description": "Namibia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NC",
              "description": "New Caledonia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NE",
              "description": "Niger",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NF",
              "description": "Norfolk Island",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NG",
              "description": "Nigeria",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NI",
              "description": "Nicaragua",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NL",
              "description": "Netherlands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NO",
              "description": "Norway",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NP",
              "description": "Nepal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NR",
              "description": "Nauru",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NU",
              "description": "Niue",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NZ",
              "description": "New Zealand",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OM",
              "description": "Oman",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PA",
              "description": "Panama",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PE",
              "description": "Peru",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PF",
              "description": "French Polynesia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PG",
              "description": "Papua New Guinea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PH",
              "description": "Philippines",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PK",
              "description": "Pakistan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PL",
              "description": "Poland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PM",
              "description": "Saint Pierre and Miquelon",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PN",
              "description": "Pitcairn",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PR",
              "description": "Puerto Rico",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PS",
              "description": "Palestine",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PT",
              "description": "Portugal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PW",
              "description": "Palau",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PY",
              "description": "Paraguay",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "QA",
              "description": "Qatar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RE",
              "description": "Réunion",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RO",
              "description": "Romania",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RS",
              "description": "Serbia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RU",
              "description": "Russia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RW",
              "description": "Rwanda",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SA",
              "description": "Saudi Arabia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SB",
              "description": "Solomon Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SC",
              "description": "Seychelles",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SD",
              "description": "Sudan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SE",
              "description": "Sweden",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SG",
              "description": "Singapore",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SH",
              "description": "Saint Helena, Ascension and Tristan da Cunha",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SI",
              "description": "Slovenia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SJ",
              "description": "Svalbard and Jan Mayen",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SK",
              "description": "Slovakia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SL",
              "description": "Sierra Leone",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SM",
              "description": "San Marino",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SN",
              "description": "Senegal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SO",
              "description": "Somalia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SR",
              "description": "Suriname",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SS",
              "description": "South Sudan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ST",
              "description": "Sao Tome and Principe",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SV",
              "description": "El Salvador",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SX",
              "description": "Sint Maarten",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SY",
              "description": "Syrian Arab Republic",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SZ",
              "description": "Eswatini",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TC",
              "description": "Turks and Caicos Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TD",
              "description": "Chad",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TF",
              "description": "French Southern Territories",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TG",
              "description": "Togo",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TH",
              "description": "Thailand",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TJ",
              "description": "Tajikistan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TK",
              "description": "Tokelau",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TL",
              "description": "Timor-Leste",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TM",
              "description": "Turkmenistan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TN",
              "description": "Tunisia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TO",
              "description": "Tonga",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TR",
              "description": "Turkey",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TT",
              "description": "Trinidad and Tobago",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TV",
              "description": "Tuvalu",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TW",
              "description": "Taiwan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TZ",
              "description": "Tanzania",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UA",
              "description": "Ukraine",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UG",
              "description": "Uganda",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UM",
              "description": "United States Minor Outlying Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "US",
              "description": "United States of America",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UY",
              "description": "Uruguay",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UZ",
              "description": "Uzbekistan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VA",
              "description": "Vatican City",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VC",
              "description": "Saint Vincent and the Grenadines",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VE",
              "description": "Venezuela",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VG",
              "description": "British Virgin Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VI",
              "description": "U.S. Virgin Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VN",
              "description": "Vietnam",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VU",
              "description": "Vanuatu",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WF",
              "description": "Wallis and Futuna",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WS",
              "description": "Samoa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "YE",
              "description": "Yemen",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "YT",
              "description": "Mayotte",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZA",
              "description": "South Africa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZM",
              "description": "Zambia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZW",
              "description": "Zimbabwe",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZZ",
              "description": "Unknown",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CountryCode",
          "description": "Indicates the country associated with another entity, such as a business.\nValues are in [ISO 3166-1-alpha-2 format](http://www.iso.org/iso/home/standards/country_codes.htm).",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AD",
              "description": "Andorra",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AE",
              "description": "United Arab Emirates",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AF",
              "description": "Afghanistan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AG",
              "description": "Antigua and Barbuda",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AI",
              "description": "Anguilla",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AL",
              "description": "Albania",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AM",
              "description": "Armenia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AO",
              "description": "Angola",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AQ",
              "description": "Antartica",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AR",
              "description": "Argentina",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AS",
              "description": "American Samoa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AT",
              "description": "Austria",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AU",
              "description": "Australia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AW",
              "description": "Aruba",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AX",
              "description": "Åland Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AZ",
              "description": "Azerbaijan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BA",
              "description": "Bosnia and Herzegovina",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BB",
              "description": "Barbados",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BD",
              "description": "Bangladesh",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BE",
              "description": "Belgium",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BF",
              "description": "Burkina Faso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BG",
              "description": "Bulgaria",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BH",
              "description": "Bahrain",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BI",
              "description": "Burundi",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BJ",
              "description": "Benin",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BL",
              "description": "Saint Barthélemy",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BM",
              "description": "Bermuda",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BN",
              "description": "Brunei",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BO",
              "description": "Bolivia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BQ",
              "description": "Bonaire",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BR",
              "description": "Brazil",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BS",
              "description": "Bahamas",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BT",
              "description": "Bhutan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BV",
              "description": "Bouvet Island",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BW",
              "description": "Botswana",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BY",
              "description": "Belarus",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BZ",
              "description": "Belize",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CA",
              "description": "Canada",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CC",
              "description": "Cocos Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CD",
              "description": "Democratic Republic of the Congo",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CF",
              "description": "Central African Republic",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CG",
              "description": "Congo",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CH",
              "description": "Switzerland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CI",
              "description": "Ivory Coast",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CK",
              "description": "Cook Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CL",
              "description": "Chile",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CM",
              "description": "Cameroon",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CN",
              "description": "China",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CO",
              "description": "Colombia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CR",
              "description": "Costa Rica",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CU",
              "description": "Cuba",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CV",
              "description": "Cabo Verde",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CW",
              "description": "Curaçao",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CX",
              "description": "Christmas Island",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CY",
              "description": "Cyprus",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CZ",
              "description": "Czechia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DE",
              "description": "Germany",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DJ",
              "description": "Djibouti",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DK",
              "description": "Denmark",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DM",
              "description": "Dominica",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DO",
              "description": "Dominican Republic",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DZ",
              "description": "Algeria",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EC",
              "description": "Ecuador",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EE",
              "description": "Estonia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EG",
              "description": "Egypt",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EH",
              "description": "Western Sahara",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ER",
              "description": "Eritrea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ES",
              "description": "Spain",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ET",
              "description": "Ethiopia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FI",
              "description": "Finland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FJ",
              "description": "Fiji",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FK",
              "description": "Falkland Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FM",
              "description": "Federated States of Micronesia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FO",
              "description": "Faroe Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FR",
              "description": "France",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GA",
              "description": "Gabon",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GB",
              "description": "United Kingdom",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GD",
              "description": "Grenada",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GE",
              "description": "Georgia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GF",
              "description": "French Guiana",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GG",
              "description": "Guernsey",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GH",
              "description": "Ghana",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GI",
              "description": "Gibraltar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GL",
              "description": "Greenland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GM",
              "description": "Gambia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GN",
              "description": "Guinea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GP",
              "description": "Guadeloupe",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GQ",
              "description": "Equatorial Guinea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GR",
              "description": "Greece",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GS",
              "description": "South Georgia and the South Sandwich Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GT",
              "description": "Guatemala",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GU",
              "description": "Guam",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GW",
              "description": "Guinea-Bissau",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GY",
              "description": "Guyana",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HK",
              "description": "Hong Kong",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HM",
              "description": "Heard Island and McDonald Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HN",
              "description": "Honduras",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HR",
              "description": "Croatia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HT",
              "description": "Haiti",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HU",
              "description": "Hungary",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID",
              "description": "Indonesia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IE",
              "description": "Ireland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IL",
              "description": "Israel",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IM",
              "description": "Isle of Man",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IN",
              "description": "India",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IO",
              "description": "British Indian Ocean Territory",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IQ",
              "description": "Iraq",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IR",
              "description": "Iran",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IS",
              "description": "Iceland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IT",
              "description": "Italy",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JE",
              "description": "Jersey",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JM",
              "description": "Jamaica",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JO",
              "description": "Jordan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JP",
              "description": "Japan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KE",
              "description": "Kenya",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KG",
              "description": "Kyrgyzstan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KH",
              "description": "Cambodia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KI",
              "description": "Kiribati",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KM",
              "description": "Comoros",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KN",
              "description": "Saint Kitts and Nevis",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KP",
              "description": "Democratic People's Republic of Korea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KR",
              "description": "Republic of Korea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KW",
              "description": "Kuwait",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KY",
              "description": "Cayman Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KZ",
              "description": "Kazakhstan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LA",
              "description": "Lao People's Democratic Republic",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LB",
              "description": "Lebanon",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LC",
              "description": "Saint Lucia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LI",
              "description": "Liechtenstein",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LK",
              "description": "Sri Lanka",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LR",
              "description": "Liberia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LS",
              "description": "Lesotho",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LT",
              "description": "Lithuania",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LU",
              "description": "Luxembourg",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LV",
              "description": "Latvia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LY",
              "description": "Libya",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MA",
              "description": "Morocco",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MC",
              "description": "Monaco",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MD",
              "description": "Moldova",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ME",
              "description": "Montenegro",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MF",
              "description": "Saint Martin",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MG",
              "description": "Madagascar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MH",
              "description": "Marshall Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MK",
              "description": "North Macedonia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ML",
              "description": "Mali",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MM",
              "description": "Myanmar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MN",
              "description": "Mongolia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MO",
              "description": "Macao",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MP",
              "description": "Northern Mariana Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MQ",
              "description": "Martinique",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MR",
              "description": "Mauritania",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MS",
              "description": "Montserrat",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MT",
              "description": "Malta",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MU",
              "description": "Mauritius",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MV",
              "description": "Maldives",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MW",
              "description": "Malawi",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MX",
              "description": "Mexico",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MY",
              "description": "Malaysia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MZ",
              "description": "Mozambique",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NA",
              "description": "Namibia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NC",
              "description": "New Caledonia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NE",
              "description": "Niger",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NF",
              "description": "Norfolk Island",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NG",
              "description": "Nigeria",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NI",
              "description": "Nicaragua",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NL",
              "description": "Netherlands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NO",
              "description": "Norway",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NP",
              "description": "Nepal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NR",
              "description": "Nauru",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NU",
              "description": "Niue",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NZ",
              "description": "New Zealand",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OM",
              "description": "Oman",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PA",
              "description": "Panama",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PE",
              "description": "Peru",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PF",
              "description": "French Polynesia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PG",
              "description": "Papua New Guinea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PH",
              "description": "Philippines",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PK",
              "description": "Pakistan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PL",
              "description": "Poland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PM",
              "description": "Saint Pierre and Miquelon",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PN",
              "description": "Pitcairn",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PR",
              "description": "Puerto Rico",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PS",
              "description": "Palestine",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PT",
              "description": "Portugal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PW",
              "description": "Palau",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PY",
              "description": "Paraguay",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "QA",
              "description": "Qatar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RE",
              "description": "Réunion",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RO",
              "description": "Romania",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RS",
              "description": "Serbia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RU",
              "description": "Russia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RW",
              "description": "Rwanda",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SA",
              "description": "Saudi Arabia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SB",
              "description": "Solomon Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SC",
              "description": "Seychelles",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SD",
              "description": "Sudan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SE",
              "description": "Sweden",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SG",
              "description": "Singapore",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SH",
              "description": "Saint Helena, Ascension and Tristan da Cunha",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SI",
              "description": "Slovenia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SJ",
              "description": "Svalbard and Jan Mayen",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SK",
              "description": "Slovakia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SL",
              "description": "Sierra Leone",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SM",
              "description": "San Marino",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SN",
              "description": "Senegal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SO",
              "description": "Somalia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SR",
              "description": "Suriname",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SS",
              "description": "South Sudan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ST",
              "description": "Sao Tome and Principe",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SV",
              "description": "El Salvador",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SX",
              "description": "Sint Maarten",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SY",
              "description": "Syrian Arab Republic",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SZ",
              "description": "Eswatini",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TC",
              "description": "Turks and Caicos Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TD",
              "description": "Chad",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TF",
              "description": "French Southern Territories",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TG",
              "description": "Togo",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TH",
              "description": "Thailand",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TJ",
              "description": "Tajikistan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TK",
              "description": "Tokelau",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TL",
              "description": "Timor-Leste",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TM",
              "description": "Turkmenistan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TN",
              "description": "Tunisia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TO",
              "description": "Tonga",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TR",
              "description": "Turkey",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TT",
              "description": "Trinidad and Tobago",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TV",
              "description": "Tuvalu",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TW",
              "description": "Taiwan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TZ",
              "description": "Tanzania",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UA",
              "description": "Ukraine",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UG",
              "description": "Uganda",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UM",
              "description": "United States Minor Outlying Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "US",
              "description": "United States of America",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UY",
              "description": "Uruguay",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UZ",
              "description": "Uzbekistan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VA",
              "description": "Vatican City",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VC",
              "description": "Saint Vincent and the Grenadines",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VE",
              "description": "Venezuela",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VG",
              "description": "British Virgin Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VI",
              "description": "U.S. Virgin Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VN",
              "description": "Vietnam",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VU",
              "description": "Vanuatu",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WF",
              "description": "Wallis and Futuna",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WS",
              "description": "Samoa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XT",
              "description": "Test country.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "YE",
              "description": "Yemen",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "YT",
              "description": "Mayotte",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZA",
              "description": "South Africa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZM",
              "description": "Zambia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZW",
              "description": "Zimbabwe",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZZ",
              "description": "Unknown",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CountryCodeFilterInput",
          "description": "Input type used to specify filters on `CountryCode` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CountryCodeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CountryCodeInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CountryCodeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CountryCodeInput",
          "description": "Indicates the country associated with another entity, such as a business.\nValues are in [ISO 3166-1-alpha-2 format](http://www.iso.org/iso/home/standards/country_codes.htm).",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AD",
              "description": "Andorra",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AE",
              "description": "United Arab Emirates",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AF",
              "description": "Afghanistan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AG",
              "description": "Antigua and Barbuda",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AI",
              "description": "Anguilla",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AL",
              "description": "Albania",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AM",
              "description": "Armenia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AO",
              "description": "Angola",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AQ",
              "description": "Antartica",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AR",
              "description": "Argentina",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AS",
              "description": "American Samoa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AT",
              "description": "Austria",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AU",
              "description": "Australia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AW",
              "description": "Aruba",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AX",
              "description": "Åland Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AZ",
              "description": "Azerbaijan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BA",
              "description": "Bosnia and Herzegovina",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BB",
              "description": "Barbados",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BD",
              "description": "Bangladesh",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BE",
              "description": "Belgium",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BF",
              "description": "Burkina Faso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BG",
              "description": "Bulgaria",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BH",
              "description": "Bahrain",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BI",
              "description": "Burundi",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BJ",
              "description": "Benin",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BL",
              "description": "Saint Barthélemy",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BM",
              "description": "Bermuda",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BN",
              "description": "Brunei",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BO",
              "description": "Bolivia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BQ",
              "description": "Bonaire",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BR",
              "description": "Brazil",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BS",
              "description": "Bahamas",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BT",
              "description": "Bhutan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BV",
              "description": "Bouvet Island",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BW",
              "description": "Botswana",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BY",
              "description": "Belarus",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BZ",
              "description": "Belize",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CA",
              "description": "Canada",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CC",
              "description": "Cocos Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CD",
              "description": "Democratic Republic of the Congo",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CF",
              "description": "Central African Republic",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CG",
              "description": "Congo",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CH",
              "description": "Switzerland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CI",
              "description": "Ivory Coast",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CK",
              "description": "Cook Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CL",
              "description": "Chile",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CM",
              "description": "Cameroon",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CN",
              "description": "China",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CO",
              "description": "Colombia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CR",
              "description": "Costa Rica",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CU",
              "description": "Cuba",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CV",
              "description": "Cabo Verde",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CW",
              "description": "Curaçao",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CX",
              "description": "Christmas Island",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CY",
              "description": "Cyprus",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CZ",
              "description": "Czechia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DE",
              "description": "Germany",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DJ",
              "description": "Djibouti",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DK",
              "description": "Denmark",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DM",
              "description": "Dominica",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DO",
              "description": "Dominican Republic",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DZ",
              "description": "Algeria",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EC",
              "description": "Ecuador",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EE",
              "description": "Estonia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EG",
              "description": "Egypt",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EH",
              "description": "Western Sahara",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ER",
              "description": "Eritrea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ES",
              "description": "Spain",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ET",
              "description": "Ethiopia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FI",
              "description": "Finland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FJ",
              "description": "Fiji",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FK",
              "description": "Falkland Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FM",
              "description": "Federated States of Micronesia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FO",
              "description": "Faroe Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FR",
              "description": "France",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GA",
              "description": "Gabon",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GB",
              "description": "United Kingdom",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GD",
              "description": "Grenada",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GE",
              "description": "Georgia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GF",
              "description": "French Guiana",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GG",
              "description": "Guernsey",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GH",
              "description": "Ghana",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GI",
              "description": "Gibraltar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GL",
              "description": "Greenland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GM",
              "description": "Gambia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GN",
              "description": "Guinea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GP",
              "description": "Guadeloupe",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GQ",
              "description": "Equatorial Guinea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GR",
              "description": "Greece",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GS",
              "description": "South Georgia and the South Sandwich Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GT",
              "description": "Guatemala",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GU",
              "description": "Guam",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GW",
              "description": "Guinea-Bissau",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GY",
              "description": "Guyana",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HK",
              "description": "Hong Kong",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HM",
              "description": "Heard Island and McDonald Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HN",
              "description": "Honduras",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HR",
              "description": "Croatia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HT",
              "description": "Haiti",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HU",
              "description": "Hungary",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID",
              "description": "Indonesia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IE",
              "description": "Ireland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IL",
              "description": "Israel",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IM",
              "description": "Isle of Man",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IN",
              "description": "India",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IO",
              "description": "British Indian Ocean Territory",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IQ",
              "description": "Iraq",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IR",
              "description": "Iran",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IS",
              "description": "Iceland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IT",
              "description": "Italy",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JE",
              "description": "Jersey",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JM",
              "description": "Jamaica",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JO",
              "description": "Jordan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JP",
              "description": "Japan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KE",
              "description": "Kenya",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KG",
              "description": "Kyrgyzstan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KH",
              "description": "Cambodia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KI",
              "description": "Kiribati",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KM",
              "description": "Comoros",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KN",
              "description": "Saint Kitts and Nevis",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KP",
              "description": "Democratic People's Republic of Korea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KR",
              "description": "Republic of Korea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KW",
              "description": "Kuwait",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KY",
              "description": "Cayman Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KZ",
              "description": "Kazakhstan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LA",
              "description": "Lao People's Democratic Republic",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LB",
              "description": "Lebanon",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LC",
              "description": "Saint Lucia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LI",
              "description": "Liechtenstein",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LK",
              "description": "Sri Lanka",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LR",
              "description": "Liberia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LS",
              "description": "Lesotho",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LT",
              "description": "Lithuania",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LU",
              "description": "Luxembourg",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LV",
              "description": "Latvia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LY",
              "description": "Libya",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MA",
              "description": "Morocco",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MC",
              "description": "Monaco",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MD",
              "description": "Moldova",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ME",
              "description": "Montenegro",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MF",
              "description": "Saint Martin",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MG",
              "description": "Madagascar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MH",
              "description": "Marshall Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MK",
              "description": "North Macedonia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ML",
              "description": "Mali",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MM",
              "description": "Myanmar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MN",
              "description": "Mongolia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MO",
              "description": "Macao",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MP",
              "description": "Northern Mariana Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MQ",
              "description": "Martinique",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MR",
              "description": "Mauritania",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MS",
              "description": "Montserrat",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MT",
              "description": "Malta",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MU",
              "description": "Mauritius",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MV",
              "description": "Maldives",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MW",
              "description": "Malawi",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MX",
              "description": "Mexico",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MY",
              "description": "Malaysia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MZ",
              "description": "Mozambique",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NA",
              "description": "Namibia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NC",
              "description": "New Caledonia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NE",
              "description": "Niger",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NF",
              "description": "Norfolk Island",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NG",
              "description": "Nigeria",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NI",
              "description": "Nicaragua",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NL",
              "description": "Netherlands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NO",
              "description": "Norway",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NP",
              "description": "Nepal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NR",
              "description": "Nauru",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NU",
              "description": "Niue",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NZ",
              "description": "New Zealand",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OM",
              "description": "Oman",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PA",
              "description": "Panama",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PE",
              "description": "Peru",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PF",
              "description": "French Polynesia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PG",
              "description": "Papua New Guinea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PH",
              "description": "Philippines",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PK",
              "description": "Pakistan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PL",
              "description": "Poland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PM",
              "description": "Saint Pierre and Miquelon",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PN",
              "description": "Pitcairn",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PR",
              "description": "Puerto Rico",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PS",
              "description": "Palestine",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PT",
              "description": "Portugal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PW",
              "description": "Palau",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PY",
              "description": "Paraguay",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "QA",
              "description": "Qatar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RE",
              "description": "Réunion",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RO",
              "description": "Romania",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RS",
              "description": "Serbia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RU",
              "description": "Russia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RW",
              "description": "Rwanda",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SA",
              "description": "Saudi Arabia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SB",
              "description": "Solomon Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SC",
              "description": "Seychelles",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SD",
              "description": "Sudan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SE",
              "description": "Sweden",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SG",
              "description": "Singapore",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SH",
              "description": "Saint Helena, Ascension and Tristan da Cunha",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SI",
              "description": "Slovenia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SJ",
              "description": "Svalbard and Jan Mayen",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SK",
              "description": "Slovakia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SL",
              "description": "Sierra Leone",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SM",
              "description": "San Marino",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SN",
              "description": "Senegal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SO",
              "description": "Somalia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SR",
              "description": "Suriname",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SS",
              "description": "South Sudan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ST",
              "description": "Sao Tome and Principe",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SV",
              "description": "El Salvador",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SX",
              "description": "Sint Maarten",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SY",
              "description": "Syrian Arab Republic",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SZ",
              "description": "Eswatini",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TC",
              "description": "Turks and Caicos Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TD",
              "description": "Chad",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TF",
              "description": "French Southern Territories",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TG",
              "description": "Togo",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TH",
              "description": "Thailand",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TJ",
              "description": "Tajikistan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TK",
              "description": "Tokelau",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TL",
              "description": "Timor-Leste",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TM",
              "description": "Turkmenistan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TN",
              "description": "Tunisia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TO",
              "description": "Tonga",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TR",
              "description": "Turkey",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TT",
              "description": "Trinidad and Tobago",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TV",
              "description": "Tuvalu",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TW",
              "description": "Taiwan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TZ",
              "description": "Tanzania",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UA",
              "description": "Ukraine",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UG",
              "description": "Uganda",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UM",
              "description": "United States Minor Outlying Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "US",
              "description": "United States of America",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UY",
              "description": "Uruguay",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UZ",
              "description": "Uzbekistan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VA",
              "description": "Vatican City",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VC",
              "description": "Saint Vincent and the Grenadines",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VE",
              "description": "Venezuela",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VG",
              "description": "British Virgin Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VI",
              "description": "U.S. Virgin Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VN",
              "description": "Vietnam",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VU",
              "description": "Vanuatu",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WF",
              "description": "Wallis and Futuna",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WS",
              "description": "Samoa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XT",
              "description": "Test country.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "YE",
              "description": "Yemen",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "YT",
              "description": "Mayotte",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZA",
              "description": "South Africa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZM",
              "description": "Zambia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZW",
              "description": "Zimbabwe",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZZ",
              "description": "Unknown",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CountryFilterInput",
          "description": "Input type used to specify filters on `Country` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CountryFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CountryInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CountryFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CountryInput",
          "description": "Indicates the country associated with another entity, such as a business.\nValues are in [ISO 3166-1-alpha-2 format](http://www.iso.org/iso/home/standards/country_codes.htm).",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AD",
              "description": "Andorra",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AE",
              "description": "United Arab Emirates",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AF",
              "description": "Afghanistan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AG",
              "description": "Antigua and Barbuda",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AI",
              "description": "Anguilla",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AL",
              "description": "Albania",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AM",
              "description": "Armenia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AO",
              "description": "Angola",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AQ",
              "description": "Antartica",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AR",
              "description": "Argentina",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AS",
              "description": "American Samoa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AT",
              "description": "Austria",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AU",
              "description": "Australia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AW",
              "description": "Aruba",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AX",
              "description": "Åland Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AZ",
              "description": "Azerbaijan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BA",
              "description": "Bosnia and Herzegovina",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BB",
              "description": "Barbados",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BD",
              "description": "Bangladesh",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BE",
              "description": "Belgium",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BF",
              "description": "Burkina Faso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BG",
              "description": "Bulgaria",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BH",
              "description": "Bahrain",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BI",
              "description": "Burundi",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BJ",
              "description": "Benin",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BL",
              "description": "Saint Barthélemy",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BM",
              "description": "Bermuda",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BN",
              "description": "Brunei",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BO",
              "description": "Bolivia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BQ",
              "description": "Bonaire",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BR",
              "description": "Brazil",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BS",
              "description": "Bahamas",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BT",
              "description": "Bhutan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BV",
              "description": "Bouvet Island",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BW",
              "description": "Botswana",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BY",
              "description": "Belarus",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BZ",
              "description": "Belize",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CA",
              "description": "Canada",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CC",
              "description": "Cocos Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CD",
              "description": "Democratic Republic of the Congo",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CF",
              "description": "Central African Republic",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CG",
              "description": "Congo",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CH",
              "description": "Switzerland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CI",
              "description": "Ivory Coast",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CK",
              "description": "Cook Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CL",
              "description": "Chile",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CM",
              "description": "Cameroon",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CN",
              "description": "China",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CO",
              "description": "Colombia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CR",
              "description": "Costa Rica",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CU",
              "description": "Cuba",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CV",
              "description": "Cabo Verde",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CW",
              "description": "Curaçao",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CX",
              "description": "Christmas Island",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CY",
              "description": "Cyprus",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CZ",
              "description": "Czechia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DE",
              "description": "Germany",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DJ",
              "description": "Djibouti",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DK",
              "description": "Denmark",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DM",
              "description": "Dominica",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DO",
              "description": "Dominican Republic",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DZ",
              "description": "Algeria",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EC",
              "description": "Ecuador",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EE",
              "description": "Estonia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EG",
              "description": "Egypt",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EH",
              "description": "Western Sahara",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ER",
              "description": "Eritrea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ES",
              "description": "Spain",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ET",
              "description": "Ethiopia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FI",
              "description": "Finland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FJ",
              "description": "Fiji",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FK",
              "description": "Falkland Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FM",
              "description": "Federated States of Micronesia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FO",
              "description": "Faroe Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FR",
              "description": "France",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GA",
              "description": "Gabon",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GB",
              "description": "United Kingdom",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GD",
              "description": "Grenada",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GE",
              "description": "Georgia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GF",
              "description": "French Guiana",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GG",
              "description": "Guernsey",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GH",
              "description": "Ghana",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GI",
              "description": "Gibraltar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GL",
              "description": "Greenland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GM",
              "description": "Gambia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GN",
              "description": "Guinea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GP",
              "description": "Guadeloupe",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GQ",
              "description": "Equatorial Guinea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GR",
              "description": "Greece",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GS",
              "description": "South Georgia and the South Sandwich Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GT",
              "description": "Guatemala",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GU",
              "description": "Guam",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GW",
              "description": "Guinea-Bissau",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GY",
              "description": "Guyana",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HK",
              "description": "Hong Kong",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HM",
              "description": "Heard Island and McDonald Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HN",
              "description": "Honduras",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HR",
              "description": "Croatia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HT",
              "description": "Haiti",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HU",
              "description": "Hungary",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ID",
              "description": "Indonesia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IE",
              "description": "Ireland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IL",
              "description": "Israel",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IM",
              "description": "Isle of Man",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IN",
              "description": "India",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IO",
              "description": "British Indian Ocean Territory",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IQ",
              "description": "Iraq",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IR",
              "description": "Iran",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IS",
              "description": "Iceland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IT",
              "description": "Italy",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JE",
              "description": "Jersey",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JM",
              "description": "Jamaica",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JO",
              "description": "Jordan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JP",
              "description": "Japan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KE",
              "description": "Kenya",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KG",
              "description": "Kyrgyzstan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KH",
              "description": "Cambodia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KI",
              "description": "Kiribati",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KM",
              "description": "Comoros",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KN",
              "description": "Saint Kitts and Nevis",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KP",
              "description": "Democratic People's Republic of Korea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KR",
              "description": "Republic of Korea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KW",
              "description": "Kuwait",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KY",
              "description": "Cayman Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KZ",
              "description": "Kazakhstan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LA",
              "description": "Lao People's Democratic Republic",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LB",
              "description": "Lebanon",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LC",
              "description": "Saint Lucia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LI",
              "description": "Liechtenstein",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LK",
              "description": "Sri Lanka",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LR",
              "description": "Liberia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LS",
              "description": "Lesotho",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LT",
              "description": "Lithuania",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LU",
              "description": "Luxembourg",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LV",
              "description": "Latvia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LY",
              "description": "Libya",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MA",
              "description": "Morocco",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MC",
              "description": "Monaco",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MD",
              "description": "Moldova",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ME",
              "description": "Montenegro",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MF",
              "description": "Saint Martin",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MG",
              "description": "Madagascar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MH",
              "description": "Marshall Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MK",
              "description": "North Macedonia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ML",
              "description": "Mali",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MM",
              "description": "Myanmar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MN",
              "description": "Mongolia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MO",
              "description": "Macao",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MP",
              "description": "Northern Mariana Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MQ",
              "description": "Martinique",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MR",
              "description": "Mauritania",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MS",
              "description": "Montserrat",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MT",
              "description": "Malta",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MU",
              "description": "Mauritius",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MV",
              "description": "Maldives",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MW",
              "description": "Malawi",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MX",
              "description": "Mexico",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MY",
              "description": "Malaysia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MZ",
              "description": "Mozambique",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NA",
              "description": "Namibia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NC",
              "description": "New Caledonia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NE",
              "description": "Niger",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NF",
              "description": "Norfolk Island",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NG",
              "description": "Nigeria",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NI",
              "description": "Nicaragua",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NL",
              "description": "Netherlands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NO",
              "description": "Norway",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NP",
              "description": "Nepal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NR",
              "description": "Nauru",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NU",
              "description": "Niue",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NZ",
              "description": "New Zealand",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OM",
              "description": "Oman",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PA",
              "description": "Panama",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PE",
              "description": "Peru",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PF",
              "description": "French Polynesia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PG",
              "description": "Papua New Guinea",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PH",
              "description": "Philippines",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PK",
              "description": "Pakistan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PL",
              "description": "Poland",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PM",
              "description": "Saint Pierre and Miquelon",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PN",
              "description": "Pitcairn",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PR",
              "description": "Puerto Rico",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PS",
              "description": "Palestine",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PT",
              "description": "Portugal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PW",
              "description": "Palau",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PY",
              "description": "Paraguay",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "QA",
              "description": "Qatar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RE",
              "description": "Réunion",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RO",
              "description": "Romania",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RS",
              "description": "Serbia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RU",
              "description": "Russia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RW",
              "description": "Rwanda",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SA",
              "description": "Saudi Arabia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SB",
              "description": "Solomon Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SC",
              "description": "Seychelles",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SD",
              "description": "Sudan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SE",
              "description": "Sweden",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SG",
              "description": "Singapore",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SH",
              "description": "Saint Helena, Ascension and Tristan da Cunha",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SI",
              "description": "Slovenia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SJ",
              "description": "Svalbard and Jan Mayen",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SK",
              "description": "Slovakia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SL",
              "description": "Sierra Leone",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SM",
              "description": "San Marino",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SN",
              "description": "Senegal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SO",
              "description": "Somalia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SR",
              "description": "Suriname",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SS",
              "description": "South Sudan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ST",
              "description": "Sao Tome and Principe",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SV",
              "description": "El Salvador",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SX",
              "description": "Sint Maarten",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SY",
              "description": "Syrian Arab Republic",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SZ",
              "description": "Eswatini",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TC",
              "description": "Turks and Caicos Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TD",
              "description": "Chad",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TF",
              "description": "French Southern Territories",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TG",
              "description": "Togo",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TH",
              "description": "Thailand",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TJ",
              "description": "Tajikistan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TK",
              "description": "Tokelau",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TL",
              "description": "Timor-Leste",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TM",
              "description": "Turkmenistan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TN",
              "description": "Tunisia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TO",
              "description": "Tonga",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TR",
              "description": "Turkey",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TT",
              "description": "Trinidad and Tobago",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TV",
              "description": "Tuvalu",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TW",
              "description": "Taiwan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TZ",
              "description": "Tanzania",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UA",
              "description": "Ukraine",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UG",
              "description": "Uganda",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UM",
              "description": "United States Minor Outlying Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "US",
              "description": "United States of America",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UY",
              "description": "Uruguay",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UZ",
              "description": "Uzbekistan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VA",
              "description": "Vatican City",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VC",
              "description": "Saint Vincent and the Grenadines",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VE",
              "description": "Venezuela",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VG",
              "description": "British Virgin Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VI",
              "description": "U.S. Virgin Islands",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VN",
              "description": "Vietnam",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VU",
              "description": "Vanuatu",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WF",
              "description": "Wallis and Futuna",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WS",
              "description": "Samoa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "YE",
              "description": "Yemen",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "YT",
              "description": "Mayotte",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZA",
              "description": "South Africa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZM",
              "description": "Zambia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZW",
              "description": "Zimbabwe",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZZ",
              "description": "Unknown",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CountryListElementFilterInput",
          "description": "Input type used to specify filters on elements of a `[Country]` field.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CountryListElementFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CountryListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CountryListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "CountryInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CountryListFilterInput",
          "description": "Input type used to specify filters on `[Country]` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CountryListFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CountryListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CountryListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anySatisfy",
              "description": "Matches records where any of the list elements match the provided sub-filter.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CountryListElementFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CountryListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "Currency",
          "description": "Indicates the associated currency for an amount of money.Values correspond\nto [ISO 4217](https://wikipedia.org/wiki/ISO_4217).",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AED",
              "description": "United Arab Emirates dirham",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AFN",
              "description": "Afghan afghani",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ALL",
              "description": "Albanian lek",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AMD",
              "description": "Armenian dram",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ANG",
              "description": "Netherlands Antillean guilder",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AOA",
              "description": "Angolan kwanza",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ARS",
              "description": "Argentine peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AUD",
              "description": "Australian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AWG",
              "description": "Aruban florin",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AZN",
              "description": "Azerbaijani manat",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BAM",
              "description": "Bosnia and Herzegovina convertible mark",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BBD",
              "description": "Barbados dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BDT",
              "description": "Bangladeshi taka",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BGN",
              "description": "Bulgarian lev",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BHD",
              "description": "Bahraini dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BIF",
              "description": "Burundian franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BMD",
              "description": "Bermudian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BND",
              "description": "Brunei dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BOB",
              "description": "Boliviano",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BOV",
              "description": "Bolivian Mvdol",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BRL",
              "description": "Brazilian real",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BSD",
              "description": "Bahamian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BTC",
              "description": "Bitcoin",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BTN",
              "description": "Bhutanese ngultrum",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BWP",
              "description": "Botswana pula",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BYR",
              "description": "Belarusian ruble",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BZD",
              "description": "Belize dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CAD",
              "description": "Canadian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CDF",
              "description": "Congolese franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHE",
              "description": "WIR Euro",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHF",
              "description": "Swiss franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHW",
              "description": "WIR Franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLF",
              "description": "Unidad de Fomento",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLP",
              "description": "Chilean peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CNY",
              "description": "Chinese yuan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COP",
              "description": "Colombian peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COU",
              "description": "Unidad de Valor Real",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CRC",
              "description": "Costa Rican colon",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUC",
              "description": "Cuban convertible peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUP",
              "description": "Cuban peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CVE",
              "description": "Cape Verdean escudo",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CZK",
              "description": "Czech koruna",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DJF",
              "description": "Djiboutian franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DKK",
              "description": "Danish krone",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DOP",
              "description": "Dominican peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DZD",
              "description": "Algerian dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EGP",
              "description": "Egyptian pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ERN",
              "description": "Eritrean nakfa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ETB",
              "description": "Ethiopian birr",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EUR",
              "description": "Euro",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FJD",
              "description": "Fiji dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FKP",
              "description": "Falkland Islands pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GBP",
              "description": "Pound sterling",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GEL",
              "description": "Georgian lari",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GHS",
              "description": "Ghanaian cedi",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GIP",
              "description": "Gibraltar pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GMD",
              "description": "Gambian dalasi",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GNF",
              "description": "Guinean franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GTQ",
              "description": "Guatemalan quetzal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GYD",
              "description": "Guyanese dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HKD",
              "description": "Hong Kong dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HNL",
              "description": "Honduran lempira",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HRK",
              "description": "Croatian kuna",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HTG",
              "description": "Haitian gourde",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HUF",
              "description": "Hungarian forint",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IDR",
              "description": "Indonesian rupiah",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ILS",
              "description": "Israeli new shekel",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INR",
              "description": "Indian rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IQD",
              "description": "Iraqi dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IRR",
              "description": "Iranian rial",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ISK",
              "description": "Icelandic króna",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JMD",
              "description": "Jamaican dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JOD",
              "description": "Jordanian dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JPY",
              "description": "Japanese yen",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KES",
              "description": "Kenyan shilling",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KGS",
              "description": "Kyrgyzstani som",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KHR",
              "description": "Cambodian riel",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KMF",
              "description": "Comoro franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KPW",
              "description": "North Korean won",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KRW",
              "description": "South Korean won",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KWD",
              "description": "Kuwaiti dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KYD",
              "description": "Cayman Islands dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KZT",
              "description": "Kazakhstani tenge",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LAK",
              "description": "Lao kip",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LBP",
              "description": "Lebanese pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LKR",
              "description": "Sri Lankan rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LRD",
              "description": "Liberian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LSL",
              "description": "Lesotho loti",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LTL",
              "description": "Lithuanian litas",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LVL",
              "description": "Latvian lats",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LYD",
              "description": "Libyan dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MAD",
              "description": "Moroccan dirham",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MDL",
              "description": "Moldovan leu",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MGA",
              "description": "Malagasy ariary",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MKD",
              "description": "Macedonian denar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MMK",
              "description": "Myanmar kyat",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MNT",
              "description": "Mongolian tögrög",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MOP",
              "description": "Macanese pataca",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MRO",
              "description": "Mauritanian ouguiya",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MUR",
              "description": "Mauritian rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MVR",
              "description": "Maldivian rufiyaa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MWK",
              "description": "Malawian kwacha",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MXN",
              "description": "Mexican peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MXV",
              "description": "Mexican Unidad de Inversion",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MYR",
              "description": "Malaysian ringgit",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MZN",
              "description": "Mozambican metical",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NAD",
              "description": "Namibian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NGN",
              "description": "Nigerian naira",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NIO",
              "description": "Nicaraguan córdoba",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NOK",
              "description": "Norwegian krone",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NPR",
              "description": "Nepalese rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NZD",
              "description": "New Zealand dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OMR",
              "description": "Omani rial",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAB",
              "description": "Panamanian balboa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PEN",
              "description": "Peruvian sol",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PGK",
              "description": "Papua New Guinean kina",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PHP",
              "description": "Philippine peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PKR",
              "description": "Pakistani rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PLN",
              "description": "Polish złoty",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PYG",
              "description": "Paraguayan guaraní",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "QAR",
              "description": "Qatari riyal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RON",
              "description": "Romanian leu",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RSD",
              "description": "Serbian dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RUB",
              "description": "Russian ruble",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RWF",
              "description": "Rwandan franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SAR",
              "description": "Saudi riyal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SBD",
              "description": "Solomon Islands dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCR",
              "description": "Seychelles rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SDG",
              "description": "Sudanese pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SEK",
              "description": "Swedish krona",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SGD",
              "description": "Singapore dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SHP",
              "description": "Saint Helena pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SLL",
              "description": "Sierra Leonean first leone",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOS",
              "description": "Somali shilling",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SRD",
              "description": "Surinamese dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SSP",
              "description": "South Sudanese pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STD",
              "description": "São Tomé and Príncipe dobra",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SVC",
              "description": "Salvadoran colón",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SYP",
              "description": "Syrian pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SZL",
              "description": "Swazi lilangeni",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "THB",
              "description": "Thai baht",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TJS",
              "description": "Tajikstani somoni",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TMT",
              "description": "Turkmenistan manat",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TND",
              "description": "Tunisian dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TOP",
              "description": "Tongan pa'anga",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TRY",
              "description": "Turkish lira",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TTD",
              "description": "Trinidad and Tobago dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TWD",
              "description": "New Taiwan dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TZS",
              "description": "Tanzanian shilling",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UAH",
              "description": "Ukrainian hryvnia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UGX",
              "description": "Ugandan shilling",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_CURRENCY",
              "description": "Unknown currency",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "USD",
              "description": "United States dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "USN",
              "description": "United States dollar (next day)",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "USS",
              "description": "United States dollar (same day)",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UYI",
              "description": "Uruguay Peso en Unidedades Indexadas",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UYU",
              "description": "Uruguyan peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UZS",
              "description": "Uzbekistan som",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VEF",
              "description": "Venezuelan bolívar soberano",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VND",
              "description": "Vietnamese đồng",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VUV",
              "description": "Vanuatu vatu",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WST",
              "description": "Samoan tala",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XAF",
              "description": "CFA franc BEAC",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XAG",
              "description": "Silver",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XAU",
              "description": "Gold",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XBA",
              "description": "European Composite Unit",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XBB",
              "description": "European Monetary Unit",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XBC",
              "description": "European Unit of Account 9",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XBD",
              "description": "European Unit of Account 17",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XCD",
              "description": "East Caribbean dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XDR",
              "description": "Special drawing rights (International Monetary Fund)",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XOF",
              "description": "CFA franc BCEAO",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XPD",
              "description": "Palladium",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XPF",
              "description": "CFP franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XPT",
              "description": "Platinum",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XTS",
              "description": "Code reserved for testing",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XUS",
              "description": "USD Coin",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XXX",
              "description": "No currency",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "YER",
              "description": "Yemeni rial",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZAR",
              "description": "South African rand",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZMK",
              "description": "Zambian kwacha",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZMW",
              "description": "Zambian kwacha",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CurrencyCode",
          "description": "Indicates the associated currency for an amount of money.Values correspond\nto [ISO 4217](https://wikipedia.org/wiki/ISO_4217).",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AED",
              "description": "United Arab Emirates dirham",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AFN",
              "description": "Afghan afghani",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ALL",
              "description": "Albanian lek",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AMD",
              "description": "Armenian dram",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ANG",
              "description": "Netherlands Antillean guilder",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AOA",
              "description": "Angolan kwanza",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ARS",
              "description": "Argentine peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AUD",
              "description": "Australian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AWG",
              "description": "Aruban florin",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AZN",
              "description": "Azerbaijani manat",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BAM",
              "description": "Bosnia and Herzegovina convertible mark",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BBD",
              "description": "Barbados dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BDT",
              "description": "Bangladeshi taka",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BGN",
              "description": "Bulgarian lev",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BHD",
              "description": "Bahraini dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BIF",
              "description": "Burundian franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BMD",
              "description": "Bermudian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BND",
              "description": "Brunei dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BOB",
              "description": "Boliviano",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BOV",
              "description": "Bolivian Mvdol",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BRL",
              "description": "Brazilian real",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BSD",
              "description": "Bahamian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BTC",
              "description": "Bitcoin",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BTN",
              "description": "Bhutanese ngultrum",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BWP",
              "description": "Botswana pula",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BYR",
              "description": "Belarusian ruble",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BZD",
              "description": "Belize dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CAD",
              "description": "Canadian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CDF",
              "description": "Congolese franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHE",
              "description": "WIR Euro",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHF",
              "description": "Swiss franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHW",
              "description": "WIR Franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLF",
              "description": "Unidad de Fomento",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLP",
              "description": "Chilean peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CNY",
              "description": "Chinese yuan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COP",
              "description": "Colombian peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COU",
              "description": "Unidad de Valor Real",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CRC",
              "description": "Costa Rican colon",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUC",
              "description": "Cuban convertible peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUP",
              "description": "Cuban peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CVE",
              "description": "Cape Verdean escudo",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CZK",
              "description": "Czech koruna",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DJF",
              "description": "Djiboutian franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DKK",
              "description": "Danish krone",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DOP",
              "description": "Dominican peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DZD",
              "description": "Algerian dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EGP",
              "description": "Egyptian pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ERN",
              "description": "Eritrean nakfa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ETB",
              "description": "Ethiopian birr",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EUR",
              "description": "Euro",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FJD",
              "description": "Fiji dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FKP",
              "description": "Falkland Islands pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GBP",
              "description": "Pound sterling",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GEL",
              "description": "Georgian lari",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GHS",
              "description": "Ghanaian cedi",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GIP",
              "description": "Gibraltar pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GMD",
              "description": "Gambian dalasi",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GNF",
              "description": "Guinean franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GTQ",
              "description": "Guatemalan quetzal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GYD",
              "description": "Guyanese dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HKD",
              "description": "Hong Kong dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HNL",
              "description": "Honduran lempira",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HRK",
              "description": "Croatian kuna",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HTG",
              "description": "Haitian gourde",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HUF",
              "description": "Hungarian forint",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IDR",
              "description": "Indonesian rupiah",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ILS",
              "description": "Israeli new shekel",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INR",
              "description": "Indian rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IQD",
              "description": "Iraqi dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IRR",
              "description": "Iranian rial",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ISK",
              "description": "Icelandic króna",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JMD",
              "description": "Jamaican dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JOD",
              "description": "Jordanian dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JPY",
              "description": "Japanese yen",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KES",
              "description": "Kenyan shilling",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KGS",
              "description": "Kyrgyzstani som",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KHR",
              "description": "Cambodian riel",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KMF",
              "description": "Comoro franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KPW",
              "description": "North Korean won",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KRW",
              "description": "South Korean won",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KWD",
              "description": "Kuwaiti dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KYD",
              "description": "Cayman Islands dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KZT",
              "description": "Kazakhstani tenge",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LAK",
              "description": "Lao kip",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LBP",
              "description": "Lebanese pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LKR",
              "description": "Sri Lankan rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LRD",
              "description": "Liberian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LSL",
              "description": "Lesotho loti",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LTL",
              "description": "Lithuanian litas",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LVL",
              "description": "Latvian lats",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LYD",
              "description": "Libyan dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MAD",
              "description": "Moroccan dirham",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MDL",
              "description": "Moldovan leu",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MGA",
              "description": "Malagasy ariary",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MKD",
              "description": "Macedonian denar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MMK",
              "description": "Myanmar kyat",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MNT",
              "description": "Mongolian tögrög",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MOP",
              "description": "Macanese pataca",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MRO",
              "description": "Mauritanian ouguiya",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MUR",
              "description": "Mauritian rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MVR",
              "description": "Maldivian rufiyaa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MWK",
              "description": "Malawian kwacha",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MXN",
              "description": "Mexican peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MXV",
              "description": "Mexican Unidad de Inversion",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MYR",
              "description": "Malaysian ringgit",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MZN",
              "description": "Mozambican metical",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NAD",
              "description": "Namibian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NGN",
              "description": "Nigerian naira",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NIO",
              "description": "Nicaraguan córdoba",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NOK",
              "description": "Norwegian krone",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NPR",
              "description": "Nepalese rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NZD",
              "description": "New Zealand dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OMR",
              "description": "Omani rial",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAB",
              "description": "Panamanian balboa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PEN",
              "description": "Peruvian sol",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PGK",
              "description": "Papua New Guinean kina",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PHP",
              "description": "Philippine peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PKR",
              "description": "Pakistani rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PLN",
              "description": "Polish złoty",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PYG",
              "description": "Paraguayan guaraní",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "QAR",
              "description": "Qatari riyal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RON",
              "description": "Romanian leu",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RSD",
              "description": "Serbian dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RUB",
              "description": "Russian ruble",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RWF",
              "description": "Rwandan franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SAR",
              "description": "Saudi riyal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SBD",
              "description": "Solomon Islands dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCR",
              "description": "Seychelles rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SDG",
              "description": "Sudanese pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SEK",
              "description": "Swedish krona",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SGD",
              "description": "Singapore dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SHP",
              "description": "Saint Helena pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SLL",
              "description": "Sierra Leonean first leone",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOS",
              "description": "Somali shilling",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SRD",
              "description": "Surinamese dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SSP",
              "description": "South Sudanese pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STD",
              "description": "São Tomé and Príncipe dobra",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SVC",
              "description": "Salvadoran colón",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SYP",
              "description": "Syrian pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SZL",
              "description": "Swazi lilangeni",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "THB",
              "description": "Thai baht",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TJS",
              "description": "Tajikstani somoni",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TMT",
              "description": "Turkmenistan manat",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TND",
              "description": "Tunisian dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TOP",
              "description": "Tongan pa'anga",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TRY",
              "description": "Turkish lira",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TTD",
              "description": "Trinidad and Tobago dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TWD",
              "description": "New Taiwan dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TZS",
              "description": "Tanzanian shilling",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UAH",
              "description": "Ukrainian hryvnia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UGX",
              "description": "Ugandan shilling",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "USD",
              "description": "United States dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "USN",
              "description": "United States dollar (next day)",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "USS",
              "description": "United States dollar (same day)",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UYI",
              "description": "Uruguay Peso en Unidedades Indexadas",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UYU",
              "description": "Uruguyan peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UZS",
              "description": "Uzbekistan som",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VEF",
              "description": "Venezuelan bolívar soberano",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VND",
              "description": "Vietnamese đồng",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VUV",
              "description": "Vanuatu vatu",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WST",
              "description": "Samoan tala",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XAF",
              "description": "CFA franc BEAC",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XAG",
              "description": "Silver",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XAU",
              "description": "Gold",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XBA",
              "description": "European Composite Unit",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XBB",
              "description": "European Monetary Unit",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XBC",
              "description": "European Unit of Account 9",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XBD",
              "description": "European Unit of Account 17",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XCD",
              "description": "East Caribbean dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XDR",
              "description": "Special drawing rights (International Monetary Fund)",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XOF",
              "description": "CFA franc BCEAO",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XPD",
              "description": "Palladium",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XPF",
              "description": "CFP franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XPT",
              "description": "Platinum",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XTS",
              "description": "Code reserved for testing",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XUS",
              "description": "USD Coin",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XXX",
              "description": "No currency",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "YER",
              "description": "Yemeni rial",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZAR",
              "description": "South African rand",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZMK",
              "description": "Zambian kwacha",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZMW",
              "description": "Zambian kwacha",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CurrencyCodeFilterInput",
          "description": "Input type used to specify filters on `CurrencyCode` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CurrencyCodeFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CurrencyCodeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CurrencyCodeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CurrencyCodeInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CurrencyCodeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CurrencyCodeInput",
          "description": "Indicates the associated currency for an amount of money. Values correspond to\n[ISO 4217](https://wikipedia.org/wiki/ISO_4217), with the exception of BTC (Bitcoin).",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AED",
              "description": "United Arab Emirates dirham",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AFN",
              "description": "Afghan afghani",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ALL",
              "description": "Albanian lek",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AMD",
              "description": "Armenian dram",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ANG",
              "description": "Netherlands Antillean guilder",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AOA",
              "description": "Angolan kwanza",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ARS",
              "description": "Argentine peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AUD",
              "description": "Australian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AWG",
              "description": "Aruban florin",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AZN",
              "description": "Azerbaijani manat",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BAM",
              "description": "Bosnia and Herzegovina convertible mark",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BBD",
              "description": "Barbados dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BDT",
              "description": "Bangladeshi taka",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BGN",
              "description": "Bulgarian lev",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BHD",
              "description": "Bahraini dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BIF",
              "description": "Burundian franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BMD",
              "description": "Bermudian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BND",
              "description": "Brunei dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BOB",
              "description": "Boliviano",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BOV",
              "description": "Bolivian Mvdol",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BRL",
              "description": "Brazilian real",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BSD",
              "description": "Bahamian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BTC",
              "description": "Bitcoin",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BTN",
              "description": "Bhutanese ngultrum",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BWP",
              "description": "Botswana pula",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BYR",
              "description": "Belarusian ruble",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BZD",
              "description": "Belize dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CAD",
              "description": "Canadian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CDF",
              "description": "Congolese franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHE",
              "description": "WIR Euro",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHF",
              "description": "Swiss franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHW",
              "description": "WIR Franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLF",
              "description": "Unidad de Fomento",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLP",
              "description": "Chilean peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CNY",
              "description": "Chinese yuan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COP",
              "description": "Colombian peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COU",
              "description": "Unidad de Valor Real",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CRC",
              "description": "Costa Rican colon",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUC",
              "description": "Cuban convertible peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUP",
              "description": "Cuban peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CVE",
              "description": "Cape Verdean escudo",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CZK",
              "description": "Czech koruna",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DJF",
              "description": "Djiboutian franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DKK",
              "description": "Danish krone",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DOP",
              "description": "Dominican peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DZD",
              "description": "Algerian dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EGP",
              "description": "Egyptian pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ERN",
              "description": "Eritrean nakfa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ETB",
              "description": "Ethiopian birr",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EUR",
              "description": "Euro",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FJD",
              "description": "Fiji dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FKP",
              "description": "Falkland Islands pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GBP",
              "description": "Pound sterling",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GEL",
              "description": "Georgian lari",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GHS",
              "description": "Ghanaian cedi",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GIP",
              "description": "Gibraltar pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GMD",
              "description": "Gambian dalasi",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GNF",
              "description": "Guinean franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GTQ",
              "description": "Guatemalan quetzal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GYD",
              "description": "Guyanese dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HKD",
              "description": "Hong Kong dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HNL",
              "description": "Honduran lempira",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HRK",
              "description": "Croatian kuna",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HTG",
              "description": "Haitian gourde",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HUF",
              "description": "Hungarian forint",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IDR",
              "description": "Indonesian rupiah",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ILS",
              "description": "Israeli new shekel",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INR",
              "description": "Indian rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IQD",
              "description": "Iraqi dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IRR",
              "description": "Iranian rial",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ISK",
              "description": "Icelandic króna",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JMD",
              "description": "Jamaican dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JOD",
              "description": "Jordanian dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JPY",
              "description": "Japanese yen",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KES",
              "description": "Kenyan shilling",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KGS",
              "description": "Kyrgyzstani som",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KHR",
              "description": "Cambodian riel",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KMF",
              "description": "Comoro franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KPW",
              "description": "North Korean won",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KRW",
              "description": "South Korean won",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KWD",
              "description": "Kuwaiti dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KYD",
              "description": "Cayman Islands dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KZT",
              "description": "Kazakhstani tenge",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LAK",
              "description": "Lao kip",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LBP",
              "description": "Lebanese pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LKR",
              "description": "Sri Lankan rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LRD",
              "description": "Liberian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LSL",
              "description": "Lesotho loti",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LTL",
              "description": "Lithuanian litas",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LVL",
              "description": "Latvian lats",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LYD",
              "description": "Libyan dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MAD",
              "description": "Moroccan dirham",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MDL",
              "description": "Moldovan leu",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MGA",
              "description": "Malagasy ariary",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MKD",
              "description": "Macedonian denar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MMK",
              "description": "Myanmar kyat",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MNT",
              "description": "Mongolian tögrög",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MOP",
              "description": "Macanese pataca",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MRO",
              "description": "Mauritanian ouguiya",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MUR",
              "description": "Mauritian rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MVR",
              "description": "Maldivian rufiyaa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MWK",
              "description": "Malawian kwacha",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MXN",
              "description": "Mexican peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MXV",
              "description": "Mexican Unidad de Inversion",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MYR",
              "description": "Malaysian ringgit",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MZN",
              "description": "Mozambican metical",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NAD",
              "description": "Namibian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NGN",
              "description": "Nigerian naira",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NIO",
              "description": "Nicaraguan córdoba",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NOK",
              "description": "Norwegian krone",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NPR",
              "description": "Nepalese rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NZD",
              "description": "New Zealand dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OMR",
              "description": "Omani rial",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAB",
              "description": "Panamanian balboa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PEN",
              "description": "Peruvian sol",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PGK",
              "description": "Papua New Guinean kina",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PHP",
              "description": "Philippine peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PKR",
              "description": "Pakistani rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PLN",
              "description": "Polish złoty",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PYG",
              "description": "Paraguayan guaraní",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "QAR",
              "description": "Qatari riyal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RON",
              "description": "Romanian leu",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RSD",
              "description": "Serbian dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RUB",
              "description": "Russian ruble",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RWF",
              "description": "Rwandan franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SAR",
              "description": "Saudi riyal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SBD",
              "description": "Solomon Islands dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCR",
              "description": "Seychelles rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SDG",
              "description": "Sudanese pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SEK",
              "description": "Swedish krona",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SGD",
              "description": "Singapore dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SHP",
              "description": "Saint Helena pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SLL",
              "description": "Sierra Leonean first leone",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOS",
              "description": "Somali shilling",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SRD",
              "description": "Surinamese dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SSP",
              "description": "South Sudanese pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STD",
              "description": "São Tomé and Príncipe dobra",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SVC",
              "description": "Salvadoran colón",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SYP",
              "description": "Syrian pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SZL",
              "description": "Swazi lilangeni",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "THB",
              "description": "Thai baht",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TJS",
              "description": "Tajikstani somoni",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TMT",
              "description": "Turkmenistan manat",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TND",
              "description": "Tunisian dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TOP",
              "description": "Tongan pa'anga",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TRY",
              "description": "Turkish lira",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TTD",
              "description": "Trinidad and Tobago dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TWD",
              "description": "New Taiwan dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TZS",
              "description": "Tanzanian shilling",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UAH",
              "description": "Ukrainian hryvnia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UGX",
              "description": "Ugandan shilling",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "USD",
              "description": "United States dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "USN",
              "description": "United States dollar (next day)",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "USS",
              "description": "United States dollar (same day)",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UYI",
              "description": "Uruguay Peso en Unidedades Indexadas",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UYU",
              "description": "Uruguyan peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UZS",
              "description": "Uzbekistan som",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VEF",
              "description": "Venezuelan bolívar soberano",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VND",
              "description": "Vietnamese đồng",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VUV",
              "description": "Vanuatu vatu",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WST",
              "description": "Samoan tala",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XAF",
              "description": "CFA franc BEAC",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XAG",
              "description": "Silver",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XAU",
              "description": "Gold",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XBA",
              "description": "European Composite Unit",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XBB",
              "description": "European Monetary Unit",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XBC",
              "description": "European Unit of Account 9",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XBD",
              "description": "European Unit of Account 17",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XCD",
              "description": "East Caribbean dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XDR",
              "description": "Special drawing rights (International Monetary Fund)",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XOF",
              "description": "CFA franc BCEAO",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XPD",
              "description": "Palladium",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XPF",
              "description": "CFP franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XPT",
              "description": "Platinum",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XTS",
              "description": "Code reserved for testing",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XUS",
              "description": "USD Coin",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XXX",
              "description": "No currency",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "YER",
              "description": "Yemeni rial",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZAR",
              "description": "South African rand",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZMK",
              "description": "Zambian kwacha",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZMW",
              "description": "Zambian kwacha",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CurrencyCodeListElementFilterInput",
          "description": "Input type used to specify filters on elements of a `[CurrencyCode]` field.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CurrencyCodeListElementFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CurrencyCodeListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CurrencyCodeListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "CurrencyCodeInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CurrencyCodeListFilterInput",
          "description": "Input type used to specify filters on `[CurrencyCode]` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CurrencyCodeListFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CurrencyCodeListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CurrencyCodeListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anySatisfy",
              "description": "Matches records where any of the list elements match the provided sub-filter.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CurrencyCodeListElementFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CurrencyCodeListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CurrencyFilter",
          "description": "Input type used to specify filters on `Currency` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CurrencyFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CurrencyInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CurrencyFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CurrencyInput",
          "description": "Indicates the associated currency for an amount of money. Values correspond to\n[ISO 4217](https://wikipedia.org/wiki/ISO_4217), with the exception of BTC (Bitcoin).",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AED",
              "description": "United Arab Emirates dirham",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AFN",
              "description": "Afghan afghani",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ALL",
              "description": "Albanian lek",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AMD",
              "description": "Armenian dram",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ANG",
              "description": "Netherlands Antillean guilder",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AOA",
              "description": "Angolan kwanza",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ARS",
              "description": "Argentine peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AUD",
              "description": "Australian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AWG",
              "description": "Aruban florin",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AZN",
              "description": "Azerbaijani manat",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BAM",
              "description": "Bosnia and Herzegovina convertible mark",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BBD",
              "description": "Barbados dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BDT",
              "description": "Bangladeshi taka",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BGN",
              "description": "Bulgarian lev",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BHD",
              "description": "Bahraini dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BIF",
              "description": "Burundian franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BMD",
              "description": "Bermudian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BND",
              "description": "Brunei dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BOB",
              "description": "Boliviano",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BOV",
              "description": "Bolivian Mvdol",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BRL",
              "description": "Brazilian real",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BSD",
              "description": "Bahamian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BTC",
              "description": "Bitcoin",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BTN",
              "description": "Bhutanese ngultrum",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BWP",
              "description": "Botswana pula",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BYR",
              "description": "Belarusian ruble",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BZD",
              "description": "Belize dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CAD",
              "description": "Canadian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CDF",
              "description": "Congolese franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHE",
              "description": "WIR Euro",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHF",
              "description": "Swiss franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHW",
              "description": "WIR Franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLF",
              "description": "Unidad de Fomento",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLP",
              "description": "Chilean peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CNY",
              "description": "Chinese yuan",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COP",
              "description": "Colombian peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COU",
              "description": "Unidad de Valor Real",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CRC",
              "description": "Costa Rican colon",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUC",
              "description": "Cuban convertible peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUP",
              "description": "Cuban peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CVE",
              "description": "Cape Verdean escudo",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CZK",
              "description": "Czech koruna",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DJF",
              "description": "Djiboutian franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DKK",
              "description": "Danish krone",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DOP",
              "description": "Dominican peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DZD",
              "description": "Algerian dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EGP",
              "description": "Egyptian pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ERN",
              "description": "Eritrean nakfa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ETB",
              "description": "Ethiopian birr",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EUR",
              "description": "Euro",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FJD",
              "description": "Fiji dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FKP",
              "description": "Falkland Islands pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GBP",
              "description": "Pound sterling",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GEL",
              "description": "Georgian lari",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GHS",
              "description": "Ghanaian cedi",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GIP",
              "description": "Gibraltar pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GMD",
              "description": "Gambian dalasi",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GNF",
              "description": "Guinean franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GTQ",
              "description": "Guatemalan quetzal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GYD",
              "description": "Guyanese dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HKD",
              "description": "Hong Kong dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HNL",
              "description": "Honduran lempira",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HRK",
              "description": "Croatian kuna",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HTG",
              "description": "Haitian gourde",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HUF",
              "description": "Hungarian forint",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IDR",
              "description": "Indonesian rupiah",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ILS",
              "description": "Israeli new shekel",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INR",
              "description": "Indian rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IQD",
              "description": "Iraqi dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IRR",
              "description": "Iranian rial",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ISK",
              "description": "Icelandic króna",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JMD",
              "description": "Jamaican dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JOD",
              "description": "Jordanian dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JPY",
              "description": "Japanese yen",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KES",
              "description": "Kenyan shilling",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KGS",
              "description": "Kyrgyzstani som",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KHR",
              "description": "Cambodian riel",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KMF",
              "description": "Comoro franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KPW",
              "description": "North Korean won",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KRW",
              "description": "South Korean won",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KWD",
              "description": "Kuwaiti dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KYD",
              "description": "Cayman Islands dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KZT",
              "description": "Kazakhstani tenge",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LAK",
              "description": "Lao kip",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LBP",
              "description": "Lebanese pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LKR",
              "description": "Sri Lankan rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LRD",
              "description": "Liberian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LSL",
              "description": "Lesotho loti",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LTL",
              "description": "Lithuanian litas",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LVL",
              "description": "Latvian lats",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LYD",
              "description": "Libyan dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MAD",
              "description": "Moroccan dirham",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MDL",
              "description": "Moldovan leu",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MGA",
              "description": "Malagasy ariary",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MKD",
              "description": "Macedonian denar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MMK",
              "description": "Myanmar kyat",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MNT",
              "description": "Mongolian tögrög",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MOP",
              "description": "Macanese pataca",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MRO",
              "description": "Mauritanian ouguiya",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MUR",
              "description": "Mauritian rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MVR",
              "description": "Maldivian rufiyaa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MWK",
              "description": "Malawian kwacha",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MXN",
              "description": "Mexican peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MXV",
              "description": "Mexican Unidad de Inversion",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MYR",
              "description": "Malaysian ringgit",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MZN",
              "description": "Mozambican metical",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NAD",
              "description": "Namibian dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NGN",
              "description": "Nigerian naira",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NIO",
              "description": "Nicaraguan córdoba",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NOK",
              "description": "Norwegian krone",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NPR",
              "description": "Nepalese rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NZD",
              "description": "New Zealand dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OMR",
              "description": "Omani rial",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAB",
              "description": "Panamanian balboa",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PEN",
              "description": "Peruvian sol",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PGK",
              "description": "Papua New Guinean kina",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PHP",
              "description": "Philippine peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PKR",
              "description": "Pakistani rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PLN",
              "description": "Polish złoty",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PYG",
              "description": "Paraguayan guaraní",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "QAR",
              "description": "Qatari riyal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RON",
              "description": "Romanian leu",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RSD",
              "description": "Serbian dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RUB",
              "description": "Russian ruble",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RWF",
              "description": "Rwandan franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SAR",
              "description": "Saudi riyal",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SBD",
              "description": "Solomon Islands dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCR",
              "description": "Seychelles rupee",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SDG",
              "description": "Sudanese pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SEK",
              "description": "Swedish krona",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SGD",
              "description": "Singapore dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SHP",
              "description": "Saint Helena pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SLL",
              "description": "Sierra Leonean First leone",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOS",
              "description": "Somali shilling",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SRD",
              "description": "Surinamese dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SSP",
              "description": "South Sudanese pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STD",
              "description": "São Tomé and Príncipe dobra",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SVC",
              "description": "Salvadoran colón",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SYP",
              "description": "Syrian pound",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SZL",
              "description": "Swazi lilangeni",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "THB",
              "description": "Thai baht",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TJS",
              "description": "Tajikstani somoni",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TMT",
              "description": "Turkmenistan manat",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TND",
              "description": "Tunisian dinar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TOP",
              "description": "Tongan pa'anga",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TRY",
              "description": "Turkish lira",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TTD",
              "description": "Trinidad and Tobago dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TWD",
              "description": "New Taiwan dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TZS",
              "description": "Tanzanian shilling",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UAH",
              "description": "Ukrainian hryvnia",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UGX",
              "description": "Ugandan shilling",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_CURRENCY",
              "description": "Unknown currency",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "USD",
              "description": "United States dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "USN",
              "description": "United States dollar (next day)",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "USS",
              "description": "United States dollar (same day)",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UYI",
              "description": "Uruguay Peso en Unidedades Indexadas",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UYU",
              "description": "Uruguyan peso",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UZS",
              "description": "Uzbekistan som",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VEF",
              "description": "Venezuelan bolívar soberano",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VND",
              "description": "Vietnamese đồng",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VUV",
              "description": "Vanuatu vatu",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WST",
              "description": "Samoan tala",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XAF",
              "description": "CFA franc BEAC",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XAG",
              "description": "Silver",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XAU",
              "description": "Gold",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XBA",
              "description": "European Composite Unit",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XBB",
              "description": "European Monetary Unit",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XBC",
              "description": "European Unit of Account 9",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XBD",
              "description": "European Unit of Account 17",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XCD",
              "description": "East Caribbean dollar",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XDR",
              "description": "Special drawing rights (International Monetary Fund)",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XOF",
              "description": "CFA franc BCEAO",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XPD",
              "description": "Palladium",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XPF",
              "description": "CFP franc",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XPT",
              "description": "Platinum",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XTS",
              "description": "Code reserved for testing",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XUS",
              "description": "USD Coin",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "XXX",
              "description": "No currency",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "YER",
              "description": "Yemeni rial",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZAR",
              "description": "South African rand",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZMK",
              "description": "Zambian kwacha",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ZMW",
              "description": "Zambian kwacha",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CurrencyListElementFilterInput",
          "description": "Input type used to specify filters on elements of a `[Currency]` field.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CurrencyListElementFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CurrencyListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CurrencyListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "CurrencyInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CurrencyListFilterInput",
          "description": "Input type used to specify filters on `[Currency]` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `CurrencyListFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CurrencyListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CurrencyListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anySatisfy",
              "description": "Matches records where any of the list elements match the provided sub-filter.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CurrencyListElementFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CurrencyListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Cursor",
          "description": "A standard Relay (https://relay.dev/graphql/connections.htm) Cursor.\nUsed to page through Connections.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CustomAttributeDefinitionFilterInput",
          "description": "The filtering criteria for the query for CustomerCustomAttributeDefinitions.",
          "fields": null,
          "inputFields": [
            {
              "name": "key",
              "description": "The key of the custom attribute definition to retrieve.\nIf the requesting application is not the definition owner, you must use the qualified key.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "A filter to select customers by their owning merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CustomAttributeDefinitionVisibility",
          "description": "The level of permission that a seller or other applications requires to\nview this custom attribute definition.The `Visibility` field controls who can read and write the custom attribute values\nand custom attribute definition.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "VISIBILITY_HIDDEN",
              "description": "The custom attribute definition and values are hidden from the seller (except on export\nof all seller data) and other developers.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VISIBILITY_READ_ONLY",
              "description": "The seller and other developers can read the custom attribute definition and values\non resources.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VISIBILITY_READ_WRITE_VALUES",
              "description": "The seller and other developers can read the custom attribute definition,\nand can read and write values on resources. A custom attribute definition\ncan only be edited or deleted by the application that created it.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Customer",
          "description": "References to Customers subgraph entities\n\nPermissions:CUSTOMERS_READ",
          "fields": [
            {
              "name": "id",
              "description": "The Square-issued ID of the customer.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "address",
              "description": "The physical address associated with the customer profile.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Address",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "birthday",
              "description": "The birthday associated with the customer profile, in `YYYY-MM-DD` format. For example, `1998-09-21`\nrepresents September 21, 1998, and `0000-09-21` represents September 21 (without a birth year).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "companyName",
              "description": "A business name associated with the customer profile.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The timestamp when the customer profile was created, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "creationSource",
              "description": "The method used to create the customer profile.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CustomerCreationSource",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customAttributes",
              "description": "A list of custom attributes associated with the customer.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CustomerCustomAttribute",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "emailAddress",
              "description": "The email address associated with the customer profile.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "EmailAddress",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "familyName",
              "description": "The family name (that is, the last name) associated with the customer profile.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "givenName",
              "description": "The given name (that is, the first name) associated with the customer profile.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "groupIds",
              "description": "The IDs of customer groups the customer belongs to.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nickname",
              "description": "A nickname for the customer profile.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "note",
              "description": "A custom note associated with the customer profile.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "phoneNumber",
              "description": "The phone number associated with the customer profile.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "preferences",
              "description": "Represents general customer preferences.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CustomerPreferences",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "referenceId",
              "description": "An optional second ID used to associate the customer profile with an\nentity in another system.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "segmentIds",
              "description": "The IDs of customer segments the customer belongs to.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "taxIds",
              "description": "The tax ID associated with the customer profile. This field is present only for customers of sellers in EU countries or the United Kingdom. \nFor more information, see [Customer tax IDs](https://developer.squareup.com/docs/customers-api/what-it-does#customer-tax-ids).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CustomerTaxIds",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The timestamp when the customer profile was last updated, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The Square-assigned version number of the customer profile. The version number is incremented each time an update is committed to the customer profile, except for changes to customer segment membership and cards on file.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CustomerConnection",
          "description": "A list of Customer.\n\nPermissions:CUSTOMERS_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of Customer.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Customer",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "CustomerCreationSource",
          "description": "Indicates the method used to create the customer profile.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "APPOINTMENTS",
              "description": "The customer profile was created automatically when an appointment\nwas scheduled.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COUPON",
              "description": "The customer profile was created automatically when a coupon was issued\nusing Square Point of Sale.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETION_RECOVERY",
              "description": "The customer profile was restored through Square's deletion recovery\nprocess.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DIRECTORY",
              "description": "The customer profile was created manually through Square Seller Dashboard or the \nPoint of Sale application.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EGIFTING",
              "description": "The customer profile was created automatically when a gift card was\nissued using Square Point of Sale. Customer profiles are created for\nboth the buyer and the recipient of the gift card.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EMAIL_COLLECTION",
              "description": "The customer profile was created through Square Point of Sale when\nsigning up for marketing emails during checkout.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FEEDBACK",
              "description": "The customer profile was created automatically when providing feedback\nthrough a digital receipt.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IMPORT",
              "description": "The customer profile was created automatically when importing customer\ndata through Square Seller Dashboard.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSTANT_PROFILE",
              "description": "The customer profile was created automatically as the result of a successful\ntransaction that did not explicitly link to an existing customer profile.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVOICES",
              "description": "The customer profile was created automatically during an invoice payment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOYALTY",
              "description": "The customer profile was created automatically when customers provide a\nphone number for loyalty reward programs during checkout.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MARKETING",
              "description": "The customer profile was created as the result of a campaign managed\nthrough Square’s Facebook integration.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MERGE",
              "description": "The customer profile was created as the result of explicitly merging\nmultiple customer profiles through the Square Seller Dashboard or the Point of\nSale application.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ONLINE_STORE",
              "description": "The customer profile was created through Square's Online Store solution\n(legacy service).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER",
              "description": "The default creation source. This source is typically used for backward/future\ncompatibility when the original source of a customer profile is\nunrecognized. For example, when older clients do not support newer\nsource types.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TERMINAL",
              "description": "The customer profile was created through Square's Virtual Terminal.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "THIRD_PARTY",
              "description": "The customer profile was created through a Square API call.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "THIRD_PARTY_IMPORT",
              "description": "The customer profile was created by a third-party product and imported\nthrough an official integration.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNMERGE_RECOVERY",
              "description": "The customer profile was restored through Square's unmerge recovery\nprocess.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CustomerCustomAttribute",
          "description": "A custom attribute value.Each custom attribute value has a corresponding\n`CustomAttributeDefinition` object.\nPermissions: CUSTOMERS_READ",
          "fields": [
            {
              "name": "createdAt",
              "description": "The timestamp that indicates when the custom attribute was created, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "definition",
              "description": "A copy of the associated custom attribute definition object. This field is only set when\nthe optional field is specified on the request.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CustomerCustomAttributeDefinition",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "key",
              "description": "The identifier\nof the custom attribute definition and its corresponding custom attributes. This value\ncan be a simple key, which is the key that is provided when the custom attribute definition\nis created, or a qualified key, if the requesting\napplication is not the definition owner. The qualified key consists of the application ID\nof the custom attribute definition owner\nfollowed by the simple key that was provided when the definition was created. It has the\nformat application_id:simple key.\n  \nThe value for a simple key can contain up to 60 alphanumeric characters, periods (.),\nunderscores (_), and hyphens (-).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The timestamp that indicates when the custom attribute was created or was most recently\nupdated, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": "The value assigned to the custom attribute. It is validated against the custom\nattribute definition's schema on write operations. For more information about custom\nattribute values,\nsee [Custom Attributes Overview](https://developer.squareup.com/docs/devtools/customattributes/overview).",
              "args": [],
              "type": {
                "kind": "UNION",
                "name": "CustomerCustomAttributeValueUnion",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "Read only. The current version of the custom attribute. This field is incremented when the custom attribute is changed.\nWhen updating an existing custom attribute value, you can provide this field\nand specify the current version of the custom attribute to enable\n[optimistic concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency).\nThis field can also be used to enforce strong consistency for reads. For more information about strong consistency for reads,\nsee [Custom Attributes Overview](https://developer.squareup.com/docs/devtools/customattributes/overview).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "visibility",
              "description": "A copy of the `visibility` field value for the associated custom attribute definition.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CustomAttributeDefinitionVisibility",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CustomerCustomAttributeAddress",
          "description": "Provides information when CustomerCustomAttributeValue.value is Address.\n\nPermissions:CUSTOMERS_READ",
          "fields": [
            {
              "name": "value",
              "description": "An Address object as defined by [Square's Connect API](https://developer.squareup.com/reference/square_2021-07-21/objects/Address)",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CustomerCustomAttributeBoolean",
          "description": "Provides information when CustomerCustomAttributeValue.value is Boolean.\nPermissions:CUSTOMERS_READ",
          "fields": [
            {
              "name": "value",
              "description": "A true or false value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CustomerCustomAttributeDate",
          "description": "Provides information when CustomerCustomAttributeValue.value is Date.\n\nPermissions:CUSTOMERS_READ",
          "fields": [
            {
              "name": "value",
              "description": "Contains A date in the ISO 8601 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Date",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CustomerCustomAttributeDefinition",
          "description": "Represents a definition for custom attribute values.A custom attribute definition\nspecifies the key, visibility, schema, and other properties for a custom attribute.\nPermissions: CUSTOMERS_READ",
          "fields": [
            {
              "name": "createdAt",
              "description": "The timestamp that indicates when the custom attribute definition was created, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "Seller-oriented description of the custom attribute definition, including any constraints\nthat the seller should observe. May be displayed as a tooltip in Square UIs. This field is\nrequired if the `visibility` field is `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "key",
              "description": "The identifier\nof the custom attribute definition and its corresponding custom attributes. This value\ncan be a simple key, which is the key that is provided when the custom attribute definition\nis created, or a qualified key, if the requesting\napplication is not the definition owner. The qualified key consists of the application ID\nof the custom attribute definition owner\nfollowed by the simple key that was provided when the definition was created. It has the\nformat application_id:simple key.\n  \nThe value for a simple key can contain up to 60 alphanumeric characters, periods (.),\nunderscores (_), and hyphens (-).\n  \nThis field can not be changed\nafter the custom attribute definition is created. This field is required when creating\na definition and must be unique per application, seller, and resource type.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The name of the custom attribute definition for API and seller-facing UI purposes. The name must\nbe unique within the seller and application pair. This field is required if the\n`visibility` field is `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "schema",
              "description": "The JSON schema for the custom attribute definition, which determines the data type of the corresponding custom attributes. For more information,\nsee [Custom Attributes Overview](https://developer.squareup.com/docs/devtools/customattributes/overview). This field is required when creating a definition.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The timestamp that indicates when the custom attribute definition was created or most recently updated,\nin RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "Read only. The current version of the custom attribute definition.\nThe value is incremented each time the custom attribute definition is updated.\nWhen updating a custom attribute definition, you can provide this field\nand specify the current version of the custom attribute definition to enable\n[optimistic concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency).\n  \nOn writes, this field must be set to the latest version. Stale writes are rejected.\n  \nThis field can also be used to enforce strong consistency for reads. For more information about strong consistency for reads,\nsee [Custom Attributes Overview](https://developer.squareup.com/docs/devtools/customattributes/overview).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "visibility",
              "description": "Specifies how the custom attribute definition and its values should be shared with\nthe seller and other applications. If no value is specified, the value defaults to `VISIBILITY_HIDDEN`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CustomAttributeDefinitionVisibility",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CustomerCustomAttributeDefinitionConnection",
          "description": "Lists the customer custom attributes definitions that belong to a Square seller account.\n\nPermissions:CUSTOMERS_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of CustomAttributeDefinition.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CustomerCustomAttributeDefinition",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CustomerCustomAttributeEmailAddress",
          "description": "Provides information when CustomerCustomAttributeValue.value is EmailAddress.\n\nPermissions:CUSTOMERS_READ",
          "fields": [
            {
              "name": "value",
              "description": "Contains An email address. Emails must use ascii characters and match the [HTML5 Email RegEx](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email#validation).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "EmailAddress",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CustomerCustomAttributeNumber",
          "description": "Provides information when CustomerCustomAttributeValue.value is Number.\n\nPermissions:CUSTOMERS_READ",
          "fields": [
            {
              "name": "value",
              "description": "Contains a string representation of a decimal number, using a . as the decimal separator.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Decimal",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CustomerCustomAttributePhoneNumber",
          "description": "Provides information when CustomerCustomAttributeValue.value is PhoneNumber.\n\nPermissions:CUSTOMERS_READ",
          "fields": [
            {
              "name": "value",
              "description": "Contains a phone number in the standard E.164 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "PhoneNumber",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CustomerCustomAttributeSelection",
          "description": "Provides information when CustomerCustomAttributeValue.value is Selection.\n\nPermissions:CUSTOMERS_READ",
          "fields": [
            {
              "name": "value",
              "description": "One or more choices from allowed_selections.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CustomerCustomAttributeString",
          "description": "An instance of a custom attribute.\n\nPermissions:CUSTOMERS_READ",
          "fields": [
            {
              "name": "value",
              "description": "The string value of the custom attribute.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "UNION",
          "name": "CustomerCustomAttributeValueUnion",
          "description": "Provides information for CatalogCustomAttributeValue.value.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "CustomerCustomAttributeAddress",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CustomerCustomAttributeBoolean",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CustomerCustomAttributeDate",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CustomerCustomAttributeEmailAddress",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CustomerCustomAttributeNumber",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CustomerCustomAttributePhoneNumber",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CustomerCustomAttributeSelection",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CustomerCustomAttributeString",
              "ofType": null
            }
          ]
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CustomerFilter",
          "description": "The filtering criteria for the query. A query can contain multiple filters in any combination.\nMultiple filters are combined as `AND` statements.\n\nNote: Combining multiple filters as `OR` statements is not supported. Instead, send multiple single-filter\nsearches and join the result sets.",
          "fields": null,
          "inputFields": [
            {
              "name": "createdAt",
              "description": "A filter to select customers based on when they were created.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TimeRangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "email",
              "description": "A filter to select customers by their email address visible to the seller. This filter is case-insensitive.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CustomerTextFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "This filter cannot be used in conjunction with email or createdAt filters.\nThe number of customer_ids passed through this filter must be lower than 20.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "A filter to select customers by their owning merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "text",
              "description": "A full text search query to apply to the search. This could contain names, emails, and phones",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicTextFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CustomerPreferences",
          "description": "Represents communication preferences for the customer profile.\nPermissions: CUSTOMERS_READ",
          "fields": [
            {
              "name": "emailUnsubscribed",
              "description": "Indicates whether the customer has unsubscribed from marketing campaign emails. A value of `true` means that the customer chose to opt out of email marketing from the current Square seller or from all Square sellers. This value is read-only from the Customers API.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CustomerTaxIds",
          "description": "Represents the tax ID associated with a customer profile.The corresponding `tax_ids` field is available only for customers of sellers in EU countries or the United Kingdom. \nFor more information, see [Customer tax IDs](https://developer.squareup.com/docs/customers-api/what-it-does#customer-tax-ids).\nPermissions: CUSTOMERS_READ",
          "fields": [
            {
              "name": "euVat",
              "description": "The EU VAT identification number for the customer. For example, `IE3426675K`. The ID can contain alphanumeric characters only.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "CustomerTextFilter",
          "description": "A filter to select customers based on exact matching of customer attributes\nagainst a specified query.",
          "fields": null,
          "inputFields": [
            {
              "name": "exact",
              "description": "Use the exact filter to select customers whose attributes match exactly the specified query.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DashboardComputedPermissions",
          "description": "Returns merchant computed permissions. Originally computed for Dashboard. Permissions: NONE",
          "fields": [
            {
              "name": "canAccessCommsAnnouncements",
              "description": "Checks if the user can access communications announcements.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canAccessCommsSettings",
              "description": "Checks if the user can access communications settings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canAccessDashboard",
              "description": "Checks if the user can access dashboard",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canAccessShowInSandbox",
              "description": "Checks if the user can access show in sandbox.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canAccessTimeOffReport",
              "description": "Checks if the user can access the time off report.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canApplyForCbd",
              "description": "Denotes whether the merchant can apply for CBD.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canCountryAccessAppointments",
              "description": "Denotes whether the merchant's country can access appointments.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canDashboardDummyTestFlag",
              "description": "Checks if the user can use the dashboard dummy test flag.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canEditBankAccounts",
              "description": "Checks if the user can edit bank accounts.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canEditBusinessSecurity",
              "description": "Checks if the user can edit business security.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canEditEmailNotifications",
              "description": "Checks if the user can edit email notifications.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canEditOutageNotifications",
              "description": "Checks if the user can edit outage notifications.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canEmployeeDashboardManageInvoicesForGoldenPath",
              "description": "Checks if the user can manage invoices for golden path.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canEmployeeSeeAppointmentsUpsell",
              "description": "Checks if the employee can see the appointments upsell.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canEmployeeSeeDepositsAndSquareCard",
              "description": "Checks if the user can see deposits and Square Card.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canEnableReferralsInReceiptEditor",
              "description": "Checks if the user can enable referrals in the receipt editor.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canManageStaffNotifications",
              "description": "Checks if the user can manage staff notifications.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canManageTeamMemberFiles",
              "description": "Checks if the user can manage team member files.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canManageTeamMemberOnboarding",
              "description": "Checks if the user can manage team member onboarding.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canNotSeeAppointments",
              "description": "Checks if the user cannot see appointments.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canNotUseNavigationV1",
              "description": "Checks if the user can not use navigation v1",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canNotUsePayroll",
              "description": "Checks if the user can not use payroll.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canNotUsePayrollYearEndChecklist",
              "description": "Denotes whether a merchant can use payroll year end checklist.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canOrderAccessories",
              "description": "Checks if the user can order accessories.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canRequestReaderOrStickers",
              "description": "Checks if the user can request a reader or stickers.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canRespondToDisputes",
              "description": "Checks if the user can respond to disputes.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeAccountingReports",
              "description": "Checks if the user can see accounting reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeAddMore",
              "description": "Checks if the user can see the 'Add More' option.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeAfterpayAbout",
              "description": "Checks if the user can see Afterpay About.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeAfterpayShop",
              "description": "Checks if the user can see Afterpay Shop.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeAgingInventoryReport",
              "description": "Checks if the user can see the aging inventory report.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeAppMarketplace",
              "description": "Checks if the user can see the app marketplace.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeAppointmentsBySubscription",
              "description": "Checks if the user can see appointments by subscription.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeAppointmentsInviteClients",
              "description": "Checks if the user can see appointments invite clients.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeAppointmentsLibrary",
              "description": "Checks if the user can see appointments library.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeAppointmentsOnlineBooking",
              "description": "Checks if the user can see appointments online booking.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeAppointmentsReports",
              "description": "Checks if the user can see appointments reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeAppointmentsServices",
              "description": "Checks if the user can see appointments services.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeAppointmentsStaff",
              "description": "Checks if the user can see appointments staff.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeAppointmentsTeamMembers",
              "description": "Checks if the user can see appointments team members.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeAppointmentsUpgradeSubscription",
              "description": "Checks if the user can see appointments upgrade subscription.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeAppointmentsUpsell",
              "description": "Checks if the user can see the appointments upsell.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeAppointmentsWaitlist",
              "description": "Checks if the user can see appointments waitlist.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeBalances",
              "description": "Checks if the user can see Balances.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeBalancesEmployee",
              "description": "Checks if the employee can see Balances.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeBanking",
              "description": "Checks if the user can see Banking.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeBankingOverview",
              "description": "Checks if the user can see Banking Overview.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeBankingReimaginedNav",
              "description": "Checks if the user can see Banking reimagined nav.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeBasicRestaurantsFeatures",
              "description": "Denotes whether the merchant can see basic restaurants features.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeBasicRetailFeatures",
              "description": "Denotes whether the merchant can see basic retail features.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeBitcoinWallet",
              "description": "Checks if the user can see Bitcoin.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeBrandManager",
              "description": "Checks if the user can see the brand manager.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeCapital",
              "description": "Checks if the user can see capital.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeCashDrawers",
              "description": "Checks if the user can see cash drawers.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeCashLocal",
              "description": "Denotes whether a merchant can see cash local.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeCashLocalNeighborhoodsNavigation",
              "description": "Checks if a merchant is eligible for Cash Local Neighborhoods Navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeCashLocalProfileNavigation",
              "description": "Checks if a cash local merchant can see the Profile navigation in Dashboard.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeCashLocalSecondaryNav",
              "description": "Checks if the user can see cash local secondary navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeCcpa",
              "description": "Checks if the user can see CCPA.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeChecking",
              "description": "Checks if the user can see Checking.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeCheckingLanding",
              "description": "Checks if the user can see Checking landing page.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeCommsContentModerationSettings",
              "description": "Checks if the user can see communications content moderation settings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeCompsReports",
              "description": "Checks if the user can see compliance reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeConnectedTerminalProfiles",
              "description": "Checks if the user can see connected terminal profiles.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeConsolidatedSettings",
              "description": "Denotes whether the merchant can see consolidated settings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeConsolidatedSettingsBanking",
              "description": "Checks if the user can see consolidated settings banking",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeConsolidatedSettingsCcpa",
              "description": "Checks if the user can see consolidated settings CCPA",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeConsolidatedSettingsDevicePageWDpv2",
              "description": "Checks if the user can see consolidated settings device page w DPV2",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeConsolidatedSettingsGdpr",
              "description": "Checks if the user can see settings GDPR",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeConsolidatedSettingsPricing",
              "description": "Checks if the user can see consolidated settings pricing",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeConsolidatedSettingsTaxInfo",
              "description": "Checks if the user can see consolidated settings tax info",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeConsolidatedSettingsTaxStatements",
              "description": "Checks if the user can see consolidated settings tax statements",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeContracts",
              "description": "Checks if the user can see contracts.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeConversationalAiSearch",
              "description": "Denotes whether the merchant can see conversational AI search.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeCoursesServiceSettings",
              "description": "Checks if the user can see the courses service settings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeCreditCard",
              "description": "Checks if the user can see Credit card.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeCustomReports",
              "description": "Checks if the user can see custom reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeCustomerInfoInOverview",
              "description": "Checks if the user can see customer info in overview.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeCustomerListCustomAttributes",
              "description": "Checks if the user can see customer list custom attributes.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeCustomersGettingStarted",
              "description": "Checks if the user can see customers getting started.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeCustomersSettingsInstantProfiles",
              "description": "Denotes whether the merchant can see instant profile settings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeDepositSettings",
              "description": "Checks if the user can see deposit settings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeDeposits",
              "description": "Checks if the user can see deposits.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeDisputesDashboard",
              "description": "Checks if the user can see the Disputes Dashboard.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeEarlyFeatureAccess",
              "description": "Checks if the user can see Early Feature Access",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeEbtSnapFeatures",
              "description": "Checks if the user can see EBT SNAP related features",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeExtendedVirtualTerminalSettings",
              "description": "Checks if the user can see extended virtual terminal settings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeFeeReport",
              "description": "Checks if the user can see the fee report.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeFeeStatements",
              "description": "Checks if the user can see fee statements.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeFeedbackTab",
              "description": "Checks if the user can see the feedback tab.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeFutureBookingsReports",
              "description": "Checks if the user can see future bookings reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeGdpr",
              "description": "Checks if the user can see GDPR.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeGdprTaxCompliance",
              "description": "Checks if a merchant can see new GDPR Tax Compliance nav label.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeGiftCardsReports",
              "description": "Checks if the user can see gift cards reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeGlobalItemOptions",
              "description": "Checks if the user can see global item options.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeHouseAccountsSettings",
              "description": "Denotes whether the merchant can see house accounts settings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeHrOverviewPage",
              "description": "Checks if the user can see the HR overview page.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeHrSubscribePage",
              "description": "Checks if the user can see the HR subscribe page.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeIdDash",
              "description": "Checks if the user can see ID Dash.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeIndependentDisputes",
              "description": "Checks if the user can see independent disputes.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeIndependentInventoryManagement",
              "description": "Checks if the user can see independent inventory management.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeIndependentMenus",
              "description": "Checks if the user can see independent menus.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeIngredientInventoryNavigation",
              "description": "Checks if the user can see the ingredient inventory navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeInstantAccessInOrders",
              "description": "Checks if the user can see instant access in orders.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeIntlExpansionBanking",
              "description": "Checks if the user can see INTL Expansion banking pages.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeInventoryManagementEntryPoint",
              "description": "Checks if the user can see the inventory management entry point.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeInventoryNavigation",
              "description": "Denotes whether the merchant can see inventory navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeInventoryReports",
              "description": "Checks if the user can see inventory reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeInventoryReportsIa",
              "description": "Checks if the user can see inventory reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeInventorySellThrough",
              "description": "Checks if the user can see the inventory sell-through.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeInvoices",
              "description": "Checks if the user can see invoices.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeInvoicesCustomizationTab",
              "description": "Checks if the user can see invoices customization tab.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeInvoicesEstimateDefaultsTab",
              "description": "Checks if the user can see invoices estimate defaults tab.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeInvoicesEstimatesTab",
              "description": "Checks if the user can see invoices estimates tab.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeInvoicesEstimatesTabForGoldenPath",
              "description": "Checks if the user can see invoices estimates tab for golden path.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeInvoicesPartnerAppsPage",
              "description": "Checks if the user can see invoices partner apps page.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeInvoicesSettingsTabs",
              "description": "Checks if the user can see invoices settings tabs.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeInvoicesTemplates",
              "description": "Checks if the user can see invoices templates.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeItemDefaultSettings",
              "description": "Checks if a merchant can see item default settings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeItemsInventory",
              "description": "Checks if the user can see items inventory.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeKdsFeatures",
              "description": "Denotes whether the merchant can see KDS features.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeKdsReportingNav",
              "description": "Checks if the user can see KDS reporting navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeKdsUpsellWDpv2",
              "description": "Controls displaying the KDS upsell in point_of_sale.devices.kitchen_displays when DPv2 is enabled.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeKitchenSettings",
              "description": "Checks if the user can see kitchen settings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeMarketingAssistant",
              "description": "Denotes whether a merchant can see the marketing assistant page.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeMarketingAutomations",
              "description": "Denotes whether a merchant can see marketing automations.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeMarketingContactCollection",
              "description": "Denotes whether a merchant can see marketing contact collection.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeMarketingGoogleReviews",
              "description": "Denotes whether a merchant can see marketing Google reviews.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeMarketingPromotions",
              "description": "Denotes whether the merchant can see marketing promotions.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeMarketingV2SquareLocalOfferCustomization",
              "description": "Denotes whether a merchant can see marketing local offer customization (V2).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeMarketingV2SquareLocalOffers",
              "description": "Denotes whether a merchant can see marketing local offers (V2).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeMcaGlobal",
              "description": "Checks if the user can see MCA Global.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeMcaUk",
              "description": "Checks if the user can see MCA UK",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeMenusNavigation",
              "description": "Checks if the user can see the menus navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeMenusNavigationAndIsInGoldenPathNav",
              "description": "Checks if the user can see menus navigation and is in golden path navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeNewCashReportsUi",
              "description": "Denotes whether a merchant can see the new cash reports UI.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeNewRstFloorPlansAndGroupsWDpv2",
              "description": "Denotes whether the merchant can see new RST floor plans and groups with DPV2.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeOldDevicePageWDpv2",
              "description": "Controls whether the legacy Device Codes view can be visible while the seller is in DPv2.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeOldRstPosDevicesPageWDpv2",
              "description": "Controls whether the legacy RST POS Devices view can be visible while the seller is in DPv2.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeOnlineReports",
              "description": "Checks if the user can see online reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeOnlineStore",
              "description": "Checks if the user can Online store in navigation v1.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeOpenTicketsMigrationUi",
              "description": "Denotes whether a merchant can see open tickets migration UI.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeOperationsReports",
              "description": "Checks if the user can see operations reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeOrderGuide",
              "description": "Denotes whether the merchant can see the Order Guide feature.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeOrderHub",
              "description": "Checks if the user can see the Order Hub.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeOrderOnlineOnboardingExperience",
              "description": "Checks if the user can see the new order online onboarding experience",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeePackages",
              "description": "Checks if the user can see packages.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeePaidRestaurantsFeatures",
              "description": "Denotes whether the merchant can see paid restaurants features.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeePaymentMethods",
              "description": "Checks if the user can see the payment methods.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeePaymentsReports",
              "description": "Checks if the user can see payments reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeePeopleDashboard",
              "description": "Checks if the user can see people dashboard.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeePointOfSaleNavigation",
              "description": "Checks if the user can see the point of sale navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeePosMenuBehaviorNavigation",
              "description": "Checks if the user can see the POS menu behavior navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeePosParentNavItemWDpv2",
              "description": "Denotes whether the merchant can see the POS parent navigation item with DPV2.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeePosProfilesSubnav",
              "description": "Checks if the merchant can see POS profiles sub-navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeePosProfilesSubnavSuperpos",
              "description": "Checks if the merchant can see POS profiles sub-navigation for Super POS.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeePosProfilesSubnavV2",
              "description": "Checks if the merchant can see POS profiles sub-navigation in version 2.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeePreAuthorizationServiceSettings",
              "description": "Denotes whether a merchant can see pre-auth service settings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeProductStore",
              "description": "Checks if the user can see the product store.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeReceiptEditor",
              "description": "Checks if the user can see the receipt editor.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeReferrals",
              "description": "Checks if the user can see referrals.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeReleaseManager",
              "description": "Checks if the user can see the release manager.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeRelocatedInventoryReports",
              "description": "Checks if the user can see relocated inventory reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeReopenChecksServiceSettings",
              "description": "Checks if the user can see the reopen checks service settings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeReportingIa",
              "description": "Checks if the user can see Reporting IA.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeReports",
              "description": "Checks if the user can see reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeReportsApp",
              "description": "Checks if the user can see reports app.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeReportsCompliance",
              "description": "Checks if the user can see the reports compliance.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeReportsInTeamApplet",
              "description": "Checks if the user can see reports in the team applet.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeReserves",
              "description": "Checks if the user can see reserves.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeResources",
              "description": "Checks if the user can see resources.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeRestaurantsInventoryNavigation",
              "description": "Checks if the user can see the restaurants inventory navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeRestaurantsUpsell",
              "description": "Checks if the user can see the restaurants upsell.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeRetailFeatures",
              "description": "Denotes whether the merchant can see retail features.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeRetailLearnMorePage",
              "description": "Denotes whether a merchant can see retail learn more page.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeRewardsTab",
              "description": "Checks if the user can see rewards tab.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeRiskManagerAllowList",
              "description": "Checks if the user can see the risk manager allow list.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeRiskManagerAllowedPayments",
              "description": "Checks if the user can see the risk manager allowed payments.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeRiskManagerEnrolledFeatures",
              "description": "Checks if the user can see the risk manager enrolled features.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeRiskManagerNotEnrolledFeatures",
              "description": "Denotes whether the merchant can see risk manager not enrolled features.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeRstFloorPlansOrGroups",
              "description": "Checks if the merchant can see RST floor plans or groups.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeSalesReports",
              "description": "Checks if the user can see sales reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeSavings",
              "description": "Checks if the user can see Savings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeSeatedStatusServiceSettings",
              "description": "Checks if the user can see the seated status service settings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeSectionSalesReports",
              "description": "Checks if the user can see section sales reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeSecureProfile",
              "description": "Checks if the user can see the secure profile.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeSellerProjects",
              "description": "Checks if the user can see seller projects.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeSellerProjectsForGoldenPath",
              "description": "Checks if the user can see seller projects for golden path.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeServiceLibrary",
              "description": "Checks if the user can see the service library.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeShopOrderHistory",
              "description": "Checks if the user can see the shop order history.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeSimpleCostReportingNavigation",
              "description": "Checks if the user can see the simple cost reporting navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeSquareOnlineReports",
              "description": "Checks if a merchant can see Square Online reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeStaffPackagesExperiment",
              "description": "Checks if the user can see staff packages experiment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeStaffPerformanceReports",
              "description": "Checks if the user can see staff performance reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeStandLink",
              "description": "Checks if the user can see the stand link.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeStockOverviewNav",
              "description": "Checks if the user can see the stock overview navigation",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeSubscriptionsListInBuyerSubsEngineNavV1",
              "description": "Checks if the user can see subscriptions list in buyer subs engine navigation V1.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeSubscriptionsListNavV1",
              "description": "Checks if the user can see subscriptions list navigation V1.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeSubscriptionsPlansInBuyerSubsEngineNavV1",
              "description": "Checks if the user can see subscriptions plans in buyer subs engine navigation V1.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeSubscriptionsPlansNavV1",
              "description": "Checks if the user can see subscriptions plans navigation V1.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeTaxInfo",
              "description": "Checks if the user can see tax info.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeTaxStatements",
              "description": "Checks if the user can see tax statements.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeTeamCommunication",
              "description": "Checks if the user can see team communication settings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeTeamOnboarding",
              "description": "Checks if the user can see team onboarding.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeTeamSalesInTeamApplet",
              "description": "Checks if the user can see team sales in the team applet.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeTextMessageMarketingInLoyalty",
              "description": "Denotes whether the merchant can see text message marketing in loyalty.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeTimecardsBreakSettingsNav",
              "description": "Checks if the user can see the timecards break settings navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeTimecardsSettingsNav",
              "description": "Checks if the user can see the timecards settings navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeTips",
              "description": "Checks if the user can see tip payments or tip earnings report.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeTopLevelShiftsNav",
              "description": "Checks if the user can see the top-level shifts navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeTrafficAndSources",
              "description": "Checks if a merchant can see traffic and sources reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeTransactionStatusReports",
              "description": "Checks if the user can see transaction status reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeTransactions",
              "description": "Checks if the user can see transactions.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeTransferOrdersNav",
              "description": "Checks if the user can see the transfer orders navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeVendorSales",
              "description": "Checks if the user can see vendor sales.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeVirtualTerminalSettings",
              "description": "Checks if the user can see virtual terminal settings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeWebsposSettingsAccessories",
              "description": "Denotes whether a merchant can see web SPOS settings accessories.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeWebsposSettingsDevices",
              "description": "Checks if the user can see the WebSpos settings devices.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSeeWhatsNew",
              "description": "Checks if the user can see 'What's New'.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canShowKioskSettings",
              "description": "Checks if the user can show kiosk settings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSubscribeToHrExperts",
              "description": "Checks if the user can subscribe to HR experts.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSubscribeToHrResources",
              "description": "Checks if the user can subscribe to HR resources.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canSwitchMerchants",
              "description": "Checks if the user can switch merchants.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseAppDrawerDragAndDrop",
              "description": "Checks if the user can use app drawer drag and drop.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseBuyerSubsEnginePlans",
              "description": "Denotes whether a merchant can use buyer subs engine plans.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseBuyerSubsEngineSubscriptionsList",
              "description": "Denotes whether a merchant can use buyer subs engine subscriptions list.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseCardOnFile",
              "description": "Denotes whether a merchant can use card on file.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseContractsWithCards",
              "description": "Checks if the user can use contracts with cards.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseCoursingV2",
              "description": "Denotes whether a merchant can use coursing V2.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseDeviceHub",
              "description": "Denotes whether the merchant can use device hub.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseDeviceHubNoRstOrRtl",
              "description": "Checks if the merchant can use the device hub without basic restaurant or retail features.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseDeviceProfilesV1FullGa",
              "description": "Denotes whether the merchant can use device profiles V1 full GA.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseDeviceProfilesV2",
              "description": "Denotes whether the merchant can use device profiles V2.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseDeviceProfilesV2FullGa",
              "description": "Denotes whether the merchant can use device profiles V2 full GA.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseDeviceProfilesV2SoftGa",
              "description": "Denotes whether the merchant can use DPV2 soft GA.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseFirstPartySubscriptions",
              "description": "Denotes whether a merchant can use first party subscriptions.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseHouseAccountsMultiLocation",
              "description": "Denotes whether a merchant can use house accounts multi location.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseHouseAccountsReports",
              "description": "Denotes whether a merchant can use house accounts reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseHrExperts",
              "description": "Checks if the user can use HR experts.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseHrExpertsExperience",
              "description": "Checks if the user can use HR experts experience.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseHrManager",
              "description": "Checks if the user can access HR manager features.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseHrResources",
              "description": "Checks if the user can use HR resources.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseInstantAccess",
              "description": "Checks if the user can use instant access.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseInventorySettings",
              "description": "Checks if the user can use inventory settings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseInvoicesApplet",
              "description": "Checks if the user can use the Invoices Applet.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseKioskGa",
              "description": "Denotes whether the merchant can use kiosk GA.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseKioskLinearOnboardingAndConfiguration",
              "description": "Checks if the user can use kiosk linear onboarding and configuration.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseKioskProfiles",
              "description": "Checks if the merchant can use kiosk profiles.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseMessenger",
              "description": "Checks if the user can use messenger.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseNavigationService",
              "description": "Checks if the user can use navigation service.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseNavigationV1",
              "description": "Checks if the user can use navigation v1",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseNewPycFlow",
              "description": "Checks if the user can use the new PYC flow.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUsePayroll",
              "description": "Checks if the user can use payroll.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUsePhysicalRoute",
              "description": "Denotes whether the merchant can use physical route.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUsePlasticRoute",
              "description": "Denotes whether the merchant can use plastic route.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUsePricingEngineDiscountsEditor",
              "description": "Denotes whether a merchant can use pricing engine discounts editor.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUsePrinterProfiles",
              "description": "Denotes whether the merchant can use printer profiles.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUsePrinterProfilesNoRstOrRtl",
              "description": "Checks if the merchant can use printer profiles without basic restaurant or retail features.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUsePrintersSimplifiedNoProfiles",
              "description": "Checks if the profiles subnav should be hidden for simplified printers experience.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseRegisterCardOnFile",
              "description": "Checks if the user can use register card on file.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseSeatedStatus",
              "description": "Denotes whether a merchant can use seated status.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseSquareOne",
              "description": "Checks if the user is eligible for Square one plan",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseSquareStaff",
              "description": "Checks if the user can use square staff.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseStandardAppointmentsNav",
              "description": "Checks if the user can use standard appointments navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseSuperpos",
              "description": "Denotes whether the merchant can use Super POS.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canUseThirdPartyGiftCardProvider",
              "description": "Denotes whether the merchant can use a third-party gift card provider.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canViewDisputes",
              "description": "Checks if the user can view disputes.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canViewDisputesNotificationsSettings",
              "description": "Checks if the user can access disputes notifications settings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canViewEmployeePermissions",
              "description": "Checks if the user can view employee permissions.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canViewEmployeeReports",
              "description": "Checks if the user can view employee reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canViewEmployeeSecurity",
              "description": "Denotes whether a merchant can view employee security.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canViewTeamMemberFiles",
              "description": "Checks if the user can view team member files.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasBizbankActiveCard",
              "description": "Denotes whether the merchant has a Biz Bank active card.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasCashLocalEnabled",
              "description": "Checks if a merchant has Cash Local enabled.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasJoinedAppointments",
              "description": "Denotes whether the merchant has joined appointments.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasJoinedRestaurants",
              "description": "Denotes whether a merchant has joined restaurants.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasMigratedSquareOnlineSiteToMenus",
              "description": "Checks if merchant has migrated square online site to menus",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasNotOnboardedPayroll",
              "description": "Checks if the merchant has not onboarded payroll.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasOnboardedOrderOnline",
              "description": "Checks if a merchant has onboarded using Order Online.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasOnboardedPayroll",
              "description": "Checks if the merchant has onboarded payroll.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasSavings",
              "description": "Denotes whether the merchant has savings capability.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasShopifySite",
              "description": "Denotes whether the merchant has a Shopify site.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasWeeblyOrders",
              "description": "Denotes whether the merchant has Weebly orders.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "haveAllLocationsMigratedToOrdersMode",
              "description": "Checks if all locations for the merchant have been migrated to orders mode",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hideGcReportsForFranchiseeMerchants",
              "description": "Checks to hide GC reports for franchisee merchants.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isAu",
              "description": "Checks if the user is in AU.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isBeautyAndPersonalCare",
              "description": "Denotes whether the merchant is in beauty and personal care.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isBeautyOrWellness",
              "description": "Checks if the user is in beauty or wellness.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isCashLocalEligible",
              "description": "Checks if a merchant is eligible for Cash Local.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isCashLocalEligibleAllowingSquareOnline",
              "description": "Checks if a merchant is eligible for Cash Local, allowing sellers with Square Online (but not OOFE).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isCashLocalNeighborhoodsEligible",
              "description": "Checks if a merchant is eligible for Cash Local Neighborhoods.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isCostPlusMerchant",
              "description": "Checks if the user is a cost plus merchant.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isEcomMerchant",
              "description": "Checks if caller is ECOM merchant.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isFoodAndBeverage",
              "description": "Denotes whether the merchant is in food and beverage.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isFr",
              "description": "Checks if the user is in FR.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isFranchiseMerchant",
              "description": "Checks if the user is franchise merchant.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isGb",
              "description": "Checks if the user is in GB.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isHomeRepairAndProfessionalService",
              "description": "Checks if the user is in home repair and professional service.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isInGoldenPathNav",
              "description": "Checks if the user is in golden path navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isInNavigationV1InitialRelease",
              "description": "Checks if the user is part of the initial navigation v1 release",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isInterchangePlusMerchant",
              "description": "Checks if the user is an interchange plus merchant.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isMultiunit",
              "description": "Denotes whether the merchant is multi-unit.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isNotInGoldenPathNav",
              "description": "Checks if the user is not in golden path navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isNotMultiunit",
              "description": "Denotes whether the merchant is not multi-unit.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isNotStaffPlansEligible",
              "description": "Checks if the user is not staff plans eligible.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isPayrollOnlyMerchant",
              "description": "Checks if the merchant is a payroll-only merchant.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isPrinterProfilesTopLevelNavItem",
              "description": "Checks if the printer profiles nav item should be rendered at a higher level.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isSandbox",
              "description": "Denotes whether the merchant is in sandbox.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isStaffPlansEligible",
              "description": "Checks if the user is staff plans eligible.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isSubscribedToFnbKiosk",
              "description": "Denotes whether the merchant is subscribed to FNB Kiosk.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isSubunit",
              "description": "Checks if is subunit.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isTestMerchant",
              "description": "Denotes whether the merchant is a test merchant.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isUs",
              "description": "Checks if the user is in US.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "renamePlasticToPhysical",
              "description": "Denotes whether the merchant should rename plastic to physical.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldExcludeFromRstFreeNavigation",
              "description": "Checks if the user should be excluded from simple cost reporting navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldHideCustomersInsights",
              "description": "Checks if the user should hide customers insights page.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldHideTeamOnboardingInHrToolkit",
              "description": "Checks if the user can see hr navigation item with onboarding permissions.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldNotSeeBankingApplet",
              "description": "Checks if the user should not see banking applet.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldNotSeeEmployeeManagement",
              "description": "Denotes whether a merchant should not see employee management.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldOrderHardwareFromShopAu",
              "description": "Checks if the user should order hardware from Shop AU.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldOrderHardwareFromShopGb",
              "description": "Checks if the user should order hardware from Shop GB.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldOrderReaderFromDashboard",
              "description": "Checks if the user should order a reader from the dashboard.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldOrderReaderFromShopJp",
              "description": "Checks if the user should order hardware from Shop JP.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldPreventEmployeeManagementActivation",
              "description": "Checks if the user should prevent employee management activation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldRedirectToPayroll",
              "description": "Checks if a merchant should be redirected to payroll.",
              "args": [
                {
                  "name": "isHomePageRequest",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Boolean",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldSeeAdvancedInventory",
              "description": "Denotes whether the merchant should see advanced inventory.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldSeeBankingApplet",
              "description": "Denotes whether a merchant should see banking applet.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldSeeBillPayApplet",
              "description": "Checks if the user should see the Bill Pay applet.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldSeeEmployeeManagement",
              "description": "Denotes whether a merchant should see employee management.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldSeeMultiunitUpgrade",
              "description": "Checks if merchant should see multi-unit upgrade.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldSeeStaffSetup",
              "description": "Checks if the user should see staff setup.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldSeeTerminal",
              "description": "Checks if the user should see terminal.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowBusinessSettingsSection",
              "description": "Checks if the user should show business settings section.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowConsolidatedMyBusinessSettingsSection",
              "description": "Checks if the user should show consolidated My Business settings section.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowConsolidatedPaymentsSettings",
              "description": "Checks if the user should show consolidated payments settings.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowCustomerList",
              "description": "Checks if the user should show customer list.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowCustomerNetworkDataSidebarNav",
              "description": "Denotes whether the merchant should see customer network data sidebar nav.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowCustomersActivities",
              "description": "Denotes whether the merchant should see customers activities.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowCustomersOverview",
              "description": "Checks if the user should show customers overview.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowDevices",
              "description": "Checks if should show merchant devices.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowFranchiseCustomerGroups",
              "description": "Checks if the user should show franchise customer groups.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowFranchiseCustomerList",
              "description": "Checks if the user should show franchise customer list.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowJobsNav",
              "description": "Checks if the user should show jobs navigation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowMarketing",
              "description": "Checks if should show marketing to merchant.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowMarketingJapanNav",
              "description": "Denotes whether the merchant should see Japan nav.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowMarketingOrganizationMemberNav",
              "description": "Denotes whether the merchant should see marketing organization member nav.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowNewCustomersOverview",
              "description": "Checks if the user should show new customers overview.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowOldCustomersOverview",
              "description": "Checks if the user should show old customers overview.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowStaffPlansAnnouncements",
              "description": "Checks if the user should show staff plans announcements.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowStaffPlansMessaging",
              "description": "Checks if the user should show staff plans messaging.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowStaffPlansPayroll",
              "description": "Checks if the user should show staff plans payroll.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowStaffPlansShifts",
              "description": "Checks if the user should show staff plans shifts.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowTeamCommissionsAndIsInGoldenPath",
              "description": "Checks if the user should show team commissions and is in golden path.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldShowTeamCommissionsNav",
              "description": "Checks if the user can should show team commissions nav.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldUseDpv1WDpv2ForMultiposInFullGa",
              "description": "Denotes whether the merchant should use DPV1 with DPV2 for MultiPOS in full GA.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shouldUseItemsAutosku",
              "description": "Denotes whether the merchant should use items auto SKU capability.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "squareOneEligibility",
              "description": "SquareOneEligibility represents a seller's eligibility for Square One experiments.",
              "args": [
                {
                  "name": "onboardingEntryPoint",
                  "description": null,
                  "type": {
                    "kind": "ENUM",
                    "name": "OnboardingEntryPoint",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "onboardingEntryPointInput",
                  "description": null,
                  "type": {
                    "kind": "ENUM",
                    "name": "OnboardingEntryPointInput",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "SquareOneEligibility",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "useNewOnboardingFlow",
              "description": "Denotes whether the merchant can use new onboarding flow.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "userIsNotEligibleForSquareCardProcessing",
              "description": "Checks if the user is not eligible for Square card processing.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Date",
          "description": "An RFC-3339 compliant Full Date Scalar",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DateFilterInput",
          "description": "Input type used to specify filters on `Date` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DateFilterInput` input because of collisions between\nkey names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DateFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DateFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Date",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "gt",
              "description": "Matches records where the field value is greater than (>) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "Date",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "gte",
              "description": "Matches records where the field value is greater than or equal to (>=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "Date",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lt",
              "description": "Matches records where the field value is less than (<) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "Date",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lte",
              "description": "Matches records where the field value is less than or equal to (<=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "Date",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DateGroupingOffsetInput",
          "description": "Input type offered when grouping on `Date` fields, representing the amount of offset\n(positive or negative) to shift the `Date` boundaries of each grouping bucket.\n\nFor example, when grouping by `WEEK`, you can shift by 1 day to change\nwhat day-of-week weeks are considered to start on.",
          "fields": null,
          "inputFields": [
            {
              "name": "amount",
              "description": "Number (positive or negative) of the given `unit` to offset the boundaries of the `Date` groupings.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "unit",
              "description": "Unit of offsetting to apply to the boundaries of the `Date` groupings.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DateUnitInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DateGroupingTruncationUnitInput",
          "description": "Enumerates the supported truncation units of a `Date`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DAY",
              "description": "The exact day of a `Date`.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MONTH",
              "description": "The month a `Date` falls in.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "QUARTER",
              "description": "The quarter a `Date` falls in.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WEEK",
              "description": "The week, beginning on Monday, a `Date` falls in.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "YEAR",
              "description": "The year a `Date` falls in.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DateRangeFilter",
          "description": "Input type used to specify filters on DateRange.",
          "fields": null,
          "inputFields": [
            {
              "name": "endDate",
              "description": "A string in YYYY-MM-DD format, such as 2017-10-31, per the ISO 8601 extended format for calendar dates. The end of a date range (inclusive).",
              "type": {
                "kind": "SCALAR",
                "name": "Date",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "startDate",
              "description": "A string in YYYY-MM-DD format, such as 2017-10-31, per the ISO 8601 extended format for calendar dates. The beginning of a date range (inclusive).",
              "type": {
                "kind": "SCALAR",
                "name": "Date",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "DateTime",
          "description": "An RFC-3339 compliant DateTime Scalar",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DateTimeAggregatedValues",
          "description": "A return type used from aggregations to provided aggregated values over `DateTime` fields.",
          "fields": [
            {
              "name": "approximateAvg",
              "description": "The average (mean) of the field values within this grouping.\nThe returned value will be rounded to the nearest `DateTime` value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "approximateDistinctValueCount",
              "description": "An approximation of the number of unique values for this field within this grouping.\n\nThe approximation uses the HyperLogLog++ algorithm from the [HyperLogLog in\nPractice](https://research.google.com/pubs/archive/40671.pdf)\npaper. The accuracy of the returned value varies based on the specific dataset, but\nit usually differs from the true distinct value count by less than 7%.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "exactMax",
              "description": "The maximum of the field values within this grouping.\n\nSo long as the grouping contains at least one non-null value for the\nunderlying indexed field, this will return an exact non-null value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "exactMin",
              "description": "The minimum of the field values within this grouping.\n\nSo long as the grouping contains at least one non-null value for the\nunderlying indexed field, this will return an exact non-null value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DateTimeFilter",
          "description": "Input type used to specify filters on `DateTime` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DateTimeFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "gt",
              "description": "Matches records where the field value is greater than (>) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "gte",
              "description": "Matches records where the field value is greater than or equal to (>=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lt",
              "description": "Matches records where the field value is less than (<) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lte",
              "description": "Matches records where the field value is less than or equal to (<=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "timeOfDay",
              "description": "Matches records based on the time-of-day of the `DateTime` values.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeTimeOfDayFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DateTimeFilterInput",
          "description": "Input type used to specify filters on `DateTime` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DateTimeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "gt",
              "description": "Matches records where the field value is greater than (>) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "gte",
              "description": "Matches records where the field value is greater than or equal to (>=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lt",
              "description": "Matches records where the field value is less than (<) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lte",
              "description": "Matches records where the field value is less than or equal to (<=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "timeOfDay",
              "description": "Matches records based on the time-of-day of the `DateTime` values.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeTimeOfDayFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DateTimeGroupedBy",
          "description": "Allows for grouping `DateTime` values based on the desired return type.",
          "fields": [
            {
              "name": "asDate",
              "description": "An alternative to `asDateTime` for when grouping on just the date is desired.",
              "args": [
                {
                  "name": "offset",
                  "description": "Amount of offset (positive or negative) to shift the `Date` boundaries of each grouping bucket.\n\nFor example, when grouping by `WEEK`, you can shift by 1 day to change what\nday-of-week weeks are considered to start on.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "DateGroupingOffsetInput",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "timeZone",
                  "description": "The time zone to use when determining which grouping a `Date` value falls in.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "TimeZone",
                      "ofType": null
                    }
                  },
                  "defaultValue": "\"UTC\""
                },
                {
                  "name": "truncationUnit",
                  "description": "Determines the grouping truncation unit for this field.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "DateGroupingTruncationUnitInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "Date",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "asDateTime",
              "description": "Used when grouping on the full `DateTime` value.",
              "args": [
                {
                  "name": "offset",
                  "description": "Amount of offset (positive or negative) to shift the `DateTime` boundaries of each grouping bucket.\n\nFor example, when grouping by `WEEK`, you can shift by 1 day to change what\nday-of-week weeks are considered to start on.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "DateTimeGroupingOffsetInput",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "timeZone",
                  "description": "The time zone to use when determining which grouping a `DateTime` value falls in.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "TimeZone",
                      "ofType": null
                    }
                  },
                  "defaultValue": "\"UTC\""
                },
                {
                  "name": "truncationUnit",
                  "description": "Determines the grouping truncation unit for this field.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "DateTimeGroupingTruncationUnitInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "asDayOfWeek",
              "description": "An alternative to `asDateTime` for when grouping on the day-of-week is desired.",
              "args": [
                {
                  "name": "offset",
                  "description": "Amount of offset (positive or negative) to shift the `DayOfWeek` boundaries of each grouping bucket.\n\nFor example, you can apply an offset of -2 hours to shift `DateTime` values to the prior `DayOfWeek`\nwhen they fall between midnight and 2 AM.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "DayOfWeekGroupingOffsetInput",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "timeZone",
                  "description": "The time zone to use when determining which grouping a `DayOfWeek` value falls in.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "TimeZone",
                      "ofType": null
                    }
                  },
                  "defaultValue": "\"UTC\""
                }
              ],
              "type": {
                "kind": "ENUM",
                "name": "DayOfWeek",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "asTimeOfDay",
              "description": "An alternative to `asDateTime` for when grouping on just the time-of-day is desired.",
              "args": [
                {
                  "name": "offset",
                  "description": "Amount of offset (positive or negative) to shift the `LocalTime` boundaries of each grouping bucket.\n\nFor example, when grouping by `HOUR`, you can apply an offset of -5 minutes to shift `LocalTime`\nvalues to the prior hour when they fall between the the top of an hour and 5 after.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "LocalTimeGroupingOffsetInput",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "timeZone",
                  "description": "The time zone to use when determining which grouping a `LocalTime` value falls in.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "TimeZone",
                      "ofType": null
                    }
                  },
                  "defaultValue": "\"UTC\""
                },
                {
                  "name": "truncationUnit",
                  "description": "Determines the grouping truncation unit for this field.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "LocalTimeGroupingTruncationUnitInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "SCALAR",
                "name": "LocalTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DateTimeGroupingOffset",
          "description": "Input type offered when grouping on `DateTime` fields, representing the amount of offset\n(positive or negative) to shift the `DateTime` boundaries of each grouping bucket.\n\nFor example, when grouping by `WEEK`, you can shift by 1 day to change\nwhat day-of-week weeks are considered to start on.",
          "fields": null,
          "inputFields": [
            {
              "name": "amount",
              "description": "Number (positive or negative) of the given `unit` to offset the boundaries of the `DateTime` groupings.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "unit",
              "description": "Unit of offsetting to apply to the boundaries of the `DateTime` groupings.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DateTimeUnitInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DateTimeGroupingOffsetInput",
          "description": "Input type offered when grouping on `DateTime` fields, representing the amount of offset\n(positive or negative) to shift the `DateTime` boundaries of each grouping bucket.\n\nFor example, when grouping by `WEEK`, you can shift by 1 day to change\nwhat day-of-week weeks are considered to start on.",
          "fields": null,
          "inputFields": [
            {
              "name": "amount",
              "description": "Number (positive or negative) of the given `unit` to offset the boundaries of the `DateTime` groupings.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "unit",
              "description": "Unit of offsetting to apply to the boundaries of the `DateTime` groupings.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DateTimeUnitInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DateTimeGroupingTruncationUnitInput",
          "description": "Enumerates the supported truncation units of a `DateTime`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DAY",
              "description": "The day a `DateTime` falls in.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HOUR",
              "description": "The hour a `DateTime` falls in.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MINUTE",
              "description": "The minute a `DateTime` falls in.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MONTH",
              "description": "The month a `DateTime` falls in.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "QUARTER",
              "description": "The quarter a `DateTime` falls in.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SECOND",
              "description": "The second a `DateTime` falls in.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WEEK",
              "description": "The week, beginning on Monday, a `DateTime` falls in.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "YEAR",
              "description": "The year a `DateTime` falls in.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DateTimeListElementFilterInput",
          "description": "Input type used to specify filters on elements of a `[DateTime]` field.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DateTimeListElementFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DateTimeListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DateTimeListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "DateTime",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "gt",
              "description": "Matches records where the field value is greater than (>) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "gte",
              "description": "Matches records where the field value is greater than or equal to (>=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lt",
              "description": "Matches records where the field value is less than (<) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lte",
              "description": "Matches records where the field value is less than or equal to (<=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "timeOfDay",
              "description": "Matches records based on the time-of-day of the `DateTime` values.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeTimeOfDayFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DateTimeListFilterInput",
          "description": "Input type used to specify filters on `[DateTime]` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DateTimeListFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DateTimeListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DateTimeListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anySatisfy",
              "description": "Matches records where any of the list elements match the provided sub-filter.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeListElementFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DateTimeTimeOfDayFilter",
          "description": "Input type used to specify filters on the time-of-day of `DateTime` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the time of day of the `DateTime` field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "LocalTime",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "gt",
              "description": "Matches records where the time of day of the `DateTime` field value is greater than (>) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "LocalTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "gte",
              "description": "Matches records where the time of day of the `DateTime` field value is greater than or equal to (>=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "LocalTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lt",
              "description": "Matches records where the time of day of the `DateTime` field value is less than (<) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "LocalTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lte",
              "description": "Matches records where the time of day of the `DateTime` field value is less than or equal to (<=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "LocalTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "timeZone",
              "description": "TimeZone to use when comparing the `DateTime` values against the provided `LocalTime` values.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "TimeZone",
                  "ofType": null
                }
              },
              "defaultValue": "\"UTC\""
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DateTimeTimeOfDayFilterInput",
          "description": "Input type used to specify filters on the time-of-day of `DateTime` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the time of day of the `DateTime` field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "LocalTime",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "gt",
              "description": "Matches records where the time of day of the `DateTime` field value is greater than (>) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "LocalTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "gte",
              "description": "Matches records where the time of day of the `DateTime` field value is greater than or equal to (>=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "LocalTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lt",
              "description": "Matches records where the time of day of the `DateTime` field value is less than (<) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "LocalTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lte",
              "description": "Matches records where the time of day of the `DateTime` field value is less than or equal to (<=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "LocalTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "timeZone",
              "description": "TimeZone to use when comparing the `DateTime` values against the provided `LocalTime` values.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "TimeZone",
                  "ofType": null
                }
              },
              "defaultValue": "\"UTC\""
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DateTimeUnitInput",
          "description": "Enumeration of `DateTime` units.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DAY",
              "description": "The time period of a full rotation of the Earth with respect to the Sun.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HOUR",
              "description": "1/24th of a day.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MILLISECOND",
              "description": "1/1000th of a second.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MINUTE",
              "description": "1/60th of an hour.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SECOND",
              "description": "1/60th of a minute.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DateUnitInput",
          "description": "Enumeration of `Date` units.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DAY",
              "description": "The time period of a full rotation of the Earth with respect to the Sun.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DayOfWeek",
          "description": "Indicates the specific day of the week.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "FRI",
              "description": "Friday.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MON",
              "description": "Monday.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SAT",
              "description": "Saturday.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUN",
              "description": "Sunday.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "THU",
              "description": "Thursday.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TUE",
              "description": "Tuesday.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WED",
              "description": "Wednesday.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DayOfWeekGroupingOffsetInput",
          "description": "Input type offered when grouping on `DayOfWeek` fields, representing the amount of offset\n(positive or negative) to shift the `DayOfWeek` boundaries of each grouping bucket.\n\nFor example, you can apply an offset of -2 hours to shift `DateTime` values to the prior `DayOfWeek`\nwhen they fall between midnight and 2 AM.",
          "fields": null,
          "inputFields": [
            {
              "name": "amount",
              "description": "Number (positive or negative) of the given `unit` to offset the boundaries of the `DayOfWeek` groupings.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "unit",
              "description": "Unit of offsetting to apply to the boundaries of the `DayOfWeek` groupings.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DateTimeUnitInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Decimal",
          "description": "A string representation of a decimal number, using a . as the decimal separator.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DepositFeeDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of any fees involved with deposits such as for instant deposits.",
          "fields": [
            {
              "name": "payoutId",
              "description": "ID of the payout associated with the deposit fee.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DepositFeeDetailsFilterInput",
          "description": "Input type used to specify filters on `DepositFeeDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "payoutId",
              "description": "Used to filter on the `payoutId` field:\n\n> ID of the payout associated with the deposit fee.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DepositFeeReversedDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of any reversal or refund of fees involved with deposits such as for instant deposits.",
          "fields": [
            {
              "name": "payoutId",
              "description": "ID of the payout associated with the reversed deposit fee.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DepositFeeReversedDetailsFilterInput",
          "description": "Input type used to specify filters on `DepositFeeReversedDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "payoutId",
              "description": "Used to filter on the `payoutId` field:\n\n> ID of the payout associated with the reversed deposit fee.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Destination",
          "description": "Permissions: PAYOUTS_READ\n\nInformation about the banking destination (such as a bank account, Square\nchecking account, or debit card) against which the payout was made.",
          "fields": [
            {
              "name": "id",
              "description": "Square issued unique ID (also known as the instrument ID) associated with this destination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Type of the destination such as a bank account or debit card.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DestinationFilterInput",
          "description": "Input type used to specify filters on `Destination` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Used to filter on the `id` field:\n\n> Square issued unique ID (also known as the instrument ID) associated with this destination.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "type",
              "description": "Used to filter on the `type` field:\n\n> Type of the destination such as a bank account or debit card.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Device",
          "description": "A POS or peripheral device of a Square merchant.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "id",
              "description": "The device-merchant id. Unique identifier of the document since devices can be shared between merchants.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "processedPayments",
              "description": "Payments processed by this device for a particular merchant.\n\nPermissions: PAYMENTS_READ.",
              "args": [
                {
                  "name": "after",
                  "description": "Used to forward-paginate through the `processedPayments`. When provided, the next page after the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Used to backward-paginate through the `processedPayments`. When provided, the previous page before the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "Used to filter the returned `processedPayments` based on the provided criteria.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Used in conjunction with the `after` argument to forward-paginate through the `processedPayments`.\nWhen provided, limits the number of returned results to the first `n` after the provided\n`after` cursor (or from the start of the `processedPayments`, if no `after` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Used in conjunction with the `before` argument to backward-paginate through the `processedPayments`.\nWhen provided, limits the number of returned results to the last `n` before the provided\n`before` cursor (or from the end of the `processedPayments`, if no `before` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Used to specify how the returned `processedPayments` should be sorted.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "PaymentSortOrder",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "PaymentConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "aggregatedPeripheralStatus",
              "description": "The aggregated status of all the peripheral DeviceStatuses, excluding the status of the primary device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "aggregatedStatus",
              "description": "The aggregated status of the device and all its peripheral DeviceStatuses.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attributes",
              "description": "A collection of DeviceAttributes representing the device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceAttributes",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "components",
              "description": "A list of components applicable to the device.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "DeviceComponent",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "connectedPeripheralDeviceAggregations",
              "description": "Aggregations over the `connectedPeripheralDevices` data:\n\n> Peripheral devices that are connected to this primary (POS) device. Only applicable to primary (POS) devices.",
              "args": [
                {
                  "name": "after",
                  "description": "Used to forward-paginate through the `connectedPeripheralDeviceAggregations`. When provided, the next page after the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Used to backward-paginate through the\n`connectedPeripheralDeviceAggregations`. When provided, the previous page before the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "Used to filter the `Device` documents that get aggregated over based on the provided criteria.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceFilterInput",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Used in conjunction with the `after` argument to forward-paginate through the `connectedPeripheralDeviceAggregations`.\nWhen provided, limits the number of returned results to the first `n` after the provided\n`after` cursor (or from the start of the `connectedPeripheralDeviceAggregations`, if no `after` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Used in conjunction with the `before` argument to backward-paginate through the `connectedPeripheralDeviceAggregations`.\nWhen provided, limits the number of returned results to the last `n` before the provided\n`before` cursor (or from the end of the `connectedPeripheralDeviceAggregations`, if no `before` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceAggregationConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "connectedPeripheralDeviceIds",
              "description": "Peripheral device ids that are connected to this primary (POS) device. Only applicable to primary (POS) devices.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "connectedPeripheralDevices",
              "description": "Peripheral devices that are connected to this primary (POS) device. Only applicable to primary (POS) devices.",
              "args": [
                {
                  "name": "after",
                  "description": "Used to forward-paginate through the `connectedPeripheralDevices`. When provided, the next page after the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Used to backward-paginate through the `connectedPeripheralDevices`. When provided, the previous page before the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "Used to filter the returned `connectedPeripheralDevices` based on the provided criteria.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceFilterInput",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Used in conjunction with the `after` argument to forward-paginate through the `connectedPeripheralDevices`.\nWhen provided, limits the number of returned results to the first `n` after the provided\n`after` cursor (or from the start of the `connectedPeripheralDevices`, if no `after` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Used in conjunction with the `before` argument to backward-paginate through the `connectedPeripheralDevices`.\nWhen provided, limits the number of returned results to the last `n` before the provided\n`before` cursor (or from the end of the `connectedPeripheralDevices`, if no `before` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Used to specify how the returned `connectedPeripheralDevices` should be sorted.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "DeviceSortOrderInput",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "connectedPrimaryDeviceAggregations",
              "description": "Aggregations over the `connectedPrimaryDevices` data:\n\n> Primary (POS) devices to which this peripheral device is connected. Only applicable to peripheral devices.",
              "args": [
                {
                  "name": "after",
                  "description": "Used to forward-paginate through the `connectedPrimaryDeviceAggregations`. When provided, the next page after the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Used to backward-paginate through the `connectedPrimaryDeviceAggregations`. When provided, the previous page before the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "Used to filter the `Device` documents that get aggregated over based on the provided criteria.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceFilterInput",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Used in conjunction with the `after` argument to forward-paginate through the `connectedPrimaryDeviceAggregations`.\nWhen provided, limits the number of returned results to the first `n` after the provided\n`after` cursor (or from the start of the `connectedPrimaryDeviceAggregations`, if no `after` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Used in conjunction with the `before` argument to backward-paginate through the `connectedPrimaryDeviceAggregations`.\nWhen provided, limits the number of returned results to the last `n` before the provided\n`before` cursor (or from the end of the `connectedPrimaryDeviceAggregations`, if no `before` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceAggregationConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "connectedPrimaryDeviceIds",
              "description": "Primary (POS) device ids to which this peripheral device is connected. Only applicable to peripheral devices.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "connectedPrimaryDevices",
              "description": "Primary (POS) devices to which this peripheral device is connected. Only applicable to peripheral devices.",
              "args": [
                {
                  "name": "after",
                  "description": "Used to forward-paginate through the `connectedPrimaryDevices`. When provided, the next page after the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Used to backward-paginate through the `connectedPrimaryDevices`. When provided, the previous page before the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "Used to filter the returned `connectedPrimaryDevices` based on the provided criteria.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceFilterInput",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Used in conjunction with the `after` argument to forward-paginate through the `connectedPrimaryDevices`.\nWhen provided, limits the number of returned results to the first `n` after the provided\n`after` cursor (or from the start of the `connectedPrimaryDevices`, if no `after` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Used in conjunction with the `before` argument to backward-paginate through the `connectedPrimaryDevices`.\nWhen provided, limits the number of returned results to the last `n` before the provided\n`before` cursor (or from the end of the `connectedPrimaryDevices`, if no `before` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Used to specify how the returned `connectedPrimaryDevices` should be sorted.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "DeviceSortOrderInput",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The RFC 3339-formatted timestamp of when the device was created.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleted",
              "description": "Set to true if this device has been deleted. Clients should filter on this\nfield to exclude devices which have been deleted.\nNote: this field is a work around for ElasticGraph's current lack of\nfirst-class `delete` support. Once the [planned support](https://github.com/squareup/sq-elasticgraph-ruby/blob/master/adr/0023-support-delete-events.md)\nis implemented, we should replace this field with usage of that feature.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics",
              "description": "The diagnostics associated with this device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceDiagnostics",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "events",
              "description": "The events associated with this device.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "DeviceEvent",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "externalDeviceId",
              "description": "Square-issued ID of the device. This is the device id used by some systems and services external to the devices subgraph\n(e.g. device-registry, payments), which differs slightly from the id used by the devices subgraph. This is generally the\nserial number or manufacturers id of the device, with the exception of COTS (Android and iOS) devices, where it's the\ninstallation id prefixed with the string 'DEVICE_INSTALLATION_ID'. This id is not unique to a merchant and so must be\nreferenced in conjunction with merchant.id.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locations",
              "description": "Populated with all locations (across applications) for primary devices and\nall relevant locations (across primary devices) for peripheral devices. This field is additive only.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Location",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchant",
              "description": "The merchant using the device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Merchant",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "softwareUpdateDetails",
              "description": "The software update details of this device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceSoftwareUpdateDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "The current status of the device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The RFC 3339-formatted value of the most recent update to the device information.\n(Could represent any field update on the device.).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceAggregatedValues",
          "description": "Type used to perform aggregation computations on `Device` fields.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "id",
              "description": "Computed aggregate values for the `id` field:\n\n> The device-merchant id. Unique identifier of the document since devices can be shared between merchants.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "aggregatedPeripheralStatus",
              "description": "Computed aggregate values for the `aggregatedPeripheralStatus` field:\n\n> The aggregated status of all the peripheral DeviceStatuses, excluding the status of the primary device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceStatusAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "aggregatedStatus",
              "description": "Computed aggregate values for the `aggregatedStatus` field:\n\n> The aggregated status of the device and all its peripheral DeviceStatuses.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceStatusAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attributes",
              "description": "Computed aggregate values for the `attributes` field:\n\n> A collection of DeviceAttributes representing the device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceAttributesAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "connectedPeripheralDeviceIds",
              "description": "Computed aggregate values for the `connectedPeripheralDeviceIds` field:\n\n> Peripheral device ids that are connected to this primary (POS) device. Only applicable to primary (POS) devices.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "connectedPrimaryDeviceIds",
              "description": "Computed aggregate values for the `connectedPrimaryDeviceIds` field:\n\n> Primary (POS) device ids to which this peripheral device is connected. Only applicable to peripheral devices.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Computed aggregate values for the `createdAt` field:\n\n> The RFC 3339-formatted timestamp of when the device was created.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DateTimeAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleted",
              "description": "Computed aggregate values for the `deleted` field:\n\n> Set to true if this device has been deleted. Clients should filter on this\nfield to exclude devices which have been deleted.\n> Note: this field is a work around for ElasticGraph's current lack of\nfirst-class `delete` support. Once the [planned support](https://github.com/squareup/sq-elasticgraph-ruby/blob/master/adr/0023-support-delete-events.md)\n> is implemented, we should replace this field with usage of that feature.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics",
              "description": "Computed aggregate values for the `diagnostics` field:\n\n> The diagnostics associated with this device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceDiagnosticsAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "events",
              "description": "Computed aggregate values for the `events` field:\n\n> The events associated with this device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceEventAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "externalDeviceId",
              "description": "Computed aggregate values for the `externalDeviceId` field:\n\n> Square-issued ID of the device. This is the device id used by some systems and services external to the devices subgraph\n> (e.g. device-registry, payments), which differs slightly from the id used by the devices subgraph. This is generally the\n> serial number or manufacturers id of the device, with the exception of COTS (Android and iOS) devices, where it's the\n> installation id prefixed with the string 'DEVICE_INSTALLATION_ID'. This id is not unique to a merchant and so must be\n> referenced in conjunction with merchant.id.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locations",
              "description": "Computed aggregate values for the `locations` field:\n\n> Populated with all locations (across applications) for primary devices and\n> all relevant locations (across primary devices) for peripheral devices. This field is additive only.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LocationAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchant",
              "description": "Computed aggregate values for the `merchant` field:\n\n> The merchant using the device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "MerchantAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "softwareUpdateDetails",
              "description": "Computed aggregate values for the `softwareUpdateDetails` field:\n\n> The software update details of this device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceSoftwareUpdateDetailsAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "Computed aggregate values for the `status` field:\n\n> The current status of the device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceStatusAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Computed aggregate values for the `updatedAt` field:\n\n> The RFC 3339-formatted value of the most recent update to the device information.\n> (Could represent any field update on the device.).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DateTimeAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceAggregation",
          "description": "Return type representing a bucket of `Device` documents for an aggregations query.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "aggregatedValues",
              "description": "Provides computed aggregated values over all `Device` documents in an aggregation bucket.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "count",
              "description": "The count of `Device` documents in an aggregation bucket.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "groupedBy",
              "description": "Used to specify the `Device` fields to group by. The returned values identify each aggregation bucket.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subAggregations",
              "description": "Used to perform sub-aggregations of `DeviceAggregation` data.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceAggregationSubAggregations",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceAggregationConnection",
          "description": "Represents a paginated collection of `DeviceAggregation` results.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Connection-Types) for more info.\n\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "edges",
              "description": "Wraps a specific `DeviceAggregation` to pair it with its pagination cursor.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "DeviceAggregationEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "The list of `DeviceAggregation` results.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "DeviceAggregation",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceAggregationEdge",
          "description": "Represents a specific `DeviceAggregation` in the context of a `DeviceAggregationConnection`,\nproviding access to both the `DeviceAggregation` and a pagination `Cursor`.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Edge-Types) for more info.\n\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "cursor",
              "description": "The `Cursor` of this `DeviceAggregation`. This can be passed in the next query as\na `before` or `after` argument to continue paginating from this `DeviceAggregation`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `DeviceAggregation` of this edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceAggregation",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceAggregationSubAggregations",
          "description": "Provides access to the `subAggregations` within each `DeviceAggregation`.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "components",
              "description": "Used to perform a sub-aggregation of `components`:\n\n> A list of components applicable to the device.",
              "args": [
                {
                  "name": "filter",
                  "description": "Used to filter the `DeviceComponent` documents included in this sub-aggregation based on the provided criteria.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceComponentFilterInput",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Determines how many sub-aggregation buckets should be returned.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceDeviceComponentSubAggregationConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceApplicationState",
          "description": "An enum for DeviceApplicationState.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "APPLICATION_STATE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BACKGROUND",
              "description": "Application is in the background.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FOREGROUND",
              "description": "Application is in the foreground.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INITIALIZING",
              "description": "Special case of foreground updates that indicates peripheral connections may still be initializing.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOGGED_OUT",
              "description": "The update was sent from an application that is logging out.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceApplicationStateFilterInput",
          "description": "Input type used to specify filters on `DeviceApplicationState` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceApplicationStateFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceApplicationStateFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceApplicationStateFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DeviceApplicationStateInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceApplicationStateFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceApplicationStateInput",
          "description": "An enum for DeviceApplicationState.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "APPLICATION_STATE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BACKGROUND",
              "description": "Application is in the background.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FOREGROUND",
              "description": "Application is in the foreground.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INITIALIZING",
              "description": "Special case of foreground updates that indicates peripheral connections may still be initializing.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOGGED_OUT",
              "description": "The update was sent from an application that is logging out.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceApplicationType",
          "description": "An enum for DeviceApplicationType.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "APPLICATION_TYPE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "APPOINTMENTS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FNB_KIOSK",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVOICES",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KDS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "READER_SDK",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RESTAURANT",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RETAIL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_POS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TERMINAL_API",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceApplicationTypeFilterInput",
          "description": "Input type used to specify filters on `DeviceApplicationType` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceApplicationTypeFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceApplicationTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceApplicationTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DeviceApplicationTypeInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceApplicationTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceApplicationTypeInput",
          "description": "An enum for DeviceApplicationType.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "APPLICATION_TYPE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "APPOINTMENTS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FNB_KIOSK",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVOICES",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KDS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "READER_SDK",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RESTAURANT",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RETAIL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_POS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TERMINAL_API",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceAttributes",
          "description": "Represents the attributes of a device.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "manufacturer",
              "description": "The maker of the device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "model",
              "description": "The specific model of the device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "modelText",
              "description": "The specific model of the device. Indexed for full-text search.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "A seller-specified name for the device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nameText",
              "description": "A seller-specified name for the device. Indexed for full-text search.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "squareHardwareType",
              "description": "The Square Hardware type, if applicable to this device.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "SquareHardwareType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The device type.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The current version of software installed on the device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "versionText",
              "description": "The current version of software installed on the device. Indexed for full-text search.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceAttributesAggregatedValues",
          "description": "Type used to perform aggregation computations on `DeviceAttributes` fields.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "manufacturer",
              "description": "Computed aggregate values for the `manufacturer` field:\n\n> The maker of the device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "model",
              "description": "Computed aggregate values for the `model` field:\n\n> The specific model of the device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Computed aggregate values for the `name` field:\n\n> A seller-specified name for the device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "squareHardwareType",
              "description": "Computed aggregate values for the `squareHardwareType` field:\n\n> The Square Hardware type, if applicable to this device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Computed aggregate values for the `type` field:\n\n> The device type.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "Computed aggregate values for the `version` field:\n\n> The current version of software installed on the device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceAttributesFilterInput",
          "description": "Input type used to specify filters on `DeviceAttributes` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceAttributesFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceAttributesFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceAttributesFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "manufacturer",
              "description": "Used to filter on the `manufacturer` field:\n\n> The maker of the device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "model",
              "description": "Used to filter on the `model` field:\n\n> The specific model of the device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "modelText",
              "description": "Used to filter on the `modelText` field:\n\n> The specific model of the device. Indexed for full-text search.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TextFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "name",
              "description": "Used to filter on the `name` field:\n\n> A seller-specified name for the device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "nameText",
              "description": "Used to filter on the `nameText` field:\n\n> A seller-specified name for the device. Indexed for full-text search.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TextFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceAttributesFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "squareHardwareType",
              "description": "Used to filter on the `squareHardwareType` field:\n\n> The Square Hardware type, if applicable to this device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SquareHardwareTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "type",
              "description": "Used to filter on the `type` field:\n\n> The device type.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "version",
              "description": "Used to filter on the `version` field:\n\n> The current version of software installed on the device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "versionText",
              "description": "Used to filter on the `versionText` field:\n\n> The current version of software installed on the device. Indexed for full-text search.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TextFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceAttributesGroupedBy",
          "description": "Type used to specify the `DeviceAttributes` fields to group by for aggregations.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "manufacturer",
              "description": "The `manufacturer` field value for this group:\n\n> The maker of the device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "model",
              "description": "The `model` field value for this group:\n\n> The specific model of the device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The `name` field value for this group:\n\n> A seller-specified name for the device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "squareHardwareType",
              "description": "The `squareHardwareType` field value for this group:\n\n> The Square Hardware type, if applicable to this device.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "SquareHardwareType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The `type` field value for this group:\n\n> The device type.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The `version` field value for this group:\n\n> The current version of software installed on the device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceCellularConnectionType",
          "description": "An enum for DeviceCellularConnectionType.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CELLULAR_CONNECTION_TYPE_2G",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CELLULAR_CONNECTION_TYPE_3G",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CELLULAR_CONNECTION_TYPE_4G",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CELLULAR_CONNECTION_TYPE_5G",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CELLULAR_CONNECTION_TYPE_EDGE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CELLULAR_CONNECTION_TYPE_HSPA",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CELLULAR_CONNECTION_TYPE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceCellularConnectionTypeFilterInput",
          "description": "Input type used to specify filters on `DeviceCellularConnectionType` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceCellularConnectionTypeFilterInput` input\nbecause of collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceCellularConnectionTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceCellularConnectionTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DeviceCellularConnectionTypeInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceCellularConnectionTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceCellularConnectionTypeInput",
          "description": "An enum for DeviceCellularConnectionType.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CELLULAR_CONNECTION_TYPE_2G",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CELLULAR_CONNECTION_TYPE_3G",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CELLULAR_CONNECTION_TYPE_4G",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CELLULAR_CONNECTION_TYPE_5G",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CELLULAR_CONNECTION_TYPE_EDGE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CELLULAR_CONNECTION_TYPE_HSPA",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CELLULAR_CONNECTION_TYPE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceCode",
          "description": "A login token (alternative to username/password) associated with a device.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "id",
              "description": "The Square-issued ID of the device code.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The name of the device code.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nameText",
              "description": "The name of the device code. Indexed for full-text search.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceCodeAggregatedValues",
          "description": "Type used to perform aggregation computations on `DeviceCode` fields.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "id",
              "description": "Computed aggregate values for the `id` field:\n\n> The Square-issued ID of the device code.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Computed aggregate values for the `name` field:\n\n> The name of the device code.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceCodeFilterInput",
          "description": "Input type used to specify filters on `DeviceCode` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Used to filter on the `id` field:\n\n> The Square-issued ID of the device code.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "name",
              "description": "Used to filter on the `name` field:\n\n> The name of the device code.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "nameText",
              "description": "Used to filter on the `nameText` field:\n\n> The name of the device code. Indexed for full-text search.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TextFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceCodeGroupedBy",
          "description": "Type used to specify the `DeviceCode` fields to group by for aggregations.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "id",
              "description": "The `id` field value for this group:\n\n> The Square-issued ID of the device code.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The `name` field value for this group:\n\n> The name of the device code.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceComponent",
          "description": "The wrapper object for the component entries of a given component type.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "componentDetails",
              "description": "Structured data for the correseponding component type.",
              "args": [],
              "type": {
                "kind": "UNION",
                "name": "DeviceComponentDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of this component. Each component type has expected properties\nexpressed in a structured format within its corresponding DeviceComponentDetails.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceComponentType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceComponentAggregatedValues",
          "description": "Type used to perform aggregation computations on `DeviceComponent` fields.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "componentDetails",
              "description": "Computed aggregate values for the `componentDetails` field:\n\n> Structured data for the correseponding component type.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceComponentDetailsAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Computed aggregate values for the `type` field:\n\n> The type of this component. Each component type has expected properties\n> expressed in a structured format within its corresponding DeviceComponentDetails.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "UNION",
          "name": "DeviceComponentDetails",
          "description": "A union for DeviceComponentDetails.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "AirPrintInterfaceComponentDetails",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ApplicationComponentDetails",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "BarcodeScannerComponentDetails",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "BatteryComponentDetails",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "BluetoothInterfaceComponentDetails",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CardReaderComponentDetails",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CellularDataComponentDetails",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "EthernetComponentDetails",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "InternalScannerComponentDetails",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "NetworkInterfaceComponentDetails",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PrinterComponentDetails",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ScaleComponentDetails",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ScannerScaleComponentDetails",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ShopComponentDetails",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "StandComponentDetails",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "USBInterfaceComponentDetails",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "WiFiComponentDetails",
              "ofType": null
            }
          ]
        },
        {
          "kind": "OBJECT",
          "name": "DeviceComponentDetailsAggregatedValues",
          "description": "Type used to perform aggregation computations on `DeviceComponentDetails` fields.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "applicationState",
              "description": "Computed aggregate values for the `applicationState` field:\n\n> The current state of the application.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "applicationType",
              "description": "Computed aggregate values for the `applicationType` field:\n\n> The type of application.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "applicationVersion",
              "description": "Computed aggregate values for the `applicationVersion` field:\n\n> The version of the application.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bluetoothSignalStrength",
              "description": "Computed aggregate values for the `bluetoothSignalStrength` field:\n\n> A representation of signal strength of the Bluetooth connection.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceSignalStrengthMeasurementAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardReaderStatus",
              "description": "Computed aggregate values for the `cardReaderStatus` field:\n\n> The current status of the internal card reader.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardReaderType",
              "description": "Computed aggregate values for the `cardReaderType` field:\n\n> The type of card reader.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardReaderVersion",
              "description": "Computed aggregate values for the `cardReaderVersion` field:\n\n> The version of the card reader.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cellularConnectionType",
              "description": "Computed aggregate values for the `cellularConnectionType` field:\n\n> The type of the cellular connection.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cellularSignalStrength",
              "description": "Computed aggregate values for the `cellularSignalStrength` field:\n\n> A representation of signal strength of the cellular data connection.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceSignalStrengthMeasurementAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceCode",
              "description": "Computed aggregate values for the `deviceCode` field:\n\n> The device code most recently paired to this device on this application.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceCodeAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceProfile",
              "description": "Computed aggregate values for the `deviceProfile` field:\n\n> The device profile most recently associated with this device and application.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceProfileAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "enabled",
              "description": "Computed aggregate values for the `enabled` field:\n\n> Indicates whether the internal barcode scanner is enabled from the hardware\nsettings. If true, the scanner is enabled. If false, the scanner is disabled\nand cannot be used.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ethernetActive",
              "description": "Computed aggregate values for the `ethernetActive` field:\n\n> A boolean to represent whether the Ethernet interface is currently active.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "externalPower",
              "description": "Computed aggregate values for the `externalPower` field:\n\n> The status of external power.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inactive",
              "description": "Computed aggregate values for the `inactive` field:\n\n> Indicates whether the application is inactive on this device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ipAddressV4",
              "description": "Computed aggregate values for the `ipAddressV4` field:\n\n> The string representation of the device's IPv4 address.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDefaultWidth",
              "description": "Computed aggregate values for the `isDefaultWidth` field:\n\n> Indicates whether the current paper width is the default width.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "macAddress",
              "description": "Computed aggregate values for the `macAddress` field:\n\n> The MAC address of the peripheral device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mode",
              "description": "Computed aggregate values for the `mode` field:\n\n> The SuperPOS mode associated with this application.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ModeAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "orderId",
              "description": "Computed aggregate values for the `orderId` field:\n\n> The shop order id.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "paperWidth",
              "description": "Computed aggregate values for the `paperWidth` field:\n\n> The paper width configuration on the printer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "IntAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "portNumber",
              "description": "Computed aggregate values for the `portNumber` field:\n\n> The port number being used to connect the peripheral device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "IntAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "printerType",
              "description": "Computed aggregate values for the `printerType` field:\n\n> The type of the printer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scaleDetails",
              "description": "Computed aggregate values for the `scaleDetails` field:\n\n> The Scale component details of the ScannerScale.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ScaleComponentDetailsAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scannerDetails",
              "description": "Computed aggregate values for the `scannerDetails` field:\n\n> The BarcodeScanner component details of the ScannerScale.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "BarcodeScannerComponentDetailsAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "secureConnection",
              "description": "Computed aggregate values for the `secureConnection` field:\n\n> The security protocol for a secure connection (e.g. WPA2). None provided if the connection is unsecured.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "selectedWeightUnit",
              "description": "Computed aggregate values for the `selectedWeightUnit` field:\n\n> Indicates the currently selected weight unit on the scale.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sessionLocation",
              "description": "Computed aggregate values for the `sessionLocation` field:\n\n> The location of the session for the application.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LocationAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ssid",
              "description": "Computed aggregate values for the `ssid` field:\n\n> The name of the connected WiFi network.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "standVersion",
              "description": "Computed aggregate values for the `standVersion` field:\n\n> The version of the stand.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "superposEnabled",
              "description": "Computed aggregate values for the `superposEnabled` field:\n\n> Indicates whether the application is enabled for SuperPOS on this device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "supportsTwoDimensionalCodes",
              "description": "Computed aggregate values for the `supportsTwoDimensionalCodes` field:\n\n> Indicates the capabilities of the barcode scanner.\n> If true, the scanner supports both 1D and 2D codes. If false, the scanner supports only 1D codes.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Computed aggregate values for the `updatedAt` field:\n\n> The server generated RFC 3339-formatted value of the most recent update to this application.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DateTimeAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "Computed aggregate values for the `url` field:\n\n> The string representation of the AirPrint URL.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "visiblePercent",
              "description": "Computed aggregate values for the `visiblePercent` field:\n\n> The battery charge percentage as displayed on the device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "IntAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "wifiActive",
              "description": "Computed aggregate values for the `wifiActive` field:\n\n> A boolean to represent whether the WiFi interface is currently active.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "wifiSignalStrength",
              "description": "Computed aggregate values for the `wifiSignalStrength` field:\n\n> A representation of signal strength of the WiFi network connection.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceSignalStrengthMeasurementAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceComponentDetailsFilterInput",
          "description": "Input type used to specify filters on `DeviceComponentDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceComponentDetailsFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceComponentDetailsFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceComponentDetailsFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "applicationState",
              "description": "Used to filter on the `applicationState` field:\n\n> The current state of the application.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceApplicationStateFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "applicationType",
              "description": "Used to filter on the `applicationType` field:\n\n> The type of application.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceApplicationTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "applicationVersion",
              "description": "Used to filter on the `applicationVersion` field:\n\n> The version of the application.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "applicationVersionText",
              "description": "Used to filter on the `applicationVersionText` field:\n\n> The version of the application. Indexed for full-text search.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TextFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "bluetoothSignalStrength",
              "description": "Used to filter on the `bluetoothSignalStrength` field:\n\n> A representation of signal strength of the Bluetooth connection.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceSignalStrengthMeasurementFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cardReaderStatus",
              "description": "Used to filter on the `cardReaderStatus` field:\n\n> The current status of the internal card reader.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CardReaderStatusFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cardReaderType",
              "description": "Used to filter on the `cardReaderType` field:\n\n> The type of card reader.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CardReaderTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cardReaderVersion",
              "description": "Used to filter on the `cardReaderVersion` field:\n\n> The version of the card reader.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cellularConnectionType",
              "description": "Used to filter on the `cellularConnectionType` field:\n\n> The type of the cellular connection.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceCellularConnectionTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cellularSignalStrength",
              "description": "Used to filter on the `cellularSignalStrength` field:\n\n> A representation of signal strength of the cellular data connection.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceSignalStrengthMeasurementFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deviceCode",
              "description": "Used to filter on the `deviceCode` field:\n\n> The device code most recently paired to this device on this application.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceCodeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deviceProfile",
              "description": "Used to filter on the `deviceProfile` field:\n\n> The device profile most recently associated with this device and application.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceProfileFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "enabled",
              "description": "Used to filter on the `enabled` field:\n\n> Indicates whether the internal barcode scanner is enabled from the hardware\nsettings. If true, the scanner is enabled. If false, the scanner is disabled\nand cannot be used.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BooleanFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "ethernetActive",
              "description": "Used to filter on the `ethernetActive` field:\n\n> A boolean to represent whether the Ethernet interface is currently active.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BooleanFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "externalPower",
              "description": "Used to filter on the `externalPower` field:\n\n> The status of external power.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceExternalPowerFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "inactive",
              "description": "Used to filter on the `inactive` field:\n\n> Indicates whether the application is inactive on this device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BooleanFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "ipAddressV4",
              "description": "Used to filter on the `ipAddressV4` field:\n\n> The string representation of the device's IPv4 address.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "isDefaultWidth",
              "description": "Used to filter on the `isDefaultWidth` field:\n\n> Indicates whether the current paper width is the default width.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BooleanFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "macAddress",
              "description": "Used to filter on the `macAddress` field:\n\n> The MAC address of the peripheral device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "mode",
              "description": "Used to filter on the `mode` field:\n\n> The SuperPOS mode associated with this application.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ModeRefFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceComponentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "orderId",
              "description": "Used to filter on the `orderId` field:\n\n> The shop order id.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "paperWidth",
              "description": "Used to filter on the `paperWidth` field:\n\n> The paper width configuration on the printer.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "portNumber",
              "description": "Used to filter on the `portNumber` field:\n\n> The port number being used to connect the peripheral device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "printerType",
              "description": "Used to filter on the `printerType` field:\n\n> The type of the printer.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PrinterTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "scaleDetails",
              "description": "Used to filter on the `scaleDetails` field:\n\n> The Scale component details of the ScannerScale.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ScaleComponentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "scannerDetails",
              "description": "Used to filter on the `scannerDetails` field:\n\n> The BarcodeScanner component details of the ScannerScale.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BarcodeScannerComponentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "secureConnection",
              "description": "Used to filter on the `secureConnection` field:\n\n> The security protocol for a secure connection (e.g. WPA2). None provided if the connection is unsecured.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "selectedWeightUnit",
              "description": "Used to filter on the `selectedWeightUnit` field:\n\n> Indicates the currently selected weight unit on the scale.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceWeightUnitFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "sessionLocation",
              "description": "Used to filter on the `sessionLocation` field:\n\n> The location of the session for the application.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "LocationRefFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "ssid",
              "description": "Used to filter on the `ssid` field:\n\n> The name of the connected WiFi network.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "standVersion",
              "description": "Used to filter on the `standVersion` field:\n\n> The version of the stand.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "superposEnabled",
              "description": "Used to filter on the `superposEnabled` field:\n\n> Indicates whether the application is enabled for SuperPOS on this device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BooleanFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "supportsTwoDimensionalCodes",
              "description": "Used to filter on the `supportsTwoDimensionalCodes` field:\n\n> Indicates the capabilities of the barcode scanner.\n> If true, the scanner supports both 1D and 2D codes. If false, the scanner supports only 1D codes.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BooleanFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Used to filter on the `updatedAt` field:\n\n> The server generated RFC 3339-formatted value of the most recent update to this application.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "url",
              "description": "Used to filter on the `url` field:\n\n> The string representation of the AirPrint URL.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "visiblePercent",
              "description": "Used to filter on the `visiblePercent` field:\n\n> The battery charge percentage as displayed on the device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "wifiActive",
              "description": "Used to filter on the `wifiActive` field:\n\n> A boolean to represent whether the WiFi interface is currently active.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BooleanFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "wifiSignalStrength",
              "description": "Used to filter on the `wifiSignalStrength` field:\n\n> A representation of signal strength of the WiFi network connection.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceSignalStrengthMeasurementFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceComponentDetailsGroupedBy",
          "description": "Type used to specify the `DeviceComponentDetails` fields to group by for aggregations.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "applicationState",
              "description": "The `applicationState` field value for this group:\n\n> The current state of the application.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceApplicationState",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "applicationType",
              "description": "The `applicationType` field value for this group:\n\n> The type of application.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceApplicationType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "applicationVersion",
              "description": "The `applicationVersion` field value for this group:\n\n> The version of the application.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bluetoothSignalStrength",
              "description": "The `bluetoothSignalStrength` field value for this group:\n\n> A representation of signal strength of the Bluetooth connection.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceSignalStrengthMeasurementGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardReaderStatus",
              "description": "The `cardReaderStatus` field value for this group:\n\n> The current status of the internal card reader.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CardReaderStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardReaderType",
              "description": "The `cardReaderType` field value for this group:\n\n> The type of card reader.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "CardReaderType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardReaderVersion",
              "description": "The `cardReaderVersion` field value for this group:\n\n> The version of the card reader.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cellularConnectionType",
              "description": "The `cellularConnectionType` field value for this group:\n\n> The type of the cellular connection.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceCellularConnectionType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cellularSignalStrength",
              "description": "The `cellularSignalStrength` field value for this group:\n\n> A representation of signal strength of the cellular data connection.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceSignalStrengthMeasurementGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceCode",
              "description": "The `deviceCode` field value for this group:\n\n> The device code most recently paired to this device on this application.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceCodeGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceProfile",
              "description": "The `deviceProfile` field value for this group:\n\n> The device profile most recently associated with this device and application.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceProfileGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "enabled",
              "description": "The `enabled` field value for this group:\n\n> Indicates whether the internal barcode scanner is enabled from the hardware\nsettings. If true, the scanner is enabled. If false, the scanner is disabled\nand cannot be used.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ethernetActive",
              "description": "The `ethernetActive` field value for this group:\n\n> A boolean to represent whether the Ethernet interface is currently active.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "externalPower",
              "description": "The `externalPower` field value for this group:\n\n> The status of external power.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceExternalPower",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inactive",
              "description": "The `inactive` field value for this group:\n\n> Indicates whether the application is inactive on this device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ipAddressV4",
              "description": "The `ipAddressV4` field value for this group:\n\n> The string representation of the device's IPv4 address.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDefaultWidth",
              "description": "The `isDefaultWidth` field value for this group:\n\n> Indicates whether the current paper width is the default width.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "macAddress",
              "description": "The `macAddress` field value for this group:\n\n> The MAC address of the peripheral device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mode",
              "description": "The `mode` field value for this group:\n\n> The SuperPOS mode associated with this application.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ModeGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "orderId",
              "description": "The `orderId` field value for this group:\n\n> The shop order id.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "paperWidth",
              "description": "The `paperWidth` field value for this group:\n\n> The paper width configuration on the printer.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "portNumber",
              "description": "The `portNumber` field value for this group:\n\n> The port number being used to connect the peripheral device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "printerType",
              "description": "The `printerType` field value for this group:\n\n> The type of the printer.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "PrinterType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scaleDetails",
              "description": "The `scaleDetails` field value for this group:\n\n> The Scale component details of the ScannerScale.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ScaleComponentDetailsGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scannerDetails",
              "description": "The `scannerDetails` field value for this group:\n\n> The BarcodeScanner component details of the ScannerScale.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "BarcodeScannerComponentDetailsGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "secureConnection",
              "description": "The `secureConnection` field value for this group:\n\n> The security protocol for a secure connection (e.g. WPA2). None provided if the connection is unsecured.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "selectedWeightUnit",
              "description": "The `selectedWeightUnit` field value for this group:\n\n> Indicates the currently selected weight unit on the scale.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceWeightUnit",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sessionLocation",
              "description": "The `sessionLocation` field value for this group:\n\n> The location of the session for the application.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LocationGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ssid",
              "description": "The `ssid` field value for this group:\n\n> The name of the connected WiFi network.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "standVersion",
              "description": "The `standVersion` field value for this group:\n\n> The version of the stand.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "superposEnabled",
              "description": "The `superposEnabled` field value for this group:\n\n> Indicates whether the application is enabled for SuperPOS on this device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "supportsTwoDimensionalCodes",
              "description": "The `supportsTwoDimensionalCodes` field value for this group:\n\n> Indicates the capabilities of the barcode scanner.\n> If true, the scanner supports both 1D and 2D codes. If false, the scanner supports only 1D codes.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Offers the different grouping options for the `updatedAt` value within this group:\n\n> The server generated RFC 3339-formatted value of the most recent update to this application.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DateTimeGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The `url` field value for this group:\n\n> The string representation of the AirPrint URL.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "visiblePercent",
              "description": "The `visiblePercent` field value for this group:\n\n> The battery charge percentage as displayed on the device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "wifiActive",
              "description": "The `wifiActive` field value for this group:\n\n> A boolean to represent whether the WiFi interface is currently active.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "wifiSignalStrength",
              "description": "The `wifiSignalStrength` field value for this group:\n\n> A representation of signal strength of the WiFi network connection.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceSignalStrengthMeasurementGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceComponentFilterInput",
          "description": "Input type used to specify filters on `DeviceComponent` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceComponentFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceComponentFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceComponentFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "componentDetails",
              "description": "Used to filter on the `componentDetails` field:\n\n> Structured data for the correseponding component type.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceComponentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceComponentFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "type",
              "description": "Used to filter on the `type` field:\n\n> The type of this component. Each component type has expected properties\n> expressed in a structured format within its corresponding DeviceComponentDetails.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceComponentTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceComponentGroupedBy",
          "description": "Type used to specify the `DeviceComponent` fields to group by for aggregations.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "componentDetails",
              "description": "The `componentDetails` field value for this group:\n\n> Structured data for the correseponding component type.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceComponentDetailsGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The `type` field value for this group:\n\n> The type of this component. Each component type has expected properties\n> expressed in a structured format within its corresponding DeviceComponentDetails.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceComponentType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceComponentListFilterInput",
          "description": "Input type used to specify filters on `[DeviceComponent]` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceComponentListFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceComponentListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceComponentListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anySatisfy",
              "description": "Matches records where any of the list elements match the provided sub-filter.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceComponentFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "count",
              "description": "Used to filter on the number of non-null elements in this list field.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceComponentListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceComponentType",
          "description": "An enum for DeviceComponentType.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AIRPRINT_INTERFACE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "APPLICATION",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AUDIO_INTERFACE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BARCODE_SCANNER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BATTERY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BLUETOOTH_INTERFACE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_READER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CELLULAR_DATA",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COMPONENT_TYPE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ETHERNET",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERNAL_SCANNER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NETWORK_INTERFACE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRINTER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCALE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCANNER_SCALE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SHOP",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STAND",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "USB_INTERFACE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WIFI",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceComponentTypeFilterInput",
          "description": "Input type used to specify filters on `DeviceComponentType` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceComponentTypeFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceComponentTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceComponentTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DeviceComponentTypeInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceComponentTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceComponentTypeInput",
          "description": "An enum for DeviceComponentType.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AIRPRINT_INTERFACE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "APPLICATION",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AUDIO_INTERFACE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BARCODE_SCANNER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BATTERY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BLUETOOTH_INTERFACE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_READER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CELLULAR_DATA",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COMPONENT_TYPE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ETHERNET",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERNAL_SCANNER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NETWORK_INTERFACE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRINTER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCALE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCANNER_SCALE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SHOP",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STAND",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "USB_INTERFACE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WIFI",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceConnection",
          "description": "Represents a paginated collection of `Device` results.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Connection-Types) for more info.\n\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "edges",
              "description": "Wraps a specific `Device` to pair it with its pagination cursor.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "DeviceEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "The list of `Device` results.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Device",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalEdgeCount",
              "description": "The total number of edges available in this connection to paginate over.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceCpu",
          "description": "A snapshot of the device's current CPU stats.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "isThrottled",
              "description": "Whether the CPU is throttled.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loadAverage15Min",
              "description": "Load average over 15 minutes.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loadAverage1Min",
              "description": "Load average over 1 minute.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loadAverage5Min",
              "description": "Load average over 5 minutes.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceCpuAggregatedValues",
          "description": "Type used to perform aggregation computations on `DeviceCpu` fields.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "isThrottled",
              "description": "Computed aggregate values for the `isThrottled` field:\n\n> Whether the CPU is throttled.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loadAverage15Min",
              "description": "Computed aggregate values for the `loadAverage15Min` field:\n\n> Load average over 15 minutes.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FloatAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loadAverage1Min",
              "description": "Computed aggregate values for the `loadAverage1Min` field:\n\n> Load average over 1 minute.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FloatAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loadAverage5Min",
              "description": "Computed aggregate values for the `loadAverage5Min` field:\n\n> Load average over 5 minutes.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FloatAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceCpuFilterInput",
          "description": "Input type used to specify filters on `DeviceCpu` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceCpuFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceCpuFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceCpuFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "isThrottled",
              "description": "Used to filter on the `isThrottled` field:\n\n> Whether the CPU is throttled.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BooleanFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "loadAverage15Min",
              "description": "Used to filter on the `loadAverage15Min` field:\n\n> Load average over 15 minutes.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FloatFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "loadAverage1Min",
              "description": "Used to filter on the `loadAverage1Min` field:\n\n> Load average over 1 minute.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FloatFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "loadAverage5Min",
              "description": "Used to filter on the `loadAverage5Min` field:\n\n> Load average over 5 minutes.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FloatFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceCpuFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceCpuGroupedBy",
          "description": "Type used to specify the `DeviceCpu` fields to group by for aggregations.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "isThrottled",
              "description": "The `isThrottled` field value for this group:\n\n> Whether the CPU is throttled.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loadAverage15Min",
              "description": "The `loadAverage15Min` field value for this group:\n\n> Load average over 15 minutes.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loadAverage1Min",
              "description": "The `loadAverage1Min` field value for this group:\n\n> Load average over 1 minute.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loadAverage5Min",
              "description": "The `loadAverage5Min` field value for this group:\n\n> Load average over 5 minutes.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceDeviceComponentSubAggregation",
          "description": "Return type representing a bucket of `DeviceComponent` objects for a sub-aggregation within each `DeviceAggregation`.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "aggregatedValues",
              "description": "Provides computed aggregated values over all `DeviceComponent` documents in a sub-aggregation bucket.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceComponentAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "countDetail",
              "description": "Details of the count of `DeviceComponent` documents in a sub-aggregation bucket.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "AggregationCountDetail",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "groupedBy",
              "description": "Used to specify the `DeviceComponent` fields to group by. The returned values identify each sub-aggregation bucket.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceComponentGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceDeviceComponentSubAggregationConnection",
          "description": "Represents a collection of `DeviceDeviceComponentSubAggregation` results.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "nodes",
              "description": "The list of `DeviceDeviceComponentSubAggregation` results.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "DeviceDeviceComponentSubAggregation",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceDiagnostics",
          "description": "Current diagnostic details reported by the device.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "cpu",
              "description": "CPU diagnostics.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceCpu",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "disk",
              "description": "Disk diagnostics.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceDisk",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "memory",
              "description": "Memory diagnostics.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceMemory",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "network",
              "description": "Network diagnostics.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceNetwork",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceDiagnosticsAggregatedValues",
          "description": "Type used to perform aggregation computations on `DeviceDiagnostics` fields.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "cpu",
              "description": "Computed aggregate values for the `cpu` field:\n\n> CPU diagnostics.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceCpuAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "disk",
              "description": "Computed aggregate values for the `disk` field:\n\n> Disk diagnostics.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceDiskAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "memory",
              "description": "Computed aggregate values for the `memory` field:\n\n> Memory diagnostics.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceMemoryAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "network",
              "description": "Computed aggregate values for the `network` field:\n\n> Network diagnostics.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceNetworkAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceDiagnosticsFilterInput",
          "description": "Input type used to specify filters on `DeviceDiagnostics` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceDiagnosticsFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceDiagnosticsFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceDiagnosticsFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "cpu",
              "description": "Used to filter on the `cpu` field:\n\n> CPU diagnostics.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceCpuFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "disk",
              "description": "Used to filter on the `disk` field:\n\n> Disk diagnostics.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceDiskFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "memory",
              "description": "Used to filter on the `memory` field:\n\n> Memory diagnostics.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceMemoryFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "network",
              "description": "Used to filter on the `network` field:\n\n> Network diagnostics.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceNetworkFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceDiagnosticsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceDiagnosticsGroupedBy",
          "description": "Type used to specify the `DeviceDiagnostics` fields to group by for aggregations.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "cpu",
              "description": "The `cpu` field value for this group:\n\n> CPU diagnostics.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceCpuGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "disk",
              "description": "The `disk` field value for this group:\n\n> Disk diagnostics.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceDiskGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "memory",
              "description": "The `memory` field value for this group:\n\n> Memory diagnostics.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceMemoryGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "network",
              "description": "The `network` field value for this group:\n\n> Network diagnostics.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceNetworkGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceDisk",
          "description": "A snapshot of the device's current disk stats.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "appInUse",
              "description": "Application disk space in use.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inUse",
              "description": "Disk space in use.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "total",
              "description": "Total disk space.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceDiskAggregatedValues",
          "description": "Type used to perform aggregation computations on `DeviceDisk` fields.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "appInUse",
              "description": "Computed aggregate values for the `appInUse` field:\n\n> Application disk space in use.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LongStringAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inUse",
              "description": "Computed aggregate values for the `inUse` field:\n\n> Disk space in use.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LongStringAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "total",
              "description": "Computed aggregate values for the `total` field:\n\n> Total disk space.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LongStringAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceDiskFilterInput",
          "description": "Input type used to specify filters on `DeviceDisk` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceDiskFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceDiskFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceDiskFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "appInUse",
              "description": "Used to filter on the `appInUse` field:\n\n> Application disk space in use.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "LongStringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "inUse",
              "description": "Used to filter on the `inUse` field:\n\n> Disk space in use.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "LongStringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceDiskFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "total",
              "description": "Used to filter on the `total` field:\n\n> Total disk space.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "LongStringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceDiskGroupedBy",
          "description": "Type used to specify the `DeviceDisk` fields to group by for aggregations.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "appInUse",
              "description": "The `appInUse` field value for this group:\n\n> Application disk space in use.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inUse",
              "description": "The `inUse` field value for this group:\n\n> Disk space in use.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "total",
              "description": "The `total` field value for this group:\n\n> Total disk space.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceEdge",
          "description": "Represents a specific `Device` in the context of a `DeviceConnection`,\nproviding access to both the `Device` and a pagination `Cursor`.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Edge-Types) for more info.\n\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "cursor",
              "description": "The `Cursor` of this `Device`. This can be passed in the next query as\na `before` or `after` argument to continue paginating from this `Device`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `Device` of this edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Device",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceEvent",
          "description": "An event that has occurred on the device.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "eventId",
              "description": "The Square-issued ID of the event.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "eventPriority",
              "description": "The priority of the event; how severe it is.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceEventPriority",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "eventType",
              "description": "The type of the event; how it impacts device function.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceEventType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceEventAggregatedValues",
          "description": "Type used to perform aggregation computations on `DeviceEvent` fields.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "eventId",
              "description": "Computed aggregate values for the `eventId` field:\n\n> The Square-issued ID of the event.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "eventPriority",
              "description": "Computed aggregate values for the `eventPriority` field:\n\n> The priority of the event; how severe it is.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "eventType",
              "description": "Computed aggregate values for the `eventType` field:\n\n> The type of the event; how it impacts device function.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceEventFieldsListFilterInput",
          "description": "Input type used to specify filters on a `DeviceEvent` object referenced directly\nor transitively from a list field that has been configured to index each leaf field as\nits own flattened list of values.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceEventFieldsListFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceEventFieldsListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceEventFieldsListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "count",
              "description": "Used to filter on the number of non-null elements in this list field.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "eventId",
              "description": "Used to filter on the `eventId` field:\n\n> The Square-issued ID of the event.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "eventPriority",
              "description": "Used to filter on the `eventPriority` field:\n\n> The priority of the event; how severe it is.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceEventPriorityListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "eventType",
              "description": "Used to filter on the `eventType` field:\n\n> The type of the event; how it impacts device function.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceEventTypeListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceEventFieldsListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceEventGroupedBy",
          "description": "Type used to specify the `DeviceEvent` fields to group by for aggregations.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "eventId",
              "description": "The `eventId` field value for this group:\n\n> The Square-issued ID of the event.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "eventPriority",
              "description": "The `eventPriority` field value for this group:\n\n> The priority of the event; how severe it is.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceEventPriority",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "eventType",
              "description": "The `eventType` field value for this group:\n\n> The type of the event; how it impacts device function.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceEventType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceEventPriority",
          "description": "An enum for DeviceEventPriority.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DEVICE_CRITICAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_EVENT_PRIORITY_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_READY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_WARNING",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceEventPriorityInput",
          "description": "An enum for DeviceEventPriority.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DEVICE_CRITICAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_EVENT_PRIORITY_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_READY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_WARNING",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceEventPriorityListElementFilterInput",
          "description": "Input type used to specify filters on elements of a `[DeviceEventPriority]` field.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceEventPriorityListElementFilterInput` input\nbecause of collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceEventPriorityListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceEventPriorityListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "DeviceEventPriorityInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceEventPriorityListFilterInput",
          "description": "Input type used to specify filters on `[DeviceEventPriority]` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceEventPriorityListFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceEventPriorityListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceEventPriorityListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anySatisfy",
              "description": "Matches records where any of the list elements match the provided sub-filter.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceEventPriorityListElementFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "count",
              "description": "Used to filter on the number of non-null elements in this list field.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceEventPriorityListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceEventType",
          "description": "An enum for DeviceEventType.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "BLACK_MARK_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BUSY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CALIBRATION_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CALIBRATION_WARNING_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHARGING_PAUSED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHARGING_PORT_CONTAMINATED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHARGING_SLOWLY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHECKING_FOR_UPDATES_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CONNECTING_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COVER_OPEN_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUTTER_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_EVENT_TYPE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_SUPPORTED_NO_OFFER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_SUPPORTED_OFFER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_SUPPORT_ENDING_NO_OFFER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_SUPPORT_ENDING_OFFER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_UNSUPPORTED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DISCONNECTED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ESTABLISHING_SECURE_SESSION_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FAILED_PRINT_JOB_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FAILED_TO_CONNECT_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FATAL_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIRMWARE_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIRMWARE_UPDATE_COMPLETED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIRMWARE_UPDATE_FAILED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORCE_OFFINE_PAYMENTS_DISABLED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORCE_OFFINE_PAYMENTS_UNAVAILABLE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORCE_OFFLINE_PAYMENTS_ENABLED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GENERIC_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INCOMPATIBLE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INCORRECT_PAPER_TYPE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSUFFICIENT_POWER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERRUPTED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOCAL_NETWORK_PERMISSION_DENIED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOW_BATTERY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOW_PAPER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOW_SIGNAL_STRENGTH_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MECHANICAL_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MEMORY_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NETWORK_MISTMATCH_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NOT_CONFIGURED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NOT_CONNECTED_TO_NETWORK_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NOT_READY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OFFLINE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OFFLINE_PAYMENTS_AVAILABLE_FOR_SOME_READERS_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OFFLINE_PAYMENTS_ENABLED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OFFLINE_PAYMENTS_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OFFLINE_PAYMENTS_NOT_SUPPORTED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OFFLINE_PAYMENTS_UNAVAILABLE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OFFLINE_PAYMENT_ISSUES_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OFFLINE_SWIPE_ONLY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OPERATION_UNSUPPORTED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OUT_OF_BATTERY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OUT_OF_PAPER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OVERHEATED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OVER_CAPACITY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAPER_JAMMED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAPER_PRESENT_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAUSED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYMENT_STOP_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYMENT_STOP_OFFER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYMENT_STOP_WARN_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYMENT_STOP_WARN_OFFER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRINT_HEAD_DIRTY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRINT_HEAD_EOL_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRINT_HEAD_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "READY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REBOOTING_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RIBBON_OUT_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SECURE_SESSION_DENIAL_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SECURE_SESSION_SERVER_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SECURITY_MODE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SIGNED_IN_EMPLOYEE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOFTWARE_FREEZE_WARN_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOFTWARE_FREEZE_WARN_OFFER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOFTWARE_FROZEN_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOFTWARE_FROZEN_OFFER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SYSTEM_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TAMPERED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TEST_MERCHANT_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "THERMOMETER_DAMAGED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TIMED_OUT_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TOO_COLD_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TURN_ON_BLUETOOTH_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNABLE_TO_CHARGE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNDER_CAPACITY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNEXPECTED_RESPONSE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_DEVICE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNREACHABLE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNRECOVERABLE_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATE_NEEDED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATING_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "USB_PRINTER_UNPLUGGED_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERY_LOW_BATTERY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VOLTAGE_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceEventTypeInput",
          "description": "An enum for DeviceEventType.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "BLACK_MARK_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BUSY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CALIBRATION_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CALIBRATION_WARNING_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHARGING_PAUSED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHARGING_PORT_CONTAMINATED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHARGING_SLOWLY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHECKING_FOR_UPDATES_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CONNECTING_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COVER_OPEN_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUTTER_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_EVENT_TYPE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_SUPPORTED_NO_OFFER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_SUPPORTED_OFFER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_SUPPORT_ENDING_NO_OFFER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_SUPPORT_ENDING_OFFER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_UNSUPPORTED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DISCONNECTED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ESTABLISHING_SECURE_SESSION_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FAILED_PRINT_JOB_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FAILED_TO_CONNECT_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FATAL_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIRMWARE_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIRMWARE_UPDATE_COMPLETED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIRMWARE_UPDATE_FAILED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORCE_OFFINE_PAYMENTS_DISABLED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORCE_OFFINE_PAYMENTS_UNAVAILABLE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORCE_OFFLINE_PAYMENTS_ENABLED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GENERIC_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INCOMPATIBLE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INCORRECT_PAPER_TYPE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSUFFICIENT_POWER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERRUPTED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOCAL_NETWORK_PERMISSION_DENIED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOW_BATTERY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOW_PAPER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOW_SIGNAL_STRENGTH_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MECHANICAL_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MEMORY_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NETWORK_MISTMATCH_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NOT_CONFIGURED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NOT_CONNECTED_TO_NETWORK_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NOT_READY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OFFLINE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OFFLINE_PAYMENTS_AVAILABLE_FOR_SOME_READERS_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OFFLINE_PAYMENTS_ENABLED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OFFLINE_PAYMENTS_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OFFLINE_PAYMENTS_NOT_SUPPORTED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OFFLINE_PAYMENTS_UNAVAILABLE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OFFLINE_PAYMENT_ISSUES_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OFFLINE_SWIPE_ONLY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OPERATION_UNSUPPORTED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OUT_OF_BATTERY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OUT_OF_PAPER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OVERHEATED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OVER_CAPACITY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAPER_JAMMED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAPER_PRESENT_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAUSED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYMENT_STOP_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYMENT_STOP_OFFER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYMENT_STOP_WARN_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYMENT_STOP_WARN_OFFER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRINT_HEAD_DIRTY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRINT_HEAD_EOL_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRINT_HEAD_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "READY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REBOOTING_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RIBBON_OUT_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SECURE_SESSION_DENIAL_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SECURE_SESSION_SERVER_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SECURITY_MODE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SIGNED_IN_EMPLOYEE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOFTWARE_FREEZE_WARN_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOFTWARE_FREEZE_WARN_OFFER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOFTWARE_FROZEN_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOFTWARE_FROZEN_OFFER_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SYSTEM_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TAMPERED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TEST_MERCHANT_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "THERMOMETER_DAMAGED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TIMED_OUT_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TOO_COLD_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TURN_ON_BLUETOOTH_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNABLE_TO_CHARGE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNDER_CAPACITY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNEXPECTED_RESPONSE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_DEVICE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNREACHABLE_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNRECOVERABLE_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATE_NEEDED_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATING_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "USB_PRINTER_UNPLUGGED_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERY_LOW_BATTERY_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VOLTAGE_ERROR_EVENT_TYPE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceEventTypeListElementFilterInput",
          "description": "Input type used to specify filters on elements of a `[DeviceEventType]` field.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceEventTypeListElementFilterInput` input because\nof collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceEventTypeListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceEventTypeListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "DeviceEventTypeInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceEventTypeListFilterInput",
          "description": "Input type used to specify filters on `[DeviceEventType]` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceEventTypeListFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceEventTypeListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceEventTypeListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anySatisfy",
              "description": "Matches records where any of the list elements match the provided sub-filter.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceEventTypeListElementFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "count",
              "description": "Used to filter on the number of non-null elements in this list field.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceEventTypeListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceExternalPower",
          "description": "An enum for DeviceExternalPower.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AVAILABLE_CHARGING",
              "description": "Plugged in and charging.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AVAILABLE_INSUFFICIENT",
              "description": "Not providing enough power for the device.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AVAILABLE_NOT_IN_USE",
              "description": "Fully charged.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXTERNAL_POWER_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNAVAILABLE",
              "description": "On battery power.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceExternalPowerFilterInput",
          "description": "Input type used to specify filters on `DeviceExternalPower` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceExternalPowerFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceExternalPowerFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceExternalPowerFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DeviceExternalPowerInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceExternalPowerFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceExternalPowerInput",
          "description": "An enum for DeviceExternalPower.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AVAILABLE_CHARGING",
              "description": "Plugged in and charging.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AVAILABLE_INSUFFICIENT",
              "description": "Not providing enough power for the device.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AVAILABLE_NOT_IN_USE",
              "description": "Fully charged.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXTERNAL_POWER_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNAVAILABLE",
              "description": "On battery power.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceFilterInput",
          "description": "Input type used to specify filters on `Device` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "aggregatedPeripheralStatus",
              "description": "Used to filter on the `aggregatedPeripheralStatus` field:\n\n> The aggregated status of all the peripheral DeviceStatuses, excluding the status of the primary device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceStatusFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "aggregatedStatus",
              "description": "Used to filter on the `aggregatedStatus` field:\n\n> The aggregated status of the device and all its peripheral DeviceStatuses.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceStatusFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "attributes",
              "description": "Used to filter on the `attributes` field:\n\n> A collection of DeviceAttributes representing the device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceAttributesFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "components",
              "description": "Used to filter on the `components` field:\n\n> A list of components applicable to the device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceComponentListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "connectedPeripheralDeviceIds",
              "description": "Used to filter on the `connectedPeripheralDeviceIds` field:\n\n> Peripheral device ids that are connected to this primary (POS) device. Only applicable to primary (POS) devices.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "connectedPrimaryDeviceIds",
              "description": "Used to filter on the `connectedPrimaryDeviceIds` field:\n\n> Primary (POS) device ids to which this peripheral device is connected. Only applicable to peripheral devices.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "Used to filter on the `createdAt` field:\n\n> The RFC 3339-formatted timestamp of when the device was created.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deleted",
              "description": "Used to filter on the `deleted` field:\n\n> Set to true if this device has been deleted. Clients should filter on this\nfield to exclude devices which have been deleted.\n> Note: this field is a work around for ElasticGraph's current lack of\nfirst-class `delete` support. Once the [planned support](https://github.com/squareup/sq-elasticgraph-ruby/blob/master/adr/0023-support-delete-events.md)\n> is implemented, we should replace this field with usage of that feature.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BooleanFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "diagnostics",
              "description": "Used to filter on the `diagnostics` field:\n\n> The diagnostics associated with this device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceDiagnosticsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "events",
              "description": "Used to filter on the `events` field:\n\n> The events associated with this device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceEventFieldsListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "externalDeviceId",
              "description": "Used to filter on the `externalDeviceId` field:\n\n> Square-issued ID of the device. This is the device id used by some systems and services external to the devices subgraph\n> (e.g. device-registry, payments), which differs slightly from the id used by the devices subgraph. This is generally the\n> serial number or manufacturers id of the device, with the exception of COTS (Android and iOS) devices, where it's the\n> installation id prefixed with the string 'DEVICE_INSTALLATION_ID'. This id is not unique to a merchant and so must be\n> referenced in conjunction with merchant.id.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "Used to filter on the `id` field:\n\n> The device-merchant id. Unique identifier of the document since devices can be shared between merchants.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "locations",
              "description": "Used to filter on the `locations` field:\n\n> Populated with all locations (across applications) for primary devices and\n> all relevant locations (across primary devices) for peripheral devices. This field is additive only.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "LocationFieldsListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchant",
              "description": "Used to filter on the `merchant` field:\n\n> The merchant using the device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MerchantRefFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "softwareUpdateDetails",
              "description": "Used to filter on the `softwareUpdateDetails` field:\n\n> The software update details of this device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceSoftwareUpdateDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "status",
              "description": "Used to filter on the `status` field:\n\n> The current status of the device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceStatusFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Used to filter on the `updatedAt` field:\n\n> The RFC 3339-formatted value of the most recent update to the device information.\n> (Could represent any field update on the device.).\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceGroupedBy",
          "description": "Type used to specify the `Device` fields to group by for aggregations.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "aggregatedPeripheralStatus",
              "description": "The `aggregatedPeripheralStatus` field value for this group:\n\n> The aggregated status of all the peripheral DeviceStatuses, excluding the status of the primary device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceStatusGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "aggregatedStatus",
              "description": "The `aggregatedStatus` field value for this group:\n\n> The aggregated status of the device and all its peripheral DeviceStatuses.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceStatusGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attributes",
              "description": "The `attributes` field value for this group:\n\n> A collection of DeviceAttributes representing the device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceAttributesGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Offers the different grouping options for the `createdAt` value within this group:\n\n> The RFC 3339-formatted timestamp of when the device was created.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DateTimeGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleted",
              "description": "The `deleted` field value for this group:\n\n> Set to true if this device has been deleted. Clients should filter on this\nfield to exclude devices which have been deleted.\n> Note: this field is a work around for ElasticGraph's current lack of\nfirst-class `delete` support. Once the [planned support](https://github.com/squareup/sq-elasticgraph-ruby/blob/master/adr/0023-support-delete-events.md)\n> is implemented, we should replace this field with usage of that feature.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics",
              "description": "The `diagnostics` field value for this group:\n\n> The diagnostics associated with this device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceDiagnosticsGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "events",
              "description": "The `events` field value for this group:\n\n> The events associated with this device.\n\nNote: `events` is a collection field, but selecting this field will group on\nindividual values of the selected subfields of `events`.\nThat means that a document may be grouped into multiple aggregation groupings (i.e. when its `events`\nfield has multiple values) leading to some data duplication in the response. However, if a value shows\nup in `events` multiple times for a single document, that document will only be included in the group\nonce.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceEventGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "externalDeviceId",
              "description": "The `externalDeviceId` field value for this group:\n\n> Square-issued ID of the device. This is the device id used by some systems and services external to the devices subgraph\n> (e.g. device-registry, payments), which differs slightly from the id used by the devices subgraph. This is generally the\n> serial number or manufacturers id of the device, with the exception of COTS (Android and iOS) devices, where it's the\n> installation id prefixed with the string 'DEVICE_INSTALLATION_ID'. This id is not unique to a merchant and so must be\n> referenced in conjunction with merchant.id.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locations",
              "description": "The `locations` field value for this group:\n\n> Populated with all locations (across applications) for primary devices and\n> all relevant locations (across primary devices) for peripheral devices. This field is additive only.\n\nNote: `locations` is a collection field, but selecting this field will group\non individual values of the selected subfields of `locations`.\nThat means that a document may be grouped into multiple aggregation groupings (i.e. when its `locations`\nfield has multiple values) leading to some data duplication in the response. However, if a value shows\nup in `locations` multiple times for a single document, that document will only be included in the group\nonce.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LocationGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchant",
              "description": "The `merchant` field value for this group:\n\n> The merchant using the device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "MerchantGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "softwareUpdateDetails",
              "description": "The `softwareUpdateDetails` field value for this group:\n\n> The software update details of this device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceSoftwareUpdateDetailsGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "The `status` field value for this group:\n\n> The current status of the device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceStatusGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Offers the different grouping options for the `updatedAt` value within this group:\n\n> The RFC 3339-formatted value of the most recent update to the device information.\n> (Could represent any field update on the device.).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DateTimeGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceMemory",
          "description": "A snapshot of the device's current memory stats.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "appLimit",
              "description": "Application memory limit.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inUse",
              "description": "Memory in use.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "total",
              "description": "Total memory.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceMemoryAggregatedValues",
          "description": "Type used to perform aggregation computations on `DeviceMemory` fields.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "appLimit",
              "description": "Computed aggregate values for the `appLimit` field:\n\n> Application memory limit.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LongStringAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inUse",
              "description": "Computed aggregate values for the `inUse` field:\n\n> Memory in use.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LongStringAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "total",
              "description": "Computed aggregate values for the `total` field:\n\n> Total memory.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LongStringAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceMemoryFilterInput",
          "description": "Input type used to specify filters on `DeviceMemory` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceMemoryFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceMemoryFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceMemoryFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "appLimit",
              "description": "Used to filter on the `appLimit` field:\n\n> Application memory limit.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "LongStringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "inUse",
              "description": "Used to filter on the `inUse` field:\n\n> Memory in use.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "LongStringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceMemoryFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "total",
              "description": "Used to filter on the `total` field:\n\n> Total memory.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "LongStringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceMemoryGroupedBy",
          "description": "Type used to specify the `DeviceMemory` fields to group by for aggregations.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "appLimit",
              "description": "The `appLimit` field value for this group:\n\n> Application memory limit.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inUse",
              "description": "The `inUse` field value for this group:\n\n> Memory in use.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "total",
              "description": "The `total` field value for this group:\n\n> Total memory.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceNetwork",
          "description": "A snapshot of the device's current network stats.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "bandwidth",
              "description": "Details of the device's network bandwidth.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceNetworkBandwidth",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceNetworkAggregatedValues",
          "description": "Type used to perform aggregation computations on `DeviceNetwork` fields.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "bandwidth",
              "description": "Computed aggregate values for the `bandwidth` field:\n\n> Details of the device's network bandwidth.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceNetworkBandwidthAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceNetworkBandwidth",
          "description": "A snapshot of the device's current network bandwidth.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "totalDownloaded",
              "description": "Total downloaded data.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalUploaded",
              "description": "Total uploaded data.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceNetworkBandwidthAggregatedValues",
          "description": "Type used to perform aggregation computations on `DeviceNetworkBandwidth` fields.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "totalDownloaded",
              "description": "Computed aggregate values for the `totalDownloaded` field:\n\n> Total downloaded data.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LongStringAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalUploaded",
              "description": "Computed aggregate values for the `totalUploaded` field:\n\n> Total uploaded data.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LongStringAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceNetworkBandwidthFilterInput",
          "description": "Input type used to specify filters on `DeviceNetworkBandwidth` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceNetworkBandwidthFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceNetworkBandwidthFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceNetworkBandwidthFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceNetworkBandwidthFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "totalDownloaded",
              "description": "Used to filter on the `totalDownloaded` field:\n\n> Total downloaded data.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "LongStringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "totalUploaded",
              "description": "Used to filter on the `totalUploaded` field:\n\n> Total uploaded data.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "LongStringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceNetworkBandwidthGroupedBy",
          "description": "Type used to specify the `DeviceNetworkBandwidth` fields to group by for aggregations.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "totalDownloaded",
              "description": "The `totalDownloaded` field value for this group:\n\n> Total downloaded data.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalUploaded",
              "description": "The `totalUploaded` field value for this group:\n\n> Total uploaded data.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceNetworkFilterInput",
          "description": "Input type used to specify filters on `DeviceNetwork` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceNetworkFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceNetworkFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceNetworkFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "bandwidth",
              "description": "Used to filter on the `bandwidth` field:\n\n> Details of the device's network bandwidth.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceNetworkBandwidthFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceNetworkFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceNetworkGroupedBy",
          "description": "Type used to specify the `DeviceNetwork` fields to group by for aggregations.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "bandwidth",
              "description": "The `bandwidth` field value for this group:\n\n> Details of the device's network bandwidth.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceNetworkBandwidthGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceProfile",
          "description": "A group of settings associated with a device and vertical.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "id",
              "description": "The Square-issued ID of the device profile.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceProfileAggregatedValues",
          "description": "Type used to perform aggregation computations on `DeviceProfile` fields.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "id",
              "description": "Computed aggregate values for the `id` field:\n\n> The Square-issued ID of the device profile.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceProfileFilterInput",
          "description": "Input type used to specify filters on `DeviceProfile` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Used to filter on the `id` field:\n\n> The Square-issued ID of the device profile.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceProfileGroupedBy",
          "description": "Type used to specify the `DeviceProfile` fields to group by for aggregations.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "id",
              "description": "The `id` field value for this group:\n\n> The Square-issued ID of the device profile.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceSignalStrengthMeasurement",
          "description": "A value qualified by unit of measure.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "unit",
              "description": "The unit of measure.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceSignalStrengthUnit",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": "The measurement value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceSignalStrengthMeasurementAggregatedValues",
          "description": "Type used to perform aggregation computations on `DeviceSignalStrengthMeasurement` fields.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "unit",
              "description": "Computed aggregate values for the `unit` field:\n\n> The unit of measure.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": "Computed aggregate values for the `value` field:\n\n> The measurement value.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "IntAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceSignalStrengthMeasurementFilterInput",
          "description": "Input type used to specify filters on `DeviceSignalStrengthMeasurement` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceSignalStrengthMeasurementFilterInput` input\nbecause of collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceSignalStrengthMeasurementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceSignalStrengthMeasurementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceSignalStrengthMeasurementFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "unit",
              "description": "Used to filter on the `unit` field:\n\n> The unit of measure.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceSignalStrengthUnitFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "value",
              "description": "Used to filter on the `value` field:\n\n> The measurement value.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceSignalStrengthMeasurementGroupedBy",
          "description": "Type used to specify the `DeviceSignalStrengthMeasurement` fields to group by for aggregations.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "unit",
              "description": "The `unit` field value for this group:\n\n> The unit of measure.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceSignalStrengthUnit",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": "The `value` field value for this group:\n\n> The measurement value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceSignalStrengthUnit",
          "description": "A enum for DeviceSignalStrengthUnit.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "RSSI",
              "description": "Received Signal Strength Indicator.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SIGNAL_BARS",
              "description": "Signal bars as displayed on the device.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SIGNAL_STRENGTH_UNIT_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceSignalStrengthUnitFilterInput",
          "description": "Input type used to specify filters on `DeviceSignalStrengthUnit` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceSignalStrengthUnitFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceSignalStrengthUnitFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceSignalStrengthUnitFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DeviceSignalStrengthUnitInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceSignalStrengthUnitFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceSignalStrengthUnitInput",
          "description": "A enum for DeviceSignalStrengthUnit.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "RSSI",
              "description": "Received Signal Strength Indicator.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SIGNAL_BARS",
              "description": "Signal bars as displayed on the device.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SIGNAL_STRENGTH_UNIT_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceSoftwareUpdateDetails",
          "description": "Represents the software update details of a device.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "failureReason",
              "description": "The reason why the update failed.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceSoftwareUpdateFailureReason",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeferrable",
              "description": "Whether the software update can be deferred or not.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastUpdateCheckAt",
              "description": "RFC 3339-formatted timestamp of the most recent update check.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scheduledUpdateAt",
              "description": "RFC 3339-formatted timestamp of scheduled update.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "The current software update state.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceSoftwareUpdateState",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceSoftwareUpdateDetailsAggregatedValues",
          "description": "Type used to perform aggregation computations on `DeviceSoftwareUpdateDetails` fields.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "failureReason",
              "description": "Computed aggregate values for the `failureReason` field:\n\n> The reason why the update failed.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeferrable",
              "description": "Computed aggregate values for the `isDeferrable` field:\n\n> Whether the software update can be deferred or not.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastUpdateCheckAt",
              "description": "Computed aggregate values for the `lastUpdateCheckAt` field:\n\n> RFC 3339-formatted timestamp of the most recent update check.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DateTimeAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scheduledUpdateAt",
              "description": "Computed aggregate values for the `scheduledUpdateAt` field:\n\n> RFC 3339-formatted timestamp of scheduled update.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DateTimeAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "Computed aggregate values for the `state` field:\n\n> The current software update state.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceSoftwareUpdateDetailsFilterInput",
          "description": "Input type used to specify filters on `DeviceSoftwareUpdateDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceSoftwareUpdateDetailsFilterInput` input because\nof collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceSoftwareUpdateDetailsFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceSoftwareUpdateDetailsFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "failureReason",
              "description": "Used to filter on the `failureReason` field:\n\n> The reason why the update failed.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceSoftwareUpdateFailureReasonFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "isDeferrable",
              "description": "Used to filter on the `isDeferrable` field:\n\n> Whether the software update can be deferred or not.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BooleanFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lastUpdateCheckAt",
              "description": "Used to filter on the `lastUpdateCheckAt` field:\n\n> RFC 3339-formatted timestamp of the most recent update check.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceSoftwareUpdateDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "scheduledUpdateAt",
              "description": "Used to filter on the `scheduledUpdateAt` field:\n\n> RFC 3339-formatted timestamp of scheduled update.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "state",
              "description": "Used to filter on the `state` field:\n\n> The current software update state.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceSoftwareUpdateStateFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceSoftwareUpdateDetailsGroupedBy",
          "description": "Type used to specify the `DeviceSoftwareUpdateDetails` fields to group by for aggregations.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "failureReason",
              "description": "The `failureReason` field value for this group:\n\n> The reason why the update failed.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceSoftwareUpdateFailureReason",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeferrable",
              "description": "The `isDeferrable` field value for this group:\n\n> Whether the software update can be deferred or not.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastUpdateCheckAt",
              "description": "Offers the different grouping options for the `lastUpdateCheckAt` value within this group:\n\n> RFC 3339-formatted timestamp of the most recent update check.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DateTimeGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scheduledUpdateAt",
              "description": "Offers the different grouping options for the `scheduledUpdateAt` value within this group:\n\n> RFC 3339-formatted timestamp of scheduled update.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DateTimeGroupedBy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "The `state` field value for this group:\n\n> The current software update state.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceSoftwareUpdateState",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceSoftwareUpdateFailureReason",
          "description": "An enum for DeviceSoftwareUpdateFailedReason.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CHECK_FOR_UPDATES_FAILURE",
              "description": "Check for updates failure.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHECK_FOR_UPDATES_NETWORK_FAILURE",
              "description": "Check for updates network failure.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DOWNLOAD_FAILED",
              "description": "Download failed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DOWNLOAD_FAILED_NETWORK_FAILURE",
              "description": "Download failed due to network failure.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DOWNLOAD_FAILED_OUT_OF_SPACE",
              "description": "Download failed due to insufficient space.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DOWNLOAD_FAILED_SERVICE_UNAVAILABLE",
              "description": "Download failed due to service unavailability.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FWUP_FAILED",
              "description": "Firmware update failed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FWUP_FATAL",
              "description": "Firmware update failed due to a fatal error.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSTALL_FAILED",
              "description": "Install failed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSTALL_FAILED_BATTERY",
              "description": "Install failed due to battery issues.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSTALL_FAILED_FATAL",
              "description": "Install failed due to a fatal error.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSTALL_INTERRUPTED",
              "description": "Install interrupted.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNEXPECTED_EXCEPTION",
              "description": "Unexpected exception occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_SOFTWARE_UPDATE_FAILURE_REASON",
              "description": "Unknown software update failure reason.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceSoftwareUpdateFailureReasonFilterInput",
          "description": "Input type used to specify filters on `DeviceSoftwareUpdateFailureReason` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceSoftwareUpdateFailureReasonFilterInput` input\nbecause of collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceSoftwareUpdateFailureReasonFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceSoftwareUpdateFailureReasonFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DeviceSoftwareUpdateFailureReasonInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceSoftwareUpdateFailureReasonFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceSoftwareUpdateFailureReasonInput",
          "description": "An enum for DeviceSoftwareUpdateFailedReason.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CHECK_FOR_UPDATES_FAILURE",
              "description": "Check for updates failure.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHECK_FOR_UPDATES_NETWORK_FAILURE",
              "description": "Check for updates network failure.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DOWNLOAD_FAILED",
              "description": "Download failed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DOWNLOAD_FAILED_NETWORK_FAILURE",
              "description": "Download failed due to network failure.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DOWNLOAD_FAILED_OUT_OF_SPACE",
              "description": "Download failed due to insufficient space.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DOWNLOAD_FAILED_SERVICE_UNAVAILABLE",
              "description": "Download failed due to service unavailability.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FWUP_FAILED",
              "description": "Firmware update failed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FWUP_FATAL",
              "description": "Firmware update failed due to a fatal error.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSTALL_FAILED",
              "description": "Install failed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSTALL_FAILED_BATTERY",
              "description": "Install failed due to battery issues.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSTALL_FAILED_FATAL",
              "description": "Install failed due to a fatal error.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSTALL_INTERRUPTED",
              "description": "Install interrupted.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNEXPECTED_EXCEPTION",
              "description": "Unexpected exception occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_SOFTWARE_UPDATE_FAILURE_REASON",
              "description": "Unknown software update failure reason.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceSoftwareUpdateState",
          "description": "An enum for DeviceSoftwareUpdateState.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DOWNLOAD_IN_PROGRESS",
              "description": "Downloading software updates.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSTALLATION_IN_PROGRESS",
              "description": "Installing software update.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "READY_TO_INSTALL",
              "description": "Update is downloaded and ready to be installed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATE_AVAILABLE",
              "description": "Software update is available but not downloaded yet.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATE_FAILED",
              "description": "Update failed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATE_STATE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UP_TO_DATE",
              "description": "Software is up to date.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceSoftwareUpdateStateFilterInput",
          "description": "Input type used to specify filters on `DeviceSoftwareUpdateState` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceSoftwareUpdateStateFilterInput` input because\nof collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceSoftwareUpdateStateFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceSoftwareUpdateStateFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DeviceSoftwareUpdateStateInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceSoftwareUpdateStateFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceSoftwareUpdateStateInput",
          "description": "An enum for DeviceSoftwareUpdateState.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DOWNLOAD_IN_PROGRESS",
              "description": "Downloading software updates.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSTALLATION_IN_PROGRESS",
              "description": "Installing software update.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "READY_TO_INSTALL",
              "description": "Update is downloaded and ready to be installed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATE_AVAILABLE",
              "description": "Software update is available but not downloaded yet.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATE_FAILED",
              "description": "Update failed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATE_STATE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UP_TO_DATE",
              "description": "Software is up to date.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceSortOrderInput",
          "description": "Enumerates the ways `Device`s can be sorted.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "aggregatedPeripheralStatus_category_ASC",
              "description": "Sorts ascending by the `aggregatedPeripheralStatus.category` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "aggregatedPeripheralStatus_category_DESC",
              "description": "Sorts descending by the `aggregatedPeripheralStatus.category` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "aggregatedPeripheralStatus_detail_ASC",
              "description": "Sorts ascending by the `aggregatedPeripheralStatus.detail` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "aggregatedPeripheralStatus_detail_DESC",
              "description": "Sorts descending by the `aggregatedPeripheralStatus.detail` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "aggregatedStatus_category_ASC",
              "description": "Sorts ascending by the `aggregatedStatus.category` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "aggregatedStatus_category_DESC",
              "description": "Sorts descending by the `aggregatedStatus.category` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "aggregatedStatus_detail_ASC",
              "description": "Sorts ascending by the `aggregatedStatus.detail` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "aggregatedStatus_detail_DESC",
              "description": "Sorts descending by the `aggregatedStatus.detail` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attributes_manufacturer_ASC",
              "description": "Sorts ascending by the `attributes.manufacturer` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attributes_manufacturer_DESC",
              "description": "Sorts descending by the `attributes.manufacturer` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attributes_model_ASC",
              "description": "Sorts ascending by the `attributes.model` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attributes_model_DESC",
              "description": "Sorts descending by the `attributes.model` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attributes_name_ASC",
              "description": "Sorts ascending by the `attributes.name` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attributes_name_DESC",
              "description": "Sorts descending by the `attributes.name` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attributes_squareHardwareType_ASC",
              "description": "Sorts ascending by the `attributes.squareHardwareType` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attributes_squareHardwareType_DESC",
              "description": "Sorts descending by the `attributes.squareHardwareType` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attributes_type_ASC",
              "description": "Sorts ascending by the `attributes.type` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attributes_type_DESC",
              "description": "Sorts descending by the `attributes.type` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attributes_version_ASC",
              "description": "Sorts ascending by the `attributes.version` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attributes_version_DESC",
              "description": "Sorts descending by the `attributes.version` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt_ASC",
              "description": "Sorts ascending by the `createdAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt_DESC",
              "description": "Sorts descending by the `createdAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_cpu_loadAverage15Min_ASC",
              "description": "Sorts ascending by the `diagnostics.cpu.loadAverage15Min` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_cpu_loadAverage15Min_DESC",
              "description": "Sorts descending by the `diagnostics.cpu.loadAverage15Min` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_cpu_loadAverage1Min_ASC",
              "description": "Sorts ascending by the `diagnostics.cpu.loadAverage1Min` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_cpu_loadAverage1Min_DESC",
              "description": "Sorts descending by the `diagnostics.cpu.loadAverage1Min` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_cpu_loadAverage5Min_ASC",
              "description": "Sorts ascending by the `diagnostics.cpu.loadAverage5Min` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_cpu_loadAverage5Min_DESC",
              "description": "Sorts descending by the `diagnostics.cpu.loadAverage5Min` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_disk_appInUse_ASC",
              "description": "Sorts ascending by the `diagnostics.disk.appInUse` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_disk_appInUse_DESC",
              "description": "Sorts descending by the `diagnostics.disk.appInUse` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_disk_inUse_ASC",
              "description": "Sorts ascending by the `diagnostics.disk.inUse` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_disk_inUse_DESC",
              "description": "Sorts descending by the `diagnostics.disk.inUse` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_disk_total_ASC",
              "description": "Sorts ascending by the `diagnostics.disk.total` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_disk_total_DESC",
              "description": "Sorts descending by the `diagnostics.disk.total` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_memory_appLimit_ASC",
              "description": "Sorts ascending by the `diagnostics.memory.appLimit` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_memory_appLimit_DESC",
              "description": "Sorts descending by the `diagnostics.memory.appLimit` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_memory_inUse_ASC",
              "description": "Sorts ascending by the `diagnostics.memory.inUse` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_memory_inUse_DESC",
              "description": "Sorts descending by the `diagnostics.memory.inUse` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_memory_total_ASC",
              "description": "Sorts ascending by the `diagnostics.memory.total` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_memory_total_DESC",
              "description": "Sorts descending by the `diagnostics.memory.total` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_network_bandwidth_totalDownloaded_ASC",
              "description": "Sorts ascending by the `diagnostics.network.bandwidth.totalDownloaded` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_network_bandwidth_totalDownloaded_DESC",
              "description": "Sorts descending by the `diagnostics.network.bandwidth.totalDownloaded` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_network_bandwidth_totalUploaded_ASC",
              "description": "Sorts ascending by the `diagnostics.network.bandwidth.totalUploaded` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diagnostics_network_bandwidth_totalUploaded_DESC",
              "description": "Sorts descending by the `diagnostics.network.bandwidth.totalUploaded` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "externalDeviceId_ASC",
              "description": "Sorts ascending by the `externalDeviceId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "externalDeviceId_DESC",
              "description": "Sorts descending by the `externalDeviceId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id_ASC",
              "description": "Sorts ascending by the `id` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id_DESC",
              "description": "Sorts descending by the `id` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchant_id_ASC",
              "description": "Sorts ascending by the `merchant.id` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchant_id_DESC",
              "description": "Sorts descending by the `merchant.id` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "softwareUpdateDetails_failureReason_ASC",
              "description": "Sorts ascending by the `softwareUpdateDetails.failureReason` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "softwareUpdateDetails_failureReason_DESC",
              "description": "Sorts descending by the `softwareUpdateDetails.failureReason` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "softwareUpdateDetails_lastUpdateCheckAt_ASC",
              "description": "Sorts ascending by the `softwareUpdateDetails.lastUpdateCheckAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "softwareUpdateDetails_lastUpdateCheckAt_DESC",
              "description": "Sorts descending by the `softwareUpdateDetails.lastUpdateCheckAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "softwareUpdateDetails_scheduledUpdateAt_ASC",
              "description": "Sorts ascending by the `softwareUpdateDetails.scheduledUpdateAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "softwareUpdateDetails_scheduledUpdateAt_DESC",
              "description": "Sorts descending by the `softwareUpdateDetails.scheduledUpdateAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "softwareUpdateDetails_state_ASC",
              "description": "Sorts ascending by the `softwareUpdateDetails.state` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "softwareUpdateDetails_state_DESC",
              "description": "Sorts descending by the `softwareUpdateDetails.state` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status_category_ASC",
              "description": "Sorts ascending by the `status.category` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status_category_DESC",
              "description": "Sorts descending by the `status.category` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status_detail_ASC",
              "description": "Sorts ascending by the `status.detail` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status_detail_DESC",
              "description": "Sorts descending by the `status.detail` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt_ASC",
              "description": "Sorts ascending by the `updatedAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt_DESC",
              "description": "Sorts descending by the `updatedAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceStatus",
          "description": "Details about the current status of the device.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "category",
              "description": "The category of the device status; indicates availability of the device.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceStatusCategory",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "detail",
              "description": "Details about the device status; indicates the mode in which the device is operating.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceStatusDetail",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceStatusAggregatedValues",
          "description": "Type used to perform aggregation computations on `DeviceStatus` fields.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "category",
              "description": "Computed aggregate values for the `category` field:\n\n> The category of the device status; indicates availability of the device.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "detail",
              "description": "Computed aggregate values for the `detail` field:\n\n> Details about the device status; indicates the mode in which the device is operating.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceStatusCategory",
          "description": "An enum for DeviceStatusCategory.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AVAILABLE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CRITICAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_STATUS_CATEGORY_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NEEDS_ATTENTION",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OFFLINE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRECONNECTED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceStatusCategoryFilterInput",
          "description": "Input type used to specify filters on `DeviceStatusCategory` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceStatusCategoryFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceStatusCategoryFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceStatusCategoryFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DeviceStatusCategoryInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceStatusCategoryFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceStatusCategoryInput",
          "description": "An enum for DeviceStatusCategory.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AVAILABLE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CRITICAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_STATUS_CATEGORY_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NEEDS_ATTENTION",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OFFLINE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRECONNECTED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceStatusDetail",
          "description": "An enum for DeviceStatusDetail.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DEVICE_STATUS_DETAIL_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOGGED_OUT",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SLEEPING",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceStatusDetailFilterInput",
          "description": "Input type used to specify filters on `DeviceStatusDetail` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceStatusDetailFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceStatusDetailFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceStatusDetailFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DeviceStatusDetailInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceStatusDetailFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceStatusDetailInput",
          "description": "An enum for DeviceStatusDetail.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DEVICE_STATUS_DETAIL_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOGGED_OUT",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SLEEPING",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceStatusFilterInput",
          "description": "Input type used to specify filters on `DeviceStatus` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceStatusFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceStatusFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceStatusFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "category",
              "description": "Used to filter on the `category` field:\n\n> The category of the device status; indicates availability of the device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceStatusCategoryFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "detail",
              "description": "Used to filter on the `detail` field:\n\n> Details about the device status; indicates the mode in which the device is operating.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceStatusDetailFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceStatusFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DeviceStatusGroupedBy",
          "description": "Type used to specify the `DeviceStatus` fields to group by for aggregations.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "category",
              "description": "The `category` field value for this group:\n\n> The category of the device status; indicates availability of the device.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceStatusCategory",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "detail",
              "description": "The `detail` field value for this group:\n\n> Details about the device status; indicates the mode in which the device is operating.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceStatusDetail",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceType",
          "description": "An enum for DeviceType.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ANDROID",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BARCODE_SCANNER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CASH_DRAWER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_TYPE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HANDHELD",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERNAL_PRINTER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERNAL_SCANNER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IOS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRINTER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "READER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REGISTER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCALE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCANNER_SCALE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STAND",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TERMINAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "THIRD_PARTY_TERMINAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceTypeFilterInput",
          "description": "Input type used to specify filters on `DeviceType` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceTypeFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DeviceTypeInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceTypeInput",
          "description": "An enum for DeviceType.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ANDROID",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BARCODE_SCANNER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CASH_DRAWER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEVICE_TYPE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HANDHELD",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERNAL_PRINTER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERNAL_SCANNER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IOS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRINTER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "READER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REGISTER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCALE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCANNER_SCALE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STAND",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TERMINAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "THIRD_PARTY_TERMINAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceWeightUnit",
          "description": "A enum for DeviceWeightUnit.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "GRAM",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KILOGRAM",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MILLIGRAM",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OUNCE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "POUND",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WEIGHT_UNIT_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DeviceWeightUnitFilterInput",
          "description": "Input type used to specify filters on `DeviceWeightUnit` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DeviceWeightUnitFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceWeightUnitFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceWeightUnitFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DeviceWeightUnitInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceWeightUnitFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DeviceWeightUnitInput",
          "description": "A enum for DeviceWeightUnit.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "GRAM",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KILOGRAM",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MILLIGRAM",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OUNCE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "POUND",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WEIGHT_UNIT_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DigitalWalletPaymentBrand",
          "description": "The brand used for a `WALLET` payment.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ALIPAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AU_PAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CASH_APP",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "D_BARAI",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LIGHTNING",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MERPAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYPAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RAKUTEN_PAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WECHAT_PAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DigitalWalletPaymentBrandFilterInput",
          "description": "Input type used to specify filters on `DigitalWalletPaymentBrand` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DigitalWalletPaymentBrandFilterInput` input because\nof collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DigitalWalletPaymentBrandFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DigitalWalletPaymentBrandFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DigitalWalletPaymentBrandInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DigitalWalletPaymentBrandFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DigitalWalletPaymentBrandInput",
          "description": "The brand used for a `WALLET` payment.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ALIPAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AU_PAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CASH_APP",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "D_BARAI",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LIGHTNING",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MERPAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYPAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RAKUTEN_PAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WECHAT_PAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DigitalWalletPaymentDetails",
          "description": "Permissions: PAYMENTS_READ\n\nAdditional details about `WALLET` type payments. Contains only non-confidential information.",
          "fields": [
            {
              "name": "brand",
              "description": "The brand used for the `WALLET` payment.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DigitalWalletPaymentBrand",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cashAppDetails",
              "description": "Brand-specific details for payments with the `brand` of `CASH_APP`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CashAppPaymentDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "The status of the `WALLET` payment.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DigitalWalletPaymentStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DigitalWalletPaymentDetailsFilterInput",
          "description": "Input type used to specify filters on `DigitalWalletPaymentDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "brand",
              "description": "Used to filter on the `brand` field:\n\n> The brand used for the `WALLET` payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DigitalWalletPaymentBrandFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cashAppDetails",
              "description": "Used to filter on the `cashAppDetails` field:\n\n> Brand-specific details for payments with the `brand` of `CASH_APP`.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CashAppPaymentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "status",
              "description": "Used to filter on the `status` field:\n\n> The status of the `WALLET` payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DigitalWalletPaymentStatusFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DigitalWalletPaymentStatus",
          "description": "The status of a `WALLET` payment.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AUTHORIZED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CAPTURED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FAILED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VOIDED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DigitalWalletPaymentStatusFilterInput",
          "description": "Input type used to specify filters on `DigitalWalletPaymentStatus` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DigitalWalletPaymentStatusFilterInput` input because\nof collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DigitalWalletPaymentStatusFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DigitalWalletPaymentStatusFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DigitalWalletPaymentStatusInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DigitalWalletPaymentStatusFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DigitalWalletPaymentStatusInput",
          "description": "The status of a `WALLET` payment.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AUTHORIZED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CAPTURED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FAILED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VOIDED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DiscountCode",
          "description": "Discount code belonging to the order.\n\nPermissions:ORDERS_READ",
          "fields": [
            {
              "name": "id",
              "description": "The identifier of the Discount Code.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pricingRuleId",
              "description": "The ID of the pricing rule corresponding to this discount code.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "quantity",
              "description": "The number of instances of the Discount Code.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "DisputeDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of any balance change due to a dispute event.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment involved in the dispute.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DisputeDetailsFilterInput",
          "description": "Input type used to specify filters on `DisputeDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment involved in the dispute.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "DistanceUnitInput",
          "description": "Enumerates the supported distance units.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CENTIMETER",
              "description": "A metric system unit equal to 1/100th of a meter.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FOOT",
              "description": "A United States customary unit of 12 inches.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INCH",
              "description": "A United States customary unit equal to 1/12th of a foot.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KILOMETER",
              "description": "A metric system unit equal to 1,000 meters.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "METER",
              "description": "The base unit of length in the metric system.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MILE",
              "description": "A United States customary unit of 5,280 feet.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MILLIMETER",
              "description": "A metric system unit equal to 1/1,000th of a meter.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NAUTICAL_MILE",
              "description": "An international unit of length used for air, marine, and space navigation. Equivalent to 1,852 meters.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "YARD",
              "description": "A United States customary unit of 3 feet.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Duration",
          "description": "A duration of time in [ISO8601 duration format](https://en.wikipedia.org/wiki/ISO_8601#Durations) e.g., \"P1W3D\".\nExample for 2 days, 12 hours, 30 minutes, and 15 seconds: P2DT12H30M15S",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DurationFilterInput",
          "description": "Input type used to specify filters on `Duration` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `DurationFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DurationFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DurationFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Duration",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DurationFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "EmailAddress",
          "description": "An email address.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "EmailAddressFilterInput",
          "description": "Input type used to specify filters on `EmailAddress` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "EmailAddressFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "EmailAddress",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "EmailAddressFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Employee",
          "description": "An employee object that is used by the external API.\n\nPermissions:EMPLOYEES_READ",
          "fields": [
            {
              "name": "id",
              "description": "The Square-issued ID of the employee.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Error",
          "description": "Represents an error encountered during a request to the Connect API.\n\nSee [Handling errors](https://developer.squareup.com/docs/build-basics/handling-errors) for more information.",
          "fields": [
            {
              "name": "category",
              "description": "The high-level category for the error.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "ErrorCategory",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "code",
              "description": "The specific code of the error.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "ErrorCode",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "detail",
              "description": "A human-readable description of the error for debugging purposes.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "field",
              "description": "The name of the field provided in the original request (if any) that the error pertains to.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ErrorCategory",
          "description": "Indicates which high-level category of error has occurred during a request to the Connect API.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "API_ERROR",
              "description": "An error occurred with the Connect API itself.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AUTHENTICATION_ERROR",
              "description": "An authentication error occurred. Most commonly, the request had a missing,\nmalformed, or otherwise invalid `Authorization` header.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXTERNAL_VENDOR_ERROR",
              "description": "An error that is returned from an external vendor's API.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_REQUEST_ERROR",
              "description": "The request was invalid. Most commonly, a required parameter was missing, or a provided parameter had an invalid value.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MERCHANT_SUBSCRIPTION_ERROR",
              "description": "An error occurred when checking a merchant subscription status.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYMENT_METHOD_ERROR",
              "description": "An error occurred while processing a payment method. Most commonly, the\ndetails of the payment method were invalid (such as a card's CVV or expiration date).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RATE_LIMIT_ERROR",
              "description": "Your application reached the Square API rate limit. You might receive this\nerror if your application sends a high number of requests\nto Square APIs in a short period of time.\n\nYour application should monitor responses for `429 RATE_LIMITED` errors and\nuse a retry mechanism with an [exponential\nbackoff](https://en.wikipedia.org/wiki/Exponential_backoff)\nschedule to resend the requests at an increasingly slower rate. It is also a\ngood practice to use a randomized delay (jitter) in your retry schedule.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REFUND_ERROR",
              "description": "An error occurred while attempting to process a refund.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ErrorCategoryInput",
          "description": "Indicates which high-level category of error has occurred during a request to the Connect API.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "API_ERROR",
              "description": "An error occurred with the Connect API itself.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AUTHENTICATION_ERROR",
              "description": "An authentication error occurred. Most commonly, the request had a missing,\nmalformed, or otherwise invalid `Authorization` header.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXTERNAL_VENDOR_ERROR",
              "description": "An error that is returned from an external vendor's API.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_REQUEST_ERROR",
              "description": "The request was invalid. Most commonly, a required parameter was missing, or a provided parameter had an invalid value.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MERCHANT_SUBSCRIPTION_ERROR",
              "description": "An error occurred when checking a merchant subscription status.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYMENT_METHOD_ERROR",
              "description": "An error occurred while processing a payment method. Most commonly, the\ndetails of the payment method were invalid (such as a card's CVV or expiration date).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RATE_LIMIT_ERROR",
              "description": "Your application reached the Square API rate limit. You might receive this\nerror if your application sends a high number of requests\nto Square APIs in a short period of time.\n\nYour application should monitor responses for `429 RATE_LIMITED` errors and\nuse a retry mechanism with an [exponential\nbackoff](https://en.wikipedia.org/wiki/Exponential_backoff)\nschedule to resend the requests at an increasingly slower rate. It is also a\ngood practice to use a randomized delay (jitter) in your retry schedule.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REFUND_ERROR",
              "description": "An error occurred while attempting to process a refund.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ErrorCategoryListElementFilterInput",
          "description": "Input type used to specify filters on elements of a `[ErrorCategory]` field.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `ErrorCategoryListElementFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ErrorCategoryListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ErrorCategoryListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "ErrorCategoryInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ErrorCategoryListFilterInput",
          "description": "Input type used to specify filters on `[ErrorCategory]` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `ErrorCategoryListFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ErrorCategoryListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ErrorCategoryListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anySatisfy",
              "description": "Matches records where any of the list elements match the provided sub-filter.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ErrorCategoryListElementFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ErrorCategoryListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ErrorCode",
          "description": "Indicates the specific error that occurred during a request to a Square API.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ACCESS_TOKEN_EXPIRED",
              "description": "The provided access token has expired.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ACCESS_TOKEN_REVOKED",
              "description": "The provided access token has been revoked.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ACCOUNT_UNUSABLE",
              "description": "The account provided cannot carry out transactions.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ADDRESS_VERIFICATION_FAILURE",
              "description": "The card issuer declined the request because the postal code is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ALLOWABLE_PIN_TRIES_EXCEEDED",
              "description": "The card has exhausted its available pin entry retries set by the card issuer.\nResolving the error typically requires the card holder to contact the card issuer.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AMOUNT_TOO_HIGH",
              "description": "The requested payment amount is too high for the provided payment source.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AMOUNT_TOO_LOW",
              "description": "The requested payment amount is too low for the provided payment source.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "API_VERSION_INCOMPATIBLE",
              "description": "The provided Square-Version is incompatible with the requested action.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "APPLE_PAYMENT_PROCESSING_CERTIFICATE_HASH_NOT_FOUND",
              "description": "Square could not find the associated Apple Pay certificate.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "APPLE_TTP_PIN_TOKEN",
              "description": "The payment was declined by the card issuer during an Apple Tap to Pay (TTP) transaction with a request for the\ncard's PIN. This code will be returned alongside CARD_DECLINED_VERIFICATION_REQUIRED as a supplemental error,\nand will include an issuer-provided token in the details field that is needed to initiate the PIN collection\nflow on the iOS device.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "APPLICATION_DISABLED",
              "description": "The calling application was disabled.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ARRAY_EMPTY",
              "description": "The provided array is empty.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ARRAY_LENGTH_TOO_LONG",
              "description": "The provided array has too many elements.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ARRAY_LENGTH_TOO_SHORT",
              "description": "The provided array has too few elements.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BAD_CERTIFICATE",
              "description": "Bad certificate.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BAD_EXPIRATION",
              "description": "The card expiration date is either missing or incorrectly formatted.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BAD_GATEWAY",
              "description": "Bad Gateway - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BAD_REQUEST",
              "description": "A general error occurred with the request.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BLOCKED_BY_BLOCKLIST",
              "description": "The card issuer declined the refund.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BUYER_NOT_FOUND",
              "description": "The provided buyer id can't be found.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BUYER_REFUSED_PAYMENT",
              "description": "Bank account rejected or was not authorized for the payment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CALCULATE_FULFILLMENT_RATES_FULFILLMENT_TYPE_NOT_SUPPORTED",
              "description": "Fulfillment type is not supported for calculating fulfillment rates.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CALCULATE_FULFILLMENT_RATES_INVALID_RECIPIENT_ADDRESS",
              "description": "No profiles are configured with the requested shipment destination.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CALCULATE_FULFILLMENT_RATES_ITEM_LEVEL_SHIPMENT_DESTINATION_NOT_CONFIGURED",
              "description": "An item in the order is not configured for the shipment destination and no default profile is configured.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CALCULATE_FULFILLMENT_RATES_NO_PROFILES_CONFIGURED",
              "description": "No profiles are configured for the fufillment type requested.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CALCULATE_FULFILLMENT_RATES_SHIPMENT_DESTINATION_NOT_CONFIGURED",
              "description": "No profiles are configured with the requested shipment destination.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARDHOLDER_INSUFFICIENT_PERMISSIONS",
              "description": "The card issuer has declined the transaction due to restrictions on where the\ncard can be used.  For example, a gift card is limited to a single merchant.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_DECLINED",
              "description": "The card was declined.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_DECLINED_CALL_ISSUER",
              "description": "The payment card was declined with a request for the card holder to call the issuer.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_DECLINED_VERIFICATION_REQUIRED",
              "description": "The payment card was declined with a request for additional verification.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_EXPIRED",
              "description": "The card issuer declined the request because the card is expired.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_MISMATCH",
              "description": "The API request references an unsupported source type.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_NOT_SUPPORTED",
              "description": "The card is not supported either in the geographic region or by the [merchant category code](https://developer.squareup.com/docs/locations-api#initialize-a-merchant-category-code) (MCC).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_PRESENCE_REQUIRED",
              "description": "The transaction requires that a card be present.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_PROCESSING_NOT_ENABLED",
              "description": "The location provided in the API call is not enabled for credit card processing.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_TOKEN_EXPIRED",
              "description": "The provided card token (nonce) has expired.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_TOKEN_USED",
              "description": "The provided card token (nonce) was already used to process the payment or refund.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARRIER_INTEGRATION_ERROR",
              "description": "The carrier integration believes the request is invalid. When this error code is used, the error message\nwill contain more information that should be presented directly to the user.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHECKOUT_EXPIRED",
              "description": "The provided checkout URL has expired.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHIP_INSERTION_REQUIRED",
              "description": "The card issuer requires that the card be read using a chip reader.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLIENT_CLOSED_REQUEST",
              "description": "External clients are not supposed to see this response code as used to reflect\nwhen clients close the connection before we're able to serve a response.\nThis non-standard response code was adopted by nginx.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLIENT_DISABLED",
              "description": "The provided client has been disabled.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLIENT_NOT_SUPPORTED",
              "description": "The provided client is not supported.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CONFLICT",
              "description": "Conflict - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CONFLICTING_PARAMETERS",
              "description": "One or more of the request parameters conflict with each other.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CURRENCY_MISMATCH",
              "description": "The currency associated with the payment is not valid for the provided funding\nsource. For example, a gift card funded in USD cannot be used to process\npayments in GBP.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUSTOMER_MISSING_EMAIL",
              "description": "The provided customer does not have a recorded email.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUSTOMER_MISSING_NAME",
              "description": "The provided customer does not have a recorded name.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUSTOMER_NOT_FOUND",
              "description": "The provided customer id can't be found in the merchant's customers list.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUSTOMS_DECLARATION_NO_VALUE",
              "description": "No value declared for customs for international shipments.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUSTOMS_DECLARATION_NO_WEIGHT",
              "description": "No weight declared for customs for international shipments.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CVV_FAILURE",
              "description": "The card issuer declined the request because the CVV value is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELAYED_TRANSACTION_CANCELED",
              "description": "The application tried to cancel a delayed-capture payment that was already cancelled.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELAYED_TRANSACTION_CAPTURED",
              "description": "The application tried to capture a delayed-capture payment that was already captured.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELAYED_TRANSACTION_EXPIRED",
              "description": "The application tried to update a delayed-capture payment that has expired.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELAYED_TRANSACTION_FAILED",
              "description": "The application tried to update a delayed-capture payment that failed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEPRECATED_FIELD_SET",
              "description": "Deprecated now means only that the field is listed as such in the API tech ref. This is not an error.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPECTED_ARRAY",
              "description": "The endpoint expected the provided value to be an array or list.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPECTED_BASE64_ENCODED_BYTE_ARRAY",
              "description": "The endpoint expected the provided value to be an array encoded in base64.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPECTED_BOOLEAN",
              "description": "The endpoint expected the provided value to be a boolean.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPECTED_FLOAT",
              "description": "The endpoint expected the provided value to be a float.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPECTED_INTEGER",
              "description": "The endpoint expected the provided value to be an integer.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPECTED_JSON_BODY",
              "description": "The request body is not a JSON object.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPECTED_MAP",
              "description": "The endpoint expected the provided value to be a map or associative array.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPECTED_OBJECT",
              "description": "The endpoint expected the provided value to be a JSON object.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPECTED_STRING",
              "description": "The endpoint expected the provided value to be a string.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPIRATION_FAILURE",
              "description": "The card expiration date is either invalid or indicates that the card is expired.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORBIDDEN",
              "description": "A general access error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_PREFERENCES_ASSIGNMENT_IS_IMMUTABLE",
              "description": "Unable to re-assign preferences assignment. Preferences assignment is a write-once field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_PREFERENCES_ASSIGNMENT_REQUIRED",
              "description": "An assignment is required for this type of request.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_PREFERENCES_CONFLICTING_ASSIGNMENT_TYPE",
              "description": "The provided preferences assignment types should be consistent within request.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_PREFERENCES_FULFILLMENT_SCHEDULE_NOT_ALLOWED",
              "description": "Fulfillment Preferences with fulfillment schedules cannot be assigned to a CATALOG_ITEM.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_PREFERENCES_INVALID_FULFILLMENT_AVAILABILITY_WINDOW",
              "description": "Parameters being used for FulfillmentAvailabilityWindow object are not valid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_PREFERENCES_INVALID_SCHEDULING_DATETIME",
              "description": "The datetime value is not in the correct format per app business logic.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_PREFERENCES_RESTRICTED_DATE_NOT_UNIQUE",
              "description": "This restricted date is a duplicate within the list.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_RATE_PROFILE_DUPLICATE_ITEM",
              "description": "A different item level profile has this item id.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_RATE_PROFILE_INVALID_ITEM",
              "description": "The item id provided for this profile is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_SCHEDULING_NO_ETA",
              "description": "A scheduling request was made however no ETA can be provided.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_SCHEDULING_OFF_HOURS",
              "description": "A scheduling request was made outside of the allowed hours.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_SCHEDULING_OFF_MENU_HOURS",
              "description": "A scheduling request was made outside of the allowed menu hours.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GATEWAY_TIMEOUT",
              "description": "Gateway Timeout - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GENERIC_DECLINE",
              "description": "Square received a decline without any additional information.  If the payment\ninformation seems correct, the buyer can contact their issuer to ask for more information.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GIFT_CARD_AVAILABLE_AMOUNT",
              "description": "When a Gift Card is a payment source, you can allow taking a partial payment\nby adding the `accept_partial_authorization` parameter in the request.\nHowever, taking such a partial payment does not work if your request also includes\n`tipMoney`, `appFeeMoney`, or both. Square declines such payments and returns\nthe `GIFT_CARD_AVAILABLE_AMOUNT` error.\nFor more information, see\n[CreatePayment errors (additional information)](https://developer.squareup.com/docs/payments-api/error-codes#createpayment-errors-additional-information).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GIFT_CARD_BUYER_DAILY_LIMIT_REACHED",
              "description": "The buyer attempting to add value to the gift card has reached daily purchase limits.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GIFT_CARD_INVALID_AMOUNT",
              "description": "The specified gift card amount is zero, negative, in the incorrect currency, or too large.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GIFT_CARD_MAX_VALUE_REACHED",
              "description": "The gift card's maximum value has been reached.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GIFT_CARD_MERCHANT_MAX_OUTSTANDING_BALANCE_REACHED",
              "description": "The merchant's maximum total of outstanding gift card balances has been reached.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GIFT_CARD_VALUE_ADDITION_LIMIT_REACHED",
              "description": "Attempted to add an amount to a gift card that is beyond its limits.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GONE",
              "description": "The target resource is no longer available and this condition is likely to be permanent.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HTTPS_ONLY",
              "description": "HTTPS only.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IDEMPOTENCY_KEY_REUSED",
              "description": "The provided idempotency key has already been used.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INCORRECT_TYPE",
              "description": "The value provided in the request is the wrong type. For example, a string instead of an integer.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INELIGIBLE_FOR_PREAUTHORIZATION",
              "description": "The payment method provided does not support preauthorization. Please try again using another form of payment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSUFFICIENT_FUNDS",
              "description": "The funding source has insufficient funds to cover the payment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSUFFICIENT_INVENTORY",
              "description": "The referenced inventory item has insufficient inventory.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSUFFICIENT_PERMISSIONS",
              "description": "The Square account does not have the permissions to accept this payment. For\nexample, Square may limit which merchants are allowed to receive gift card payments.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSUFFICIENT_PERMISSIONS_FOR_REFUND",
              "description": "The Square account does not have the permissions to process this refund.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSUFFICIENT_SCOPES",
              "description": "The provided access token does not have permission to execute the requested action.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERNAL_SERVER_ERROR",
              "description": "A general server error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_ACCOUNT",
              "description": "The issuer was not able to locate the account on record.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_ARRAY_VALUE",
              "description": "One or more objects in the array does not match the array type.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_CARD",
              "description": "The credit card cannot be validated based on the provided details.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_CARD_DATA",
              "description": "Generic error - the provided card data is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_CONTENT_TYPE",
              "description": "Invalid content type header.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_CURSOR",
              "description": "The pagination cursor included in the request is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_DATE",
              "description": "The subscription cannot be paused/resumed on the given date.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_EMAIL_ADDRESS",
              "description": "The provided email address is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_ENCRYPTED_CARD",
              "description": "The encrypted card information is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_ENUM_VALUE",
              "description": "The provided static string is not valid for the field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_EXPIRATION",
              "description": "The expiration date for the payment card is invalid. For example, it indicates a date in the past.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_EXPIRATION_DATE",
              "description": "The expiration date for the payment card is invalid. For example, it contains invalid characters.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_EXPIRATION_YEAR",
              "description": "The expiration year for the payment card is invalid. For example, it indicates\na year in the past or contains invalid characters.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_FEES",
              "description": "The app_fee_money on a payment is too high.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_FORM_VALUE",
              "description": "Only relevant for applications created prior to 2016-03-30. Indicates there was an error while parsing form values.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_LOCATION",
              "description": "The Square account cannot take payments in the specified region.  A Square\naccount can take payments only from the region where the account was created.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_PAUSE_LENGTH",
              "description": "The subscription cannot be paused longer than the duration of the current phase.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_PHONE_NUMBER",
              "description": "The provided phone number is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_PIN",
              "description": "The card issuer declined the request because the PIN is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_POSTAL_CODE",
              "description": "The postal code is incorrectly formatted.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_SORT_ORDER",
              "description": "The provided sort order is not a valid key.  Currently, sort order must be `ASC` or `DESC`.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_SQUARE_VERSION_FORMAT",
              "description": "The provided Square-Version is incorrectly formatted.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_TIME",
              "description": "Formatting for the provided time value is incorrect.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_TIMEZONE",
              "description": "Value is not a valid timezone.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_TIME_RANGE",
              "description": "The time range provided in the request is invalid.  For example, the end time is before the start time.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_URL",
              "description": "The provided API URL is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_VALUE",
              "description": "The provided value is invalid. For example, including `%` in a phone number.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_VERIFICATION_CODE",
              "description": "The verification code provided is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ISSUER_INSTALLMENT_ERROR",
              "description": "The authorization was declined due to an issue related to issuer-based installments. E.g.\ninstallments were requested but this card does not support installments.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEMS_BULK_BULK_ACTIONS_INVALID_ITEM",
              "description": "Invalid item encountered during bulk actions.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEMS_BULK_BULK_ACTIONS_NO_ELIGIBLE_ITEMS_FOUND",
              "description": "No eligible items found during during the bulk action execution.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEMS_BULK_BULK_ACTIONS_SALE_PRICE_INVALID_AMOUNT",
              "description": "Invalid amount error encountered during bulk actions.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEMS_BULK_BULK_ACTIONS_SALE_PRICE_INVALID_PERCENTAGE",
              "description": "Invalid percentage error encountered during bulk actions.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEMS_CUSTOM_ATTRIBUTE_LIMIT_EXCEEDED",
              "description": "Completing the request would exceed the limit of custom attribute objects.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEMS_CUSTOM_ATTRIBUTE_NOT_UNIQUE",
              "description": "Completing the request would result in duplicate custom attribute objects.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEMS_INVALID_CANADIAN_FREE_TEXT_DONATION_CATEGORY",
              "description": "A catalog category with a free text donation name has a non-donation item for a canadian seller.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JOB_TEMPLATE_NAME_TAKEN",
              "description": "There already exists a job template with the given name.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOCATION_MISMATCH",
              "description": "Generic error - the given location does not matching what is expected.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MANUALLY_ENTERED_PAYMENT_NOT_SUPPORTED",
              "description": "The card must be swiped, tapped, or dipped. Payments attempted by manually entering the card number are declined.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MAP_KEY_LENGTH_TOO_LONG",
              "description": "The length of one of the provided keys in the map is too long.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MAP_KEY_LENGTH_TOO_SHORT",
              "description": "The length of one of the provided keys in the map is too short.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MERCHANT_SUBSCRIPTION_NOT_FOUND",
              "description": "A required subscription was not found for the merchant.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "METHOD_NOT_ALLOWED",
              "description": "Method Not Allowed - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MISSING_ACCOUNT_TYPE",
              "description": "The payment is missing a required ACCOUNT_TYPE parameter.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MISSING_PIN",
              "description": "The payment is missing a required PIN.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MISSING_REQUIRED_PARAMETER",
              "description": "The request is missing a required path, query, or body parameter.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NOT_ACCEPTABLE",
              "description": "Not Acceptable - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NOT_FOUND",
              "description": "Not Found - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NOT_IMPLEMENTED",
              "description": "Not Implemented - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NO_FIELDS_SET",
              "description": "A general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ONE_INSTRUMENT_EXPECTED",
              "description": "A general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ORDER_ALREADY_CANCELED",
              "description": "Client attempted to operate on an Order that was already canceled.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ORDER_ALREADY_COMPLETED",
              "description": "The order has already been completed and cannot be modified.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ORDER_ALREADY_USED",
              "description": "The order was already used.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ORDER_CLIENT_ID_REUSED",
              "description": "The client attempted to create an order with an order client ID from a preexisting order.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ORDER_EXPIRED",
              "description": "The requested order has expired and cannot be updated.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ORDER_TOO_MANY_CATALOG_OBJECTS",
              "description": "The creation request contains too many catalog IDs.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ORDER_UNPAID_NOT_RETURNABLE",
              "description": "The order attempting to be returned is not yet paid and cannot be returned.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAN_FAILURE",
              "description": "The specified card number is invalid. For example, it is of incorrect length or is incorrectly formatted.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PARTIAL_PAYMENT_DELAY_CAPTURE_NOT_SUPPORTED",
              "description": "Delay capture of a partial payment is not supported.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYMENT_AMOUNT_MISMATCH",
              "description": "The payment was declined because there was a payment amount mismatch.  The\nmoney amount Square was expecting does not match the amount provided.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYMENT_LIMIT_EXCEEDED",
              "description": "Square declined the request because the payment amount exceeded the processing limit for this merchant.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYMENT_NOT_REFUNDABLE",
              "description": "The payment is not refundable. For example, the payment has been disputed and is no longer eligible for refunds.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYMENT_NOT_REFUNDABLE_DUE_TO_DISPUTE",
              "description": "The payment is not refundable because it has been disputed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PLAID_ERROR",
              "description": "Generic plaid error.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PLAID_ERROR_ITEM_LOGIN_REQUIRED",
              "description": "Plaid error - ITEM_LOGIN_REQUIRED.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PLAID_ERROR_RATE_LIMIT",
              "description": "Plaid error - RATE_LIMIT.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRICE_MISMATCH",
              "description": "There is a price mismatch.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RATE_LIMITED",
              "description": "Rate Limited - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "READER_DECLINED",
              "description": "The Square Card Reader declined the payment for an unknown reason.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "READER_NOT_SUPPORTED_DUE_TO_NO_EMV_READER",
              "description": "The Square Card Reader used is not supported because there is no EMV capable\nreader connected (but is otherwise supported in the region if there were one connected).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "READER_NOT_SUPPORTED_END_OF_LIFE",
              "description": "The Square Card Reader used is not supported anymore due to end of life.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "READER_NOT_SUPPORTED_FOR_COUNTRY",
              "description": "The Square Card Reader used is not supported in the geographic region.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REFUND_ALREADY_PENDING",
              "description": "The payment already has a pending refund.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REFUND_AMOUNT_INVALID",
              "description": "The requested refund amount exceeds the amount available to refund.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REFUND_DECLINED",
              "description": "Request failed - The card issuer declined the refund.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REFUND_ERROR_PAYMENT_NEEDS_COMPLETION",
              "description": "The payment is not refundable because the payment is approved and needs to be completed first before the refund is issued.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REQUEST_ENTITY_TOO_LARGE",
              "description": "Request Entity Too Large - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REQUEST_TIMEOUT",
              "description": "Request Timeout - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RESERVATION_DECLINED",
              "description": "The card issuer declined the refund.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RETIRED_FIELD_SET",
              "description": "The fields are not accessible at the request api version. Use API_VERSION_INCOMPATIBLE instead.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SANDBOX_NOT_SUPPORTED",
              "description": "The API request is not supported in sandbox.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCHEDULE_UPDATES_DUPLICATE_EXECUTE_AT",
              "description": "In the context of schedule updates, there can't be more than one update schedule for\nexecution for the same object and property type.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCHEDULE_UPDATES_PAST_EXECUTE_AT",
              "description": "In the context of schedule updates, to create a schedule transaction, the execute at time\nmust be in the future.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SERVICE_UNAVAILABLE",
              "description": "Service Unavailable - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SESSION_EXPIRED",
              "description": "A session associated with the payment has expired.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOURCE_EXPIRED",
              "description": "The provided source id has expired.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOURCE_USED",
              "description": "The provided source id was already used to create a card.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TEMPORARY_ERROR",
              "description": "A temporary internal error occurred. You can safely retry your call using the same idempotency key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "THIRD_PARTY_TERMINAL_TRANSACTION_ALREADY_ENQUEUED",
              "description": "The request is invalid because the third party terminal already has a pending transaction enqueued. A new\ntransaction cannot be started until the previous transaction is completed or cancelled.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TOO_MANY_MAP_ENTRIES",
              "description": "Too many entries in the map field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TRANSACTION_LIMIT",
              "description": "The card issuer has determined the payment amount is either too high or too low.\nThe API returns the error code mostly for credit cards (for example, the card reached\nthe credit limit). However, sometimes the issuer bank can indicate the error for debit\nor prepaid cards (for example, card has insufficient funds).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNAUTHORIZED",
              "description": "A general authorization error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNEXPECTED_VALUE",
              "description": "General error - the value provided was unexpected.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_BODY_PARAMETER",
              "description": "The body parameter is not recognized by the requested endpoint.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_QUERY_PARAMETER",
              "description": "The query parameters provided is invalid for the requested endpoint.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNPROCESSABLE_ENTITY",
              "description": "Unprocessable Entity - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNREACHABLE_URL",
              "description": "The provided URL is unreachable.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNSUPPORTED_CARD_BRAND",
              "description": "The credit card provided is not from a supported issuer.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNSUPPORTED_COUNTRY",
              "description": "The API request references an unsupported country.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNSUPPORTED_CURRENCY",
              "description": "The API request references an unsupported currency.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNSUPPORTED_ENTRY_METHOD",
              "description": "The entry method for the credit card (swipe, dip, tap) is not supported.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNSUPPORTED_INSTRUMENT_TYPE",
              "description": "The API request references an unsupported instrument type/.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNSUPPORTED_LOYALTY_REWARD_TIER",
              "description": "The referenced loyalty program reward tier is not supported.  This could\nhappen if the reward tier created in a first party application is incompatible\nwith the Loyalty API.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNSUPPORTED_MEDIA_TYPE",
              "description": "Unsupported Media Type - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNSUPPORTED_SOURCE_TYPE",
              "description": "The API request references an unsupported source type.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "V1_ACCESS_TOKEN",
              "description": "The calling application is using an access token created prior to 2016-03-30\nand is not compatible with v2 Square API calls.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "V1_APPLICATION",
              "description": "The calling application was created prior to 2016-03-30 and is not compatible with v2 Square API calls.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VALUE_EMPTY",
              "description": "The provided value has a default (empty) value such as a blank string.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VALUE_REGEX_MISMATCH",
              "description": "The provided value does not match an expected regular expression.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VALUE_TOO_HIGH",
              "description": "The provided value is greater than the supported maximum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VALUE_TOO_LONG",
              "description": "The provided string value is longer than the maximum length allowed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VALUE_TOO_LOW",
              "description": "The provided value is less than the supported minimum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VALUE_TOO_SHORT",
              "description": "The provided string value is shorter than the minimum length allowed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERIFY_AVS_FAILURE",
              "description": "The AVS could not be verified.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERIFY_CVV_FAILURE",
              "description": "The CVV could not be verified.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERSION_MISMATCH",
              "description": "The provided object version does not match the expected value.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VOICE_FAILURE",
              "description": "The card issuer declined the request because the issuer requires voice authorization from the cardholder.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ErrorCodeInput",
          "description": "Indicates the specific error that occurred during a request to a Square API.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ACCESS_TOKEN_EXPIRED",
              "description": "The provided access token has expired.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ACCESS_TOKEN_REVOKED",
              "description": "The provided access token has been revoked.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ACCOUNT_UNUSABLE",
              "description": "The account provided cannot carry out transactions.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ADDRESS_VERIFICATION_FAILURE",
              "description": "The card issuer declined the request because the postal code is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ALLOWABLE_PIN_TRIES_EXCEEDED",
              "description": "The card has exhausted its available pin entry retries set by the card issuer.\nResolving the error typically requires the card holder to contact the card issuer.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AMOUNT_TOO_HIGH",
              "description": "The requested payment amount is too high for the provided payment source.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "AMOUNT_TOO_LOW",
              "description": "The requested payment amount is too low for the provided payment source.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "API_VERSION_INCOMPATIBLE",
              "description": "The provided Square-Version is incompatible with the requested action.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "APPLE_PAYMENT_PROCESSING_CERTIFICATE_HASH_NOT_FOUND",
              "description": "Square could not find the associated Apple Pay certificate.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "APPLE_TTP_PIN_TOKEN",
              "description": "The payment was declined by the card issuer during an Apple Tap to Pay (TTP) transaction with a request for the\ncard's PIN. This code will be returned alongside CARD_DECLINED_VERIFICATION_REQUIRED as a supplemental error,\nand will include an issuer-provided token in the details field that is needed to initiate the PIN collection\nflow on the iOS device.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "APPLICATION_DISABLED",
              "description": "The calling application was disabled.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ARRAY_EMPTY",
              "description": "The provided array is empty.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ARRAY_LENGTH_TOO_LONG",
              "description": "The provided array has too many elements.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ARRAY_LENGTH_TOO_SHORT",
              "description": "The provided array has too few elements.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BAD_CERTIFICATE",
              "description": "Bad certificate.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BAD_EXPIRATION",
              "description": "The card expiration date is either missing or incorrectly formatted.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BAD_GATEWAY",
              "description": "Bad Gateway - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BAD_REQUEST",
              "description": "A general error occurred with the request.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BLOCKED_BY_BLOCKLIST",
              "description": "The card issuer declined the refund.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BUYER_NOT_FOUND",
              "description": "The provided buyer id can't be found.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BUYER_REFUSED_PAYMENT",
              "description": "Bank account rejected or was not authorized for the payment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CALCULATE_FULFILLMENT_RATES_FULFILLMENT_TYPE_NOT_SUPPORTED",
              "description": "Fulfillment type is not supported for calculating fulfillment rates.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CALCULATE_FULFILLMENT_RATES_INVALID_RECIPIENT_ADDRESS",
              "description": "No profiles are configured with the requested shipment destination.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CALCULATE_FULFILLMENT_RATES_ITEM_LEVEL_SHIPMENT_DESTINATION_NOT_CONFIGURED",
              "description": "An item in the order is not configured for the shipment destination and no default profile is configured.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CALCULATE_FULFILLMENT_RATES_NO_PROFILES_CONFIGURED",
              "description": "No profiles are configured for the fufillment type requested.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CALCULATE_FULFILLMENT_RATES_SHIPMENT_DESTINATION_NOT_CONFIGURED",
              "description": "No profiles are configured with the requested shipment destination.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARDHOLDER_INSUFFICIENT_PERMISSIONS",
              "description": "The card issuer has declined the transaction due to restrictions on where the\ncard can be used.  For example, a gift card is limited to a single merchant.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_DECLINED",
              "description": "The card was declined.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_DECLINED_CALL_ISSUER",
              "description": "The payment card was declined with a request for the card holder to call the issuer.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_DECLINED_VERIFICATION_REQUIRED",
              "description": "The payment card was declined with a request for additional verification.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_EXPIRED",
              "description": "The card issuer declined the request because the card is expired.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_MISMATCH",
              "description": "The API request references an unsupported source type.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_NOT_SUPPORTED",
              "description": "The card is not supported either in the geographic region or by the [merchant category code](https://developer.squareup.com/docs/locations-api#initialize-a-merchant-category-code) (MCC).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_PRESENCE_REQUIRED",
              "description": "The transaction requires that a card be present.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_PROCESSING_NOT_ENABLED",
              "description": "The location provided in the API call is not enabled for credit card processing.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_TOKEN_EXPIRED",
              "description": "The provided card token (nonce) has expired.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD_TOKEN_USED",
              "description": "The provided card token (nonce) was already used to process the payment or refund.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARRIER_INTEGRATION_ERROR",
              "description": "The carrier integration believes the request is invalid. When this error code is used, the error message\nwill contain more information that should be presented directly to the user.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHECKOUT_EXPIRED",
              "description": "The provided checkout URL has expired.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHIP_INSERTION_REQUIRED",
              "description": "The card issuer requires that the card be read using a chip reader.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLIENT_CLOSED_REQUEST",
              "description": "External clients are not supposed to see this response code as used to reflect\nwhen clients close the connection before we're able to serve a response.\nThis non-standard response code was adopted by nginx.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLIENT_DISABLED",
              "description": "The provided client has been disabled.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLIENT_NOT_SUPPORTED",
              "description": "The provided client is not supported.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CONFLICT",
              "description": "Conflict - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CONFLICTING_PARAMETERS",
              "description": "One or more of the request parameters conflict with each other.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CURRENCY_MISMATCH",
              "description": "The currency associated with the payment is not valid for the provided funding\nsource. For example, a gift card funded in USD cannot be used to process\npayments in GBP.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUSTOMER_MISSING_EMAIL",
              "description": "The provided customer does not have a recorded email.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUSTOMER_MISSING_NAME",
              "description": "The provided customer does not have a recorded name.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUSTOMER_NOT_FOUND",
              "description": "The provided customer id can't be found in the merchant's customers list.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUSTOMS_DECLARATION_NO_VALUE",
              "description": "No value declared for customs for international shipments.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUSTOMS_DECLARATION_NO_WEIGHT",
              "description": "No weight declared for customs for international shipments.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CVV_FAILURE",
              "description": "The card issuer declined the request because the CVV value is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELAYED_TRANSACTION_CANCELED",
              "description": "The application tried to cancel a delayed-capture payment that was already cancelled.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELAYED_TRANSACTION_CAPTURED",
              "description": "The application tried to capture a delayed-capture payment that was already captured.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELAYED_TRANSACTION_EXPIRED",
              "description": "The application tried to update a delayed-capture payment that has expired.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELAYED_TRANSACTION_FAILED",
              "description": "The application tried to update a delayed-capture payment that failed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEPRECATED_FIELD_SET",
              "description": "Deprecated now means only that the field is listed as such in the API tech ref. This is not an error.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPECTED_ARRAY",
              "description": "The endpoint expected the provided value to be an array or list.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPECTED_BASE64_ENCODED_BYTE_ARRAY",
              "description": "The endpoint expected the provided value to be an array encoded in base64.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPECTED_BOOLEAN",
              "description": "The endpoint expected the provided value to be a boolean.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPECTED_FLOAT",
              "description": "The endpoint expected the provided value to be a float.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPECTED_INTEGER",
              "description": "The endpoint expected the provided value to be an integer.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPECTED_JSON_BODY",
              "description": "The request body is not a JSON object.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPECTED_MAP",
              "description": "The endpoint expected the provided value to be a map or associative array.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPECTED_OBJECT",
              "description": "The endpoint expected the provided value to be a JSON object.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPECTED_STRING",
              "description": "The endpoint expected the provided value to be a string.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPIRATION_FAILURE",
              "description": "The card expiration date is either invalid or indicates that the card is expired.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FORBIDDEN",
              "description": "A general access error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_PREFERENCES_ASSIGNMENT_IS_IMMUTABLE",
              "description": "Unable to re-assign preferences assignment. Preferences assignment is a write-once field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_PREFERENCES_ASSIGNMENT_REQUIRED",
              "description": "An assignment is required for this type of request.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_PREFERENCES_CONFLICTING_ASSIGNMENT_TYPE",
              "description": "The provided preferences assignment types should be consistent within request.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_PREFERENCES_FULFILLMENT_SCHEDULE_NOT_ALLOWED",
              "description": "Fulfillment Preferences with fulfillment schedules cannot be assigned to a CATALOG_ITEM.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_PREFERENCES_INVALID_FULFILLMENT_AVAILABILITY_WINDOW",
              "description": "Parameters being used for FulfillmentAvailabilityWindow object are not valid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_PREFERENCES_INVALID_SCHEDULING_DATETIME",
              "description": "The datetime value is not in the correct format per app business logic.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_PREFERENCES_RESTRICTED_DATE_NOT_UNIQUE",
              "description": "This restricted date is a duplicate within the list.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_RATE_PROFILE_DUPLICATE_ITEM",
              "description": "A different item level profile has this item id.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_RATE_PROFILE_INVALID_ITEM",
              "description": "The item id provided for this profile is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_SCHEDULING_NO_ETA",
              "description": "A scheduling request was made however no ETA can be provided.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_SCHEDULING_OFF_HOURS",
              "description": "A scheduling request was made outside of the allowed hours.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FULFILLMENT_SCHEDULING_OFF_MENU_HOURS",
              "description": "A scheduling request was made outside of the allowed menu hours.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GATEWAY_TIMEOUT",
              "description": "Gateway Timeout - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GENERIC_DECLINE",
              "description": "Square received a decline without any additional information.  If the payment\ninformation seems correct, the buyer can contact their issuer to ask for more information.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GIFT_CARD_AVAILABLE_AMOUNT",
              "description": "When a Gift Card is a payment source, you can allow taking a partial payment\nby adding the `accept_partial_authorization` parameter in the request.\nHowever, taking such a partial payment does not work if your request also includes\n`tipMoney`, `appFeeMoney`, or both. Square declines such payments and returns\nthe `GIFT_CARD_AVAILABLE_AMOUNT` error.\nFor more information, see\n[CreatePayment errors (additional information)](https://developer.squareup.com/docs/payments-api/error-codes#createpayment-errors-additional-information).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GIFT_CARD_BUYER_DAILY_LIMIT_REACHED",
              "description": "The buyer attempting to add value to the gift card has reached daily purchase limits.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GIFT_CARD_INVALID_AMOUNT",
              "description": "The specified gift card amount is zero, negative, in the incorrect currency, or too large.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GIFT_CARD_MAX_VALUE_REACHED",
              "description": "The gift card's maximum value has been reached.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GIFT_CARD_MERCHANT_MAX_OUTSTANDING_BALANCE_REACHED",
              "description": "The merchant's maximum total of outstanding gift card balances has been reached.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GIFT_CARD_VALUE_ADDITION_LIMIT_REACHED",
              "description": "Attempted to add an amount to a gift card that is beyond its limits.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GONE",
              "description": "The target resource is no longer available and this condition is likely to be permanent.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HTTPS_ONLY",
              "description": "HTTPS only.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IDEMPOTENCY_KEY_REUSED",
              "description": "The provided idempotency key has already been used.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INCORRECT_TYPE",
              "description": "The value provided in the request is the wrong type. For example, a string instead of an integer.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INELIGIBLE_FOR_PREAUTHORIZATION",
              "description": "The payment method provided does not support preauthorization. Please try again using another form of payment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSUFFICIENT_FUNDS",
              "description": "The funding source has insufficient funds to cover the payment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSUFFICIENT_INVENTORY",
              "description": "The referenced inventory item has insufficient inventory.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSUFFICIENT_PERMISSIONS",
              "description": "The Square account does not have the permissions to accept this payment. For\nexample, Square may limit which merchants are allowed to receive gift card payments.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSUFFICIENT_PERMISSIONS_FOR_REFUND",
              "description": "The Square account does not have the permissions to process this refund.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INSUFFICIENT_SCOPES",
              "description": "The provided access token does not have permission to execute the requested action.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERNAL_SERVER_ERROR",
              "description": "A general server error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_ACCOUNT",
              "description": "The issuer was not able to locate the account on record.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_ARRAY_VALUE",
              "description": "One or more objects in the array does not match the array type.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_CARD",
              "description": "The credit card cannot be validated based on the provided details.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_CARD_DATA",
              "description": "Generic error - the provided card data is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_CONTENT_TYPE",
              "description": "Invalid content type header.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_CURSOR",
              "description": "The pagination cursor included in the request is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_DATE",
              "description": "The subscription cannot be paused/resumed on the given date.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_EMAIL_ADDRESS",
              "description": "The provided email address is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_ENCRYPTED_CARD",
              "description": "The encrypted card information is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_ENUM_VALUE",
              "description": "The provided static string is not valid for the field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_EXPIRATION",
              "description": "The expiration date for the payment card is invalid. For example, it indicates a date in the past.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_EXPIRATION_DATE",
              "description": "The expiration date for the payment card is invalid. For example, it contains invalid characters.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_EXPIRATION_YEAR",
              "description": "The expiration year for the payment card is invalid. For example, it indicates\na year in the past or contains invalid characters.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_FEES",
              "description": "The app_fee_money on a payment is too high.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_FORM_VALUE",
              "description": "Only relevant for applications created prior to 2016-03-30. Indicates there was an error while parsing form values.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_LOCATION",
              "description": "The Square account cannot take payments in the specified region.  A Square\naccount can take payments only from the region where the account was created.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_PAUSE_LENGTH",
              "description": "The subscription cannot be paused longer than the duration of the current phase.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_PHONE_NUMBER",
              "description": "The provided phone number is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_PIN",
              "description": "The card issuer declined the request because the PIN is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_POSTAL_CODE",
              "description": "The postal code is incorrectly formatted.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_SORT_ORDER",
              "description": "The provided sort order is not a valid key.  Currently, sort order must be `ASC` or `DESC`.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_SQUARE_VERSION_FORMAT",
              "description": "The provided Square-Version is incorrectly formatted.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_TIME",
              "description": "Formatting for the provided time value is incorrect.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_TIMEZONE",
              "description": "Value is not a valid timezone.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_TIME_RANGE",
              "description": "The time range provided in the request is invalid.  For example, the end time is before the start time.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_URL",
              "description": "The provided API URL is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_VALUE",
              "description": "The provided value is invalid. For example, including `%` in a phone number.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID_VERIFICATION_CODE",
              "description": "The verification code provided is invalid.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ISSUER_INSTALLMENT_ERROR",
              "description": "The authorization was declined due to an issue related to issuer-based installments. E.g.\ninstallments were requested but this card does not support installments.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEMS_BULK_BULK_ACTIONS_INVALID_ITEM",
              "description": "Invalid item encountered during bulk actions.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEMS_BULK_BULK_ACTIONS_NO_ELIGIBLE_ITEMS_FOUND",
              "description": "No eligible items found during during the bulk action execution.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEMS_BULK_BULK_ACTIONS_SALE_PRICE_INVALID_AMOUNT",
              "description": "Invalid amount error encountered during bulk actions.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEMS_BULK_BULK_ACTIONS_SALE_PRICE_INVALID_PERCENTAGE",
              "description": "Invalid percentage error encountered during bulk actions.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEMS_CUSTOM_ATTRIBUTE_LIMIT_EXCEEDED",
              "description": "Completing the request would exceed the limit of custom attribute objects.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEMS_CUSTOM_ATTRIBUTE_NOT_UNIQUE",
              "description": "Completing the request would result in duplicate custom attribute objects.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEMS_INVALID_CANADIAN_FREE_TEXT_DONATION_CATEGORY",
              "description": "A catalog category with a free text donation name has a non-donation item for a canadian seller.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "JOB_TEMPLATE_NAME_TAKEN",
              "description": "There already exists a job template with the given name.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOCATION_MISMATCH",
              "description": "Generic error - the given location does not matching what is expected.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MANUALLY_ENTERED_PAYMENT_NOT_SUPPORTED",
              "description": "The card must be swiped, tapped, or dipped. Payments attempted by manually entering the card number are declined.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MAP_KEY_LENGTH_TOO_LONG",
              "description": "The length of one of the provided keys in the map is too long.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MAP_KEY_LENGTH_TOO_SHORT",
              "description": "The length of one of the provided keys in the map is too short.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MERCHANT_SUBSCRIPTION_NOT_FOUND",
              "description": "A required subscription was not found for the merchant.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "METHOD_NOT_ALLOWED",
              "description": "Method Not Allowed - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MISSING_ACCOUNT_TYPE",
              "description": "The payment is missing a required ACCOUNT_TYPE parameter.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MISSING_PIN",
              "description": "The payment is missing a required PIN.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MISSING_REQUIRED_PARAMETER",
              "description": "The request is missing a required path, query, or body parameter.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NOT_ACCEPTABLE",
              "description": "Not Acceptable - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NOT_FOUND",
              "description": "Not Found - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NOT_IMPLEMENTED",
              "description": "Not Implemented - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NO_FIELDS_SET",
              "description": "A general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ONE_INSTRUMENT_EXPECTED",
              "description": "A general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ORDER_ALREADY_CANCELED",
              "description": "Client attempted to operate on an Order that was already canceled.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ORDER_ALREADY_COMPLETED",
              "description": "The order has already been completed and cannot be modified.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ORDER_ALREADY_USED",
              "description": "The order was already used.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ORDER_CLIENT_ID_REUSED",
              "description": "The client attempted to create an order with an order client ID from a preexisting order.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ORDER_EXPIRED",
              "description": "The requested order has expired and cannot be updated.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ORDER_TOO_MANY_CATALOG_OBJECTS",
              "description": "The creation request contains too many catalog IDs.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ORDER_UNPAID_NOT_RETURNABLE",
              "description": "The order attempting to be returned is not yet paid and cannot be returned.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAN_FAILURE",
              "description": "The specified card number is invalid. For example, it is of incorrect length or is incorrectly formatted.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PARTIAL_PAYMENT_DELAY_CAPTURE_NOT_SUPPORTED",
              "description": "Delay capture of a partial payment is not supported.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYMENT_AMOUNT_MISMATCH",
              "description": "The payment was declined because there was a payment amount mismatch.  The\nmoney amount Square was expecting does not match the amount provided.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYMENT_LIMIT_EXCEEDED",
              "description": "Square declined the request because the payment amount exceeded the processing limit for this merchant.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYMENT_NOT_REFUNDABLE",
              "description": "The payment is not refundable. For example, the payment has been disputed and is no longer eligible for refunds.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYMENT_NOT_REFUNDABLE_DUE_TO_DISPUTE",
              "description": "The payment is not refundable because it has been disputed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PLAID_ERROR",
              "description": "Generic plaid error.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PLAID_ERROR_ITEM_LOGIN_REQUIRED",
              "description": "Plaid error - ITEM_LOGIN_REQUIRED.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PLAID_ERROR_RATE_LIMIT",
              "description": "Plaid error - RATE_LIMIT.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRICE_MISMATCH",
              "description": "There is a price mismatch.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RATE_LIMITED",
              "description": "Rate Limited - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "READER_DECLINED",
              "description": "The Square Card Reader declined the payment for an unknown reason.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "READER_NOT_SUPPORTED_DUE_TO_NO_EMV_READER",
              "description": "The Square Card Reader used is not supported because there is no EMV capable\nreader connected (but is otherwise supported in the region if there were one connected).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "READER_NOT_SUPPORTED_END_OF_LIFE",
              "description": "The Square Card Reader used is not supported anymore due to end of life.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "READER_NOT_SUPPORTED_FOR_COUNTRY",
              "description": "The Square Card Reader used is not supported in the geographic region.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REFUND_ALREADY_PENDING",
              "description": "The payment already has a pending refund.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REFUND_AMOUNT_INVALID",
              "description": "The requested refund amount exceeds the amount available to refund.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REFUND_DECLINED",
              "description": "Request failed - The card issuer declined the refund.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REFUND_ERROR_PAYMENT_NEEDS_COMPLETION",
              "description": "The payment is not refundable because the payment is approved and needs to be completed first before the refund is issued.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REQUEST_ENTITY_TOO_LARGE",
              "description": "Request Entity Too Large - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REQUEST_TIMEOUT",
              "description": "Request Timeout - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RESERVATION_DECLINED",
              "description": "The card issuer declined the refund.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RETIRED_FIELD_SET",
              "description": "The fields are not accessible at the request api version. Use API_VERSION_INCOMPATIBLE instead.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SANDBOX_NOT_SUPPORTED",
              "description": "The API request is not supported in sandbox.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCHEDULE_UPDATES_DUPLICATE_EXECUTE_AT",
              "description": "In the context of schedule updates, there can't be more than one update schedule for\nexecution for the same object and property type.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCHEDULE_UPDATES_PAST_EXECUTE_AT",
              "description": "In the context of schedule updates, to create a schedule transaction, the execute at time\nmust be in the future.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SERVICE_UNAVAILABLE",
              "description": "Service Unavailable - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SESSION_EXPIRED",
              "description": "A session associated with the payment has expired.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOURCE_EXPIRED",
              "description": "The provided source id has expired.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOURCE_USED",
              "description": "The provided source id was already used to create a card.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TEMPORARY_ERROR",
              "description": "A temporary internal error occurred. You can safely retry your call using the same idempotency key.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "THIRD_PARTY_TERMINAL_TRANSACTION_ALREADY_ENQUEUED",
              "description": "The request is invalid because the third party terminal already has a pending transaction enqueued. A new\ntransaction cannot be started until the previous transaction is completed or cancelled.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TOO_MANY_MAP_ENTRIES",
              "description": "Too many entries in the map field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TRANSACTION_LIMIT",
              "description": "The card issuer has determined the payment amount is either too high or too low.\nThe API returns the error code mostly for credit cards (for example, the card reached\nthe credit limit). However, sometimes the issuer bank can indicate the error for debit\nor prepaid cards (for example, card has insufficient funds).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNAUTHORIZED",
              "description": "A general authorization error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNEXPECTED_VALUE",
              "description": "General error - the value provided was unexpected.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_BODY_PARAMETER",
              "description": "The body parameter is not recognized by the requested endpoint.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_QUERY_PARAMETER",
              "description": "The query parameters provided is invalid for the requested endpoint.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNPROCESSABLE_ENTITY",
              "description": "Unprocessable Entity - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNREACHABLE_URL",
              "description": "The provided URL is unreachable.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNSUPPORTED_CARD_BRAND",
              "description": "The credit card provided is not from a supported issuer.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNSUPPORTED_COUNTRY",
              "description": "The API request references an unsupported country.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNSUPPORTED_CURRENCY",
              "description": "The API request references an unsupported currency.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNSUPPORTED_ENTRY_METHOD",
              "description": "The entry method for the credit card (swipe, dip, tap) is not supported.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNSUPPORTED_INSTRUMENT_TYPE",
              "description": "The API request references an unsupported instrument type/.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNSUPPORTED_LOYALTY_REWARD_TIER",
              "description": "The referenced loyalty program reward tier is not supported.  This could\nhappen if the reward tier created in a first party application is incompatible\nwith the Loyalty API.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNSUPPORTED_MEDIA_TYPE",
              "description": "Unsupported Media Type - a general error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNSUPPORTED_SOURCE_TYPE",
              "description": "The API request references an unsupported source type.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "V1_ACCESS_TOKEN",
              "description": "The calling application is using an access token created prior to 2016-03-30\nand is not compatible with v2 Square API calls.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "V1_APPLICATION",
              "description": "The calling application was created prior to 2016-03-30 and is not compatible with v2 Square API calls.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VALUE_EMPTY",
              "description": "The provided value has a default (empty) value such as a blank string.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VALUE_REGEX_MISMATCH",
              "description": "The provided value does not match an expected regular expression.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VALUE_TOO_HIGH",
              "description": "The provided value is greater than the supported maximum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VALUE_TOO_LONG",
              "description": "The provided string value is longer than the maximum length allowed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VALUE_TOO_LOW",
              "description": "The provided value is less than the supported minimum.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VALUE_TOO_SHORT",
              "description": "The provided string value is shorter than the minimum length allowed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERIFY_AVS_FAILURE",
              "description": "The AVS could not be verified.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERIFY_CVV_FAILURE",
              "description": "The CVV could not be verified.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERSION_MISMATCH",
              "description": "The provided object version does not match the expected value.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VOICE_FAILURE",
              "description": "The card issuer declined the request because the issuer requires voice authorization from the cardholder.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ErrorCodeListElementFilterInput",
          "description": "Input type used to specify filters on elements of a `[ErrorCode]` field.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `ErrorCodeListElementFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ErrorCodeListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ErrorCodeListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "ErrorCodeInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ErrorCodeListFilterInput",
          "description": "Input type used to specify filters on `[ErrorCode]` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `ErrorCodeListFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ErrorCodeListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ErrorCodeListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anySatisfy",
              "description": "Matches records where any of the list elements match the provided sub-filter.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ErrorCodeListElementFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ErrorCodeListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ErrorFieldsListFilterInput",
          "description": "Input type used to specify filters on a `Error` object referenced directly\nor transitively from a list field that has been configured to index each leaf field as\nits own flattened list of values.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `ErrorFieldsListFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ErrorFieldsListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ErrorFieldsListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "category",
              "description": "Used to filter on the `category` field:\n\n> The high-level category for the error.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ErrorCategoryListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "code",
              "description": "Used to filter on the `code` field:\n\n> The specific code of the error.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ErrorCodeListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "count",
              "description": "Used to filter on the number of non-null elements in this list field.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "detail",
              "description": "Used to filter on the `detail` field:\n\n> A human-readable description of the error for debugging purposes.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "field",
              "description": "Used to filter on the `field` field:\n\n> The name of the field provided in the original request (if any) that the error pertains to.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ErrorFieldsListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "EthernetComponentDetails",
          "description": "Structured data for an `Ethernet` interface, set for DeviceComponents of type `ETHERNET`.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "ethernetActive",
              "description": "A boolean to represent whether the Ethernet interface is currently active.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ipAddressV4",
              "description": "The string representation of the device's IPv4 address.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ExcludeStrategy",
          "description": "Indicates which products matched by a CatalogPricingRule\nwill be excluded if the pricing rule uses an exclude set.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "LEAST_EXPENSIVE",
              "description": "The least expensive matched products are excluded from the pricing. If\nthe pricing rule is set to exclude one product and multiple products in the\nmatch set qualify as least expensive, then one will be excluded at random.\n\nExcluding the least expensive product gives the best discount value to the buyer.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MOST_EXPENSIVE",
              "description": "The most expensive matched product is excluded from the pricing rule.\nIf multiple products have the same price and all qualify as least expensive,\none will be excluded at random.\n\nThis guarantees that the most expensive product is purchased at full price.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ExternalPaymentDetails",
          "description": "Permissions: PAYMENTS_READ\n\nStores details about an external payment. Contains only non-confidential information.\nFor more information, see\n[Take External Payments](https://developer.squareup.com/docs/payments-api/take-payments/external-payments).",
          "fields": [
            {
              "name": "source",
              "description": "A description of the external payment source. For example, \"Food Delivery Service\".",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sourceFeeMoney",
              "description": "The fees paid to the source. The `amountMoney` minus this field is the net amount seller receives.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sourceId",
              "description": "An ID to associate the payment to its originating source.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of external payment the seller received.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "ExternalPaymentType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ExternalPaymentDetailsFilterInput",
          "description": "Input type used to specify filters on `ExternalPaymentDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "source",
              "description": "Used to filter on the `source` field:\n\n> A description of the external payment source. For example, \"Food Delivery Service\".\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "sourceFeeMoney",
              "description": "Used to filter on the `sourceFeeMoney` field:\n\n> The fees paid to the source. The `amountMoney` minus this field is the net amount seller receives.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MoneyFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "sourceId",
              "description": "Used to filter on the `sourceId` field:\n\n> An ID to associate the payment to its originating source.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "type",
              "description": "Used to filter on the `type` field:\n\n> The type of external payment the seller received.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ExternalPaymentTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ExternalPaymentType",
          "description": "The type of external payment the seller received.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "BANK_TRANSFER",
              "description": "Paid using external bank transfer.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD",
              "description": "A credit or debit card that Square does not support.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHECK",
              "description": "Paid using a physical check.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CRYPTO",
              "description": "Paid using a crypto currency.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EMONEY",
              "description": "Paid using an E-money provider.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXTERNAL",
              "description": "A third-party application gathered this payment outside of Square.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FOOD_VOUCHER",
              "description": "Restaurant voucher provided by employers to employees to pay for meals.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER",
              "description": "A type not listed here.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER_GIFT_CARD",
              "description": "Paid using a non-Square gift card.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOCIAL",
              "description": "Paid using peer-to-peer payment applications.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_CASH",
              "description": "Paid using Square Cash App.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STORED_BALANCE",
              "description": "Use for house accounts, store credit, and so forth.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ExternalPaymentTypeFilterInput",
          "description": "Input type used to specify filters on `ExternalPaymentType` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `ExternalPaymentTypeFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ExternalPaymentTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ExternalPaymentTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "ExternalPaymentTypeInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ExternalPaymentTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ExternalPaymentTypeInput",
          "description": "The type of external payment the seller received.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "BANK_TRANSFER",
              "description": "Paid using external bank transfer.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD",
              "description": "A credit or debit card that Square does not support.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHECK",
              "description": "Paid using a physical check.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CRYPTO",
              "description": "Paid using a crypto currency.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EMONEY",
              "description": "Paid using an E-money provider.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXTERNAL",
              "description": "A third-party application gathered this payment outside of Square.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FOOD_VOUCHER",
              "description": "Restaurant voucher provided by employers to employees to pay for meals.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER",
              "description": "A type not listed here.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER_GIFT_CARD",
              "description": "Paid using a non-Square gift card.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOCIAL",
              "description": "Paid using peer-to-peer payment applications.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_CASH",
              "description": "Paid using Square Cash App.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STORED_BALANCE",
              "description": "Use for house accounts, store credit, and so forth.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FeeDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of adjustments due to the Square processing fee.",
          "fields": [
            {
              "name": "paymentId",
              "description": "Unique ID for the payment related to the fee.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "FeeDetailsFilterInput",
          "description": "Input type used to specify filters on `FeeDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> Unique ID for the payment related to the fee.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "FilterValue",
          "description": "A filter to select resources based on an exact field value.For any given\nvalue, the value can only be in one property. Depending on the field, either\nall properties can be set or only a subset will be available.\n\nRefer to the documentation of the field.",
          "fields": null,
          "inputFields": [
            {
              "name": "all",
              "description": "A list of terms that must be present on the field of the resource.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "any",
              "description": "A list of terms where at least one of them must be present on the\nfield of the resource.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "none",
              "description": "A list of terms that must not be present on the field the resource",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FloatAggregatedValues",
          "description": "A return type used from aggregations to provided aggregated values over `Float` fields.",
          "fields": [
            {
              "name": "approximateAvg",
              "description": "The average (mean) of the field values within this grouping.\n\nThe computation of this value may introduce additional imprecision (on top of the\nnatural imprecision of floats) when it deals with intermediary values that are\noutside the `JsonSafeLong` range (-9,007,199,254,740,991 to 9,007,199,254,740,991).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "approximateDistinctValueCount",
              "description": "An approximation of the number of unique values for this field within this grouping.\n\nThe approximation uses the HyperLogLog++ algorithm from the [HyperLogLog in\nPractice](https://research.google.com/pubs/archive/40671.pdf)\npaper. The accuracy of the returned value varies based on the specific dataset, but\nit usually differs from the true distinct value count by less than 7%.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "approximateSum",
              "description": "The sum of the field values within this grouping.\n\nAs with all double-precision `Float` values, operations are subject to floating-point loss\nof precision, so the value may be approximate.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "exactMax",
              "description": "The maximum of the field values within this grouping.\n\nThe value will be \"exact\" in that the aggregation computation will return\nthe exact value of the largest float that has been indexed, without\nintroducing any new imprecision. However, floats by their nature are\nnaturally imprecise since they cannot precisely represent all real numbers.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "exactMin",
              "description": "The minimum of the field values within this grouping.\n\nThe value will be \"exact\" in that the aggregation computation will return\nthe exact value of the smallest float that has been indexed, without\nintroducing any new imprecision. However, floats by their nature are\nnaturally imprecise since they cannot precisely represent all real numbers.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "FloatFilterInput",
          "description": "Input type used to specify filters on `Float` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "FloatFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "gt",
              "description": "Matches records where the field value is greater than (>) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "gte",
              "description": "Matches records where the field value is greater than or equal to (>=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lt",
              "description": "Matches records where the field value is less than (<) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lte",
              "description": "Matches records where the field value is less than or equal to (<=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FloatFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "FreeProcessingDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of any credit to the merchant for the purposes of Free Processing.",
          "fields": [
            {
              "name": "paymentId",
              "description": "Unique ID for the payment related to free processing.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "FreeProcessingDetailsFilterInput",
          "description": "Input type used to specify filters on `FreeProcessingDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> Unique ID for the payment related to free processing.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GeoCoordinates",
          "description": "Latitude and longitude coordinates.",
          "fields": [
            {
              "name": "latitude",
              "description": "The latitude of the coordinate expressed in degrees.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "longitude",
              "description": "The longitude of the coordinate expressed in degrees.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GeoLocation",
          "description": "Geographic coordinates representing a location on the Earth's surface.",
          "fields": [
            {
              "name": "latitude",
              "description": "Angular distance north or south of the Earth's equator, measured in degrees from -90 to +90.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "longitude",
              "description": "Angular distance east or west of the Prime Meridian at Greenwich, UK, measured in degrees from -180 to +180.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "GeoLocationDistanceFilterInput",
          "description": "Input type used to specify distance filtering parameters on `GeoLocation` fields.",
          "fields": null,
          "inputFields": [
            {
              "name": "latitude",
              "description": "Angular distance north or south of the Earth's equator, measured in degrees from -90 to +90.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "longitude",
              "description": "Angular distance east or west of the Prime Meridian at Greenwich, UK, measured in degrees from -180 to +180.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "maxDistance",
              "description": "Maximum distance (of the provided `unit`) to consider \"near\" the location identified\nby `latitude` and `longitude`.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "unit",
              "description": "Determines the unit of the specified `maxDistance`.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DistanceUnitInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "GeoLocationFilterInput",
          "description": "Input type used to specify filters on `GeoLocation` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "GeoLocationFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "near",
              "description": "Matches records where the field's geographic location is within a specified distance from the\nlocation identified by `latitude` and `longitude`.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "GeoLocationDistanceFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "GeoLocationFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardActivity",
          "description": "Represents an action performed on a gift card that affects its state or balance.A gift card activity contains information about a specific activity type. For example, a `REDEEM` activity\nincludes a `redeem_activity_details` field that contains information about the redemption.\nPermissions: GIFTCARDS_READ",
          "fields": [
            {
              "name": "activateActivityDetails",
              "description": "Additional details about an `ACTIVATE` activity, which is used to activate a gift card with \nan initial balance.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GiftCardActivityActivate",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "adjustDecrementActivityDetails",
              "description": "Additional details about an `ADJUST_DECREMENT` activity, which is used to deduct money from a gift \ncard outside of a typical `REDEEM` activity flow.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GiftCardActivityAdjustDecrement",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "adjustIncrementActivityDetails",
              "description": "Additional details about an `ADJUST_INCREMENT` activity, which is used to add money to a gift card \noutside of a typical `ACTIVATE`, `LOAD`, or `REFUND` activity flow.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GiftCardActivityAdjustIncrement",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "blockActivityDetails",
              "description": "Additional details about a `BLOCK` activity, which Square uses to temporarily block a gift card.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GiftCardActivityBlock",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clearBalanceActivityDetails",
              "description": "Additional details about a `CLEAR_BALANCE` activity, which is used to set the balance of a gift card to zero.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GiftCardActivityClearBalance",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The timestamp when the gift card activity was created, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deactivateActivityDetails",
              "description": "Additional details about a `DEACTIVATE` activity, which is used to deactivate a gift card.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GiftCardActivityDeactivate",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "giftCard",
              "description": "The gift card ID. When creating a gift card activity, `gift_card_id` is not required if \n`gift_card_gan` is specified.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "SquareGiftCard",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "giftCardBalanceMoney",
              "description": "The final balance on the gift card after the action is completed.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "giftCardGan",
              "description": "The gift card account number (GAN). When creating a gift card activity, `gift_card_gan` \nis not required if `gift_card_id` is specified.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The Square-assigned ID of the gift card activity.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "importActivityDetails",
              "description": "Additional details about an `IMPORT` activity, which Square uses to import a third-party \ngift card with a balance.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GiftCardActivityImport",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "importReversalActivityDetails",
              "description": "Additional details about an `IMPORT_REVERSAL` activity, which Square uses to reverse the \nimport of a third-party gift card.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GiftCardActivityImportReversal",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loadActivityDetails",
              "description": "Additional details about a `LOAD` activity, which is used to reload money onto a gift card.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GiftCardActivityLoad",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the business location where the activity occurred.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "redeemActivityDetails",
              "description": "Additional details about a `REDEEM` activity, which is used to redeem a gift card for a purchase.\n  \nFor applications that process payments using the Square Payments API, Square creates a `REDEEM` activity that \nupdates the gift card balance after the corresponding [CreatePayment](api-endpoint:Payments-CreatePayment) \nrequest is completed. Applications that use a custom payment processing system must call \n[CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity) to create the `REDEEM` activity.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GiftCardActivityRedeem",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "refundActivityDetails",
              "description": "Additional details about a `REFUND` activity, which is used to add money to a gift card when \nrefunding a payment.\n  \nFor applications that refund payments to a gift card using the Square Refunds API, Square automatically\ncreates a `REFUND` activity that updates the gift card balance after a [RefundPayment](api-endpoint:Refunds-RefundPayment)\nrequest is completed. Applications that use a custom processing system must call\n[CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity) to create the `REFUND` activity.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GiftCardActivityRefund",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "transferBalanceFromActivityDetails",
              "description": "Additional details about a `TRANSFER_BALANCE_FROM` activity, which Square uses to deduct money from\na gift as the result of a transfer to another gift card.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GiftCardActivityTransferBalanceFrom",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "transferBalanceToActivityDetails",
              "description": "Additional details about a `TRANSFER_BALANCE_TO` activity, which Square uses to add money to\na gift card as the result of a transfer from another gift card.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GiftCardActivityTransferBalanceTo",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of gift card activity.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "GiftCardActivityType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "unblockActivityDetails",
              "description": "Additional details about an `UNBLOCK` activity, which Square uses to unblock a gift card.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GiftCardActivityUnblock",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "unlinkedActivityRefundActivityDetails",
              "description": "Additional details about an `UNLINKED_ACTIVITY_REFUND` activity. This activity is used to add money \nto a gift card when refunding a payment that was processed using a custom payment processing system\nand not linked to the gift card.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GiftCardActivityUnlinkedActivityRefund",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardActivityActivate",
          "description": "Represents details about an `ACTIVATE` gift card activity type.\nPermissions: GIFTCARDS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The amount added to the gift card. This value is a positive integer.\n  \nApplications that use a custom order processing system must specify this amount in the \n[CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity) request.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "buyerPaymentInstrumentIds",
              "description": "The payment instrument IDs used to process the gift card purchase, such as a credit card ID \nor bank account ID. \n  \nApplications that use a custom order processing system must specify payment instrument IDs in \nthe [CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity) request.\nSquare uses this information to perform compliance checks. \n  \nFor applications that use the Square Orders API to process payments, Square has the necessary \ninstrument IDs to perform compliance checks.\n  \nEach buyer payment instrument ID can contain a maximum of 255 characters.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lineItemUid",
              "description": "The UID of the `GIFT_CARD` line item in the order that represents the gift card purchase.\n  \nApplications that use the Square Orders API to process orders must specify the line item UID\nin the [CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity) request.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "order",
              "description": "The ID of the order that contains the `GIFT_CARD` line item.\n  \nApplications that use the Square Orders API to process orders must specify the order ID\n[CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity) request.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Order",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "referenceId",
              "description": "A client-specified ID that associates the gift card activity with an entity in another system. \n  \nApplications that use a custom order processing system can use this field to track information \nrelated to an order or payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardActivityAdjustDecrement",
          "description": "Represents details about an `ADJUST_DECREMENT` gift card activity type.\nPermissions: GIFTCARDS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The amount deducted from the gift card balance. This value is a positive integer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reason",
              "description": "The reason the gift card balance was adjusted.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "GiftCardActivityAdjustDecrementReason",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "GiftCardActivityAdjustDecrementReason",
          "description": "Indicates the reason for deducting money from a gift card.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "BALANCE_ACCIDENTALLY_INCREASED",
              "description": "The balance was decreased to reverse an unintentional balance increase.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PURCHASE_WAS_REFUNDED",
              "description": "The balance was decreased because the order used to purchase or reload the\ngift card was refunded.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUPPORT_ISSUE",
              "description": "The balance was decreased to accommodate support issues.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUSPICIOUS_ACTIVITY",
              "description": "The balance was decreased because the seller detected suspicious or fraudulent activity\non the gift card.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardActivityAdjustIncrement",
          "description": "Represents details about an `ADJUST_INCREMENT` gift card activity type.\nPermissions: GIFTCARDS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The amount added to the gift card balance. This value is a positive integer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reason",
              "description": "The reason the gift card balance was adjusted.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "GiftCardActivityAdjustIncrementReason",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "GiftCardActivityAdjustIncrementReason",
          "description": "Indicates the reason for adding money to a gift card.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "COMPLIMENTARY",
              "description": "The seller gifted a complimentary gift card balance increase.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUPPORT_ISSUE",
              "description": "The seller increased the gift card balance \nto accommodate support issues.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TRANSACTION_VOIDED",
              "description": "The transaction is voided.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardActivityBlock",
          "description": "Represents details about a `BLOCK` gift card activity type.\nPermissions: GIFTCARDS_READ",
          "fields": [
            {
              "name": "reason",
              "description": "The reason the gift card was blocked.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "GiftCardActivityBlockReason",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "GiftCardActivityBlockReason",
          "description": "Indicates the reason for blocking a gift card.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CHARGEBACK_BLOCK",
              "description": "The gift card is blocked because the buyer initiated a chargeback on the gift card purchase.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardActivityClearBalance",
          "description": "Represents details about a `CLEAR_BALANCE` gift card activity type.\nPermissions: GIFTCARDS_READ",
          "fields": [
            {
              "name": "reason",
              "description": "The reason the gift card balance was cleared.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "GiftCardActivityClearBalanceReason",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "GiftCardActivityClearBalanceReason",
          "description": "Indicates the reason for clearing the balance of a gift card.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "REUSE_GIFTCARD",
              "description": "The seller cleared the balance to reuse the gift card.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUSPICIOUS_ACTIVITY",
              "description": "The seller suspects suspicious activity.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_REASON",
              "description": "The gift card balance was cleared for an unknown reason.\n  \nThis reason is read-only and cannot be used to create a `CLEAR_BALANCE` activity using the Gift Card Activities API.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardActivityConnection",
          "description": "A list of GiftCardActivities.\nPermissions: GIFTCARDS_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of Gift Card Activity.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "GiftCardActivity",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardActivityDeactivate",
          "description": "Represents details about a `DEACTIVATE` gift card activity type.\nPermissions: GIFTCARDS_READ",
          "fields": [
            {
              "name": "reason",
              "description": "The reason the gift card was deactivated.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "GiftCardActivityDeactivateReason",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "GiftCardActivityDeactivateReason",
          "description": "Indicates the reason for deactivating a gift card.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CHARGEBACK_DEACTIVATE",
              "description": "A chargeback on the gift card purchase (or the gift card load) was ruled in favor of the buyer.\n  \nThis reason is read-only and cannot be used to create a `DEACTIVATE` activity using the Gift Card Activities API.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUSPICIOUS_ACTIVITY",
              "description": "The seller suspects suspicious activity.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_REASON",
              "description": "The gift card was deactivated for an unknown reason.\n  \nThis reason is read-only and cannot be used to create a `DEACTIVATE` activity using the Gift Card Activities API.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "GiftCardActivityFilter",
          "description": "Input type used to specify filters on `GiftCardActivity` fields.\nWill be completely ignored if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "beginTime",
              "description": "The timestamp for the beginning of the reporting period, in RFC 3339 format.\nThis start time is inclusive. The default value is the current time minus one year.\n\nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n\nUTC: 2020-01-26T02:25:34Z\n\nPacific Standard Time with UTC offset: 2020-01-25T18:25:34-08:00",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "endTime",
              "description": "The timestamp for the end of the reporting period, in RFC 3339 format.\nThis end time is inclusive. The default value is the current time.\n\nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n\nUTC: 2020-01-26T02:25:34Z\n\nPacific Standard Time with UTC offset: 2020-01-25T18:25:34-08:00",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "giftCardId",
              "description": "Used to filter on the `giftCardId` field:\nWill be ignored if `null` or an empty object is passed.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "locationId",
              "description": "Used to filter on the `locationId` field:\nWill be ignored if `null` or an empty object is passed.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "Used to filter on the `merchantId` field:\n> The ID of the merchant associated with the giftCard.\nWill be ignored if `null` or an empty object is passed.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "type",
              "description": "Used to filter on the `type` field:\n> The gift cad type.\nWill be ignored if `null` or an empty object is passed.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "GiftCardActivityTypeFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardActivityImport",
          "description": "Represents details about an `IMPORT` gift card activity type.This activity type is used when Square imports a third-party gift card, in which case the \n`gan_source` of the gift card is set to `OTHER`.\nPermissions: GIFTCARDS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The balance amount on the imported gift card.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardActivityImportReversal",
          "description": "Represents details about an `IMPORT_REVERSAL` gift card activity type.\nPermissions: GIFTCARDS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The amount of money cleared from the third-party gift card when \nthe import was reversed.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardActivityLoad",
          "description": "Represents details about a `LOAD` gift card activity type.\nPermissions: GIFTCARDS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The amount added to the gift card. This value is a positive integer.\n  \nApplications that use a custom order processing system must specify this amount in the \n[CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity) request.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "buyerPaymentInstrumentIds",
              "description": "The payment instrument IDs used to process the order for the additional funds, such as a credit card ID \nor bank account ID. \n  \nApplications that use a custom order processing system must specify payment instrument IDs in \nthe [CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity) request.\nSquare uses this information to perform compliance checks. \n  \nFor applications that use the Square Orders API to process payments, Square has the necessary \ninstrument IDs to perform compliance checks.\n  \nEach buyer payment instrument ID can contain a maximum of 255 characters.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lineItemUid",
              "description": "The UID of the `GIFT_CARD` line item in the order that represents the additional funds for the gift card.\n  \nApplications that use the Square Orders API to process orders must specify the line item UID\nin the [CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity) request.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "order",
              "description": "The ID of the order that contains the `GIFT_CARD` line item.\n  \nApplications that use the Square Orders API to process orders must specify the order ID in the \n[CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity) request.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Order",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "referenceId",
              "description": "A client-specified ID that associates the gift card activity with an entity in another system. \n  \nApplications that use a custom order processing system can use this field to track information related to \nan order or payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardActivityRedeem",
          "description": "Represents details about a `REDEEM` gift card activity type.\nPermissions: GIFTCARDS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The amount deducted from the gift card for the redemption. This value is a positive integer.\n  \nApplications that use a custom payment processing system must specify this amount in the \n[CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity) request.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payment",
              "description": "The ID of the payment that represents the gift card redemption. Square populates this field \nif the payment was processed by Square.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Payment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "referenceId",
              "description": "A client-specified ID that associates the gift card activity with an entity in another system. \n  \nApplications that use a custom payment processing system can use this field to track information\nrelated to an order or payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "The status of the gift card redemption. Gift cards redeemed from Square Point of Sale or the \nSquare Seller Dashboard use a two-state process: `PENDING` \nto `COMPLETED` or `PENDING` to  `CANCELED`. Gift cards redeemed using the Gift Card Activities API \nalways have a `COMPLETED` status.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "GiftCardActivityRedeemStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "GiftCardActivityRedeemStatus",
          "description": "Indicates the status of a gift card redemption.This status is relevant only for\nredemptions made from Square products (such as Square Point of Sale) because Square products use a \ntwo-state process. Gift cards redeemed using the Gift Card Activities API always have a `COMPLETED` status.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CANCELED",
              "description": "The gift card redemption is canceled. A redemption is canceled if the authorization \non the gift card is voided.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COMPLETED",
              "description": "The gift card redemption is completed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PENDING",
              "description": "The gift card redemption is pending. `PENDING` is a temporary status that applies when a \ngift card is redeemed from Square Point of Sale or another Square product. A `PENDING` status is updated to \n`COMPLETED` if the payment is captured or `CANCELED` if the authorization is voided.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardActivityRefund",
          "description": "Represents details about a `REFUND` gift card activity type.\nPermissions: GIFTCARDS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The amount added to the gift card for the refund. This value is a positive integer.\n  \nThis field is required when creating a `REFUND` activity. The amount can represent a full or partial refund.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payment",
              "description": "The ID of the refunded payment. Square populates this field if the refund is for a \npayment processed by Square. This field matches the `payment_id` in the corresponding\n[RefundPayment](api-endpoint:Refunds-RefundPayment) request.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Payment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "redeemActivityId",
              "description": "The ID of the refunded `REDEEM` gift card activity. Square populates this field if the \n`payment_id` in the corresponding [RefundPayment](api-endpoint:Refunds-RefundPayment) request \nrepresents a gift card redemption.\n  \nFor applications that use a custom payment processing system, this field is required when creating\na `REFUND` activity. The provided `REDEEM` activity ID must be linked to the same gift card.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "referenceId",
              "description": "A client-specified ID that associates the gift card activity with an entity in another system.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardActivityTransferBalanceFrom",
          "description": "Represents details about a `TRANSFER_BALANCE_FROM` gift card activity type.\nPermissions: GIFTCARDS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The amount deducted from the gift card for the transfer. This value is a positive integer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "transferToGiftCardId",
              "description": "The ID of the gift card to which the specified amount was transferred.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardActivityTransferBalanceTo",
          "description": "Represents details about a `TRANSFER_BALANCE_TO` gift card activity type.\nPermissions: GIFTCARDS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The amount added to the gift card balance for the transfer. This value is a positive integer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "giftCard",
              "description": "The ID of the gift card from which the specified amount was transferred.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "SquareGiftCard",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "GiftCardActivityType",
          "description": "Indicates the type of gift card activity.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ACTIVATE",
              "description": "Activated a gift card with a balance. When a gift card is activated, Square changes \nthe gift card state from `PENDING` to `ACTIVE`. A gift card must be in the `ACTIVE` state \nto be used for other balance-changing activities.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ADJUST_DECREMENT",
              "description": "Deducted money from a gift card outside of a typical `REDEEM` activity flow.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ADJUST_INCREMENT",
              "description": "Added money to a gift card outside of a typical `ACTIVATE`, `LOAD`, or `REFUND` activity flow.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BLOCK",
              "description": "Temporarily blocked a gift card from balance-changing activities. `BLOCK` activities \nare managed by Square and cannot be created using the Gift Card Activities API.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLEAR_BALANCE",
              "description": "Set the balance of a gift card to zero.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEACTIVATE",
              "description": "Permanently blocked a gift card from balance-changing activities.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IMPORT",
              "description": "Imported a third-party gift card with a balance. `IMPORT` activities are managed \nby Square and cannot be created using the Gift Card Activities API.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IMPORT_REVERSAL",
              "description": "Reversed the import of a third-party gift card, which sets the gift card state to \n`PENDING` and clears the balance. `IMPORT_REVERSAL` activities are managed by Square and \ncannot be created using the Gift Card Activities API.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOAD",
              "description": "Loaded a gift card with additional funds.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REDEEM",
              "description": "Redeemed a gift card for a purchase.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REFUND",
              "description": "Added money to a gift card from a refunded transaction. A `REFUND` activity might be linked to \na Square payment, depending on how the payment and refund are processed. For example:\n- A payment processed by Square can be refunded to a `PENDING` or `ACTIVE` gift card using the Square\nSeller Dashboard, Square Point of Sale, or Refunds API.\n- A payment processed using a custom processing system can be refunded to the same gift card.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TRANSFER_BALANCE_FROM",
              "description": "Deducted money from a gift card as the result of a transfer to the balance of another gift card.\n`TRANSFER_BALANCE_FROM` activities are managed by Square and cannot be created using the Gift Card Activities API.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TRANSFER_BALANCE_TO",
              "description": "Added money to a gift card as the result of a transfer from the balance of another gift card.\n`TRANSFER_BALANCE_TO` activities are managed by Square and cannot be created using the Gift Card Activities API.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNBLOCK",
              "description": "Unblocked a gift card, which enables it to resume balance-changing activities. `UNBLOCK` \nactivities are managed by Square and cannot be created using the Gift Card Activities API.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNLINKED_ACTIVITY_REFUND",
              "description": "Added money to a gift card from a refunded transaction that was processed using a custom payment\nprocessing system and not linked to the gift card.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "GiftCardActivityTypeFilter",
          "description": "GiftCardActivityTypeFilter is used for filtering a query with GiftCardActivityType",
          "fields": null,
          "inputFields": [
            {
              "name": "equalToAnyOf",
              "description": "Used for filtering a query with GiftCardActivity",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "GiftCardActivityTypeInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "GiftCardActivityTypeInput",
          "description": "Indicates the type of gift card activity.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ACTIVATE",
              "description": "Activated a gift card with a balance. When a gift card is activated, Square changes\nthe gift card state from `PENDING` to `ACTIVE`. A gift card must be in the `ACTIVE` state\nto be used for other balance-changing activities.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ADJUST_DECREMENT",
              "description": "Deducted money from a gift card outside of a typical `REDEEM` activity flow.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ADJUST_INCREMENT",
              "description": "Added money to a gift card outside of a typical `ACTIVATE`, `LOAD`, or `REFUND` activity flow.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BLOCK",
              "description": "Temporarily blocked a gift card from balance-changing activities. `BLOCK` activities\nare managed by Square and cannot be created using the Gift Card Activities API.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLEAR_BALANCE",
              "description": "Set the balance of a gift card to zero.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEACTIVATE",
              "description": "Permanently blocked a gift card from balance-changing activities.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IMPORT",
              "description": "Imported a third-party gift card with a balance. `IMPORT` activities are managed\nby Square and cannot be created using the Gift Card Activities API.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IMPORT_REVERSAL",
              "description": "Reversed the import of a third-party gift card, which sets the gift card state to\n`PENDING` and clears the balance. `IMPORT_REVERSAL` activities are managed by Square and\ncannot be created using the Gift Card Activities API.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOAD",
              "description": "Loaded a gift card with additional funds.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REDEEM",
              "description": "Redeemed a gift card for a purchase.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REFUND",
              "description": "Added money to a gift card from a refunded transaction. A `REFUND` activity might be linked to\na Square payment, depending on how the payment and refund are processed. For example:\n- A gift card payment processed by Square can be refunded to the same gift card using Square Point of Sale,\nthe Square Seller Dashboard, or the Refunds API.\n- A cross-tender payment processed by Square can be refunded to a gift card using Square Point of Sale or the\nSquare Seller Dashboard. The payment source might be a credit card or different gift card.\n- A payment processed using a custom payment processing system can be refunded to the same gift card.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TRANSFER_BALANCE_FROM",
              "description": "Deducted money from a gift card as the result of a transfer to the balance of another gift card.\n`TRANSFER_BALANCE_FROM` activities are managed by Square and cannot be created using the Gift Card Activities API.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TRANSFER_BALANCE_TO",
              "description": "Added money to a gift card as the result of a transfer from the balance of another gift card.\n`TRANSFER_BALANCE_TO` activities are managed by Square and cannot be created using the Gift Card Activities API.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNBLOCK",
              "description": "Unblocked a gift card, which enables it to resume balance-changing activities. `UNBLOCK`\nactivities are managed by Square and cannot be created using the Gift Card Activities API.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNLINKED_ACTIVITY_REFUND",
              "description": "Added money to a gift card from a refunded transaction that was processed using a custom payment\nprocessing system and not linked to the gift card.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardActivityUnblock",
          "description": "Represents details about an `UNBLOCK` gift card activity type.\nPermissions: GIFTCARDS_READ",
          "fields": [
            {
              "name": "reason",
              "description": "The reason the gift card was unblocked.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "GiftCardActivityUnblockReason",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "GiftCardActivityUnblockReason",
          "description": "Indicates the reason for unblocking a gift card.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CHARGEBACK_UNBLOCK",
              "description": "The gift card is unblocked because a chargeback was ruled in favor of the seller.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardActivityUnlinkedActivityRefund",
          "description": "Represents details about an `UNLINKED_ACTIVITY_REFUND` gift card activity type.\nPermissions: GIFTCARDS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The amount added to the gift card for the refund. This value is a positive integer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payment",
              "description": "The ID of the refunded payment. This field is not used starting in Square version 2022-06-16.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Payment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "referenceId",
              "description": "A client-specified ID that associates the gift card activity with an entity in another system.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "GiftCardFilter",
          "description": "Input type used to specify filters on `SquareGiftCard` fields. The individual fields will determine\nhow the Gift Card is retrieved. E.g. If id is pass in it is mutually exclusive with retrieving using\nGAN or nonce or a any combination of customerId, state, and type together.\nWill be completely ignored if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "customerId",
              "description": "Used to filter on the `customerId` field:\n> The id of the customer profile to whom this gift card is linked.\nWill be ignored if `null` or an empty object is passed.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "gan",
              "description": "The gift card account number (GAN) of the gift card to retrieve. The maximum length of a GAN is\n255 digits to account for third-party GANs that have been imported. Square-issued gift cards have 16-digit GANs.\nMin Length\n1\nMax Length\n255",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "The ID of the gift card to retrieve.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "Used to filter on the `merchantId` field:\n> The ID of the merchant associated with the giftCard.\nWill be ignored if `null` or an empty object is passed.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "nonce",
              "description": "The payment token of the gift card to retrieve. Payment tokens are generated by the Web Payments SDK or In-App Payments SDK.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "state",
              "description": "Used to filter on the `state` field:\n> The current gift card state.\nWill be ignored if `null` or an empty object is passed.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "GiftCardStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "type",
              "description": "Used to filter on the `type` field:\n> The gift cad type.\nWill be ignored if `null` or an empty object is passed.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "GiftCardTypeFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "GiftCardGANSource",
          "description": "Indicates the source that generated the gift card \naccount number (GAN).",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "OTHER",
              "description": "The GAN is provided by a non-Square system. For more information, see \n[Custom GANs](https://developer.squareup.com/docs/gift-cards/using-gift-cards-api#custom-gans) or \n[Third-party gift cards](https://developer.squareup.com/docs/gift-cards/using-gift-cards-api#third-party-gift-cards).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE",
              "description": "The GAN is generated by Square.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardLoadFeeDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of the fee collected during the sale or reload of a gift card. This fee,\nwhich is a portion of the amount loaded on the gift card, is deducted from the\nmerchant's payment balance. The fee is recorded as a new payout entry, not part\nof the CHARGE payout entry.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment associated with this activity.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "GiftCardLoadFeeDetailsFilterInput",
          "description": "Input type used to specify filters on `GiftCardLoadFeeDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment associated with this activity.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardLoadFeeRefundDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of a refund for the fee charged during the sale or reload of a gift card.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment associated with this activity.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "GiftCardLoadFeeRefundDetailsFilterInput",
          "description": "Input type used to specify filters on `GiftCardLoadFeeRefundDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment associated with this activity.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardPoolTransferDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of a transfer of gift card funds to a central gift card pool account. In\nfranchises, when gift cards are loaded or reloaded at any location, the money\ntransfers to the franchisor's account.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment associated with this activity.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "GiftCardPoolTransferDetailsFilterInput",
          "description": "Input type used to specify filters on `GiftCardPoolTransferDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment associated with this activity.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "GiftCardPoolTransferReversedDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of a reversal of transfer of gift card funds from a central gift card\npool account. In franchises, when gift cards are loaded or reloaded at any\nlocation, the money transfers to the franchisor's account.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment associated with this activity.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "GiftCardPoolTransferReversedDetailsFilterInput",
          "description": "Input type used to specify filters on `GiftCardPoolTransferReversedDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment associated with this activity.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "GiftCardStatus",
          "description": "Indicates the gift card state.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ACTIVE",
              "description": "The gift card is active and can be used as a payment source.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BLOCKED",
              "description": "Any activity that changes the gift card balance is temporarily forbidden.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEACTIVATED",
              "description": "Any activity that changes the gift card balance is permanently forbidden.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PENDING",
              "description": "The gift card is pending activation.\nThis is the initial state when a gift card is created. Typically, you'll call\n[CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity) to create an\n`ACTIVATE` activity that activates the gift card with an initial balance before first use.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "GiftCardStatusFilter",
          "description": "GiftCardStatusFilter is used for filtering a query with GiftCardStatus",
          "fields": null,
          "inputFields": [
            {
              "name": "equalToAnyOf",
              "description": "Used for filtering a query with GiftCardStatus",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "GiftCardStatusInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "GiftCardStatusInput",
          "description": "Indicates the gift card state.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ACTIVE",
              "description": "The gift card is active and can be used as a payment source.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BLOCKED",
              "description": "Any activity that changes the gift card balance is temporarily forbidden.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEACTIVATED",
              "description": "Any activity that changes the gift card balance is permanently forbidden.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PENDING",
              "description": "The gift card is pending activation.\nThis is the initial state when a gift card is created. You must activate the gift card\nbefore it can be used.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "GiftCardType",
          "description": "Indicates the gift card type.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DIGITAL",
              "description": "A digital gift card.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PHYSICAL",
              "description": "A plastic gift card.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "GiftCardTypeFilter",
          "description": "GiftCardTypeFilter is used for filtering a query with GiftCardType",
          "fields": null,
          "inputFields": [
            {
              "name": "equalToAnyOf",
              "description": "Used for filtering a query with GiftCard",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "GiftCardTypeInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "GiftCardTypeInput",
          "description": "Indicates the gift card type.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DIGITAL",
              "description": "A digital gift card.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PHYSICAL",
              "description": "A plastic gift card.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "HexColor",
          "description": "\"A hex color code. For example, \"#FFFFFF\". ",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "HoldAdjustmentDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of any adjustment related to the holding or releasing of a payment.",
          "fields": [
            {
              "name": "paymentId",
              "description": "Unique ID for the payment related to the hold adjustment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "HoldAdjustmentDetailsFilterInput",
          "description": "Input type used to specify filters on `HoldAdjustmentDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> Unique ID for the payment related to the hold adjustment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "iCalendarEvent",
          "description": "An iCalendar (RFC5545) event, which specifies the name, timing, duration and recurrence.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "IDFilterInput",
          "description": "Input type used to specify filters on `ID` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "IDFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "IDListElementFilterInput",
          "description": "Input type used to specify filters on elements of a `[ID]` field.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "IDListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "IDListFilterInput",
          "description": "Input type used to specify filters on `[ID]` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `IDListFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "IDListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "IDListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anySatisfy",
              "description": "Matches records where any of the list elements match the provided sub-filter.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDListElementFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "IntAggregatedValues",
          "description": "A return type used from aggregations to provided aggregated values over `Int` fields.",
          "fields": [
            {
              "name": "approximateAvg",
              "description": "The average (mean) of the field values within this grouping.\n\nNote that the returned value is approximate. Imprecision can be introduced by the computation if\nany intermediary values fall outside the `JsonSafeLong` range (-9,007,199,254,740,991\nto 9,007,199,254,740,991).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "approximateDistinctValueCount",
              "description": "An approximation of the number of unique values for this field within this grouping.\n\nThe approximation uses the HyperLogLog++ algorithm from the [HyperLogLog in\nPractice](https://research.google.com/pubs/archive/40671.pdf)\npaper. The accuracy of the returned value varies based on the specific dataset, but\nit usually differs from the true distinct value count by less than 7%.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "approximateSum",
              "description": "The (approximate) sum of the field values within this grouping.\n\nSums of large `Int` values can result in overflow, where the exact sum cannot\nfit in a `JsonSafeLong` return value. This field, as a double-precision `Float`, can\nrepresent larger sums, but the value may only be approximate.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "exactMax",
              "description": "The maximum of the field values within this grouping.\n\nSo long as the grouping contains at least one non-null value for the\nunderlying indexed field, this will return an exact non-null value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "exactMin",
              "description": "The minimum of the field values within this grouping.\n\nSo long as the grouping contains at least one non-null value for the\nunderlying indexed field, this will return an exact non-null value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "exactSum",
              "description": "The exact sum of the field values within this grouping, if it fits in a `JsonSafeLong`.\n\nSums of large `Int` values can result in overflow, where the exact sum cannot\nfit in a `JsonSafeLong`. In that case, `null` will be returned, and `approximateSum`\ncan be used to get an approximate value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "InternalScannerComponentDetails",
          "description": "Structured data for `InternalScanner` built-in component in Handheld devices, set for Components of type `INTERNAL_SCANNER`.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "enabled",
              "description": "Indicates whether the internal barcode scanner is enabled from the hardware\nsettings. If true, the scanner is enabled. If false, the scanner is disabled\nand cannot be used.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "IntFilterInput",
          "description": "Input type used to specify filters on `Int` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "IntFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "gt",
              "description": "Matches records where the field value is greater than (>) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "gte",
              "description": "Matches records where the field value is greater than or equal to (>=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lt",
              "description": "Matches records where the field value is less than (<) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lte",
              "description": "Matches records where the field value is less than or equal to (<=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "InventoryAdjustment",
          "description": "Represents a change in state or quantity of product inventory at a\nparticular time and location.\nPermissions: INVENTORY_READ",
          "fields": [
            {
              "name": "id",
              "description": "A unique ID generated by Square",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "referenceId",
              "description": "An optional ID provided by the application to tie the InventoryChange to an external system.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fromState",
              "description": "The inventory state of the related quantity\nof items before the adjustment.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "InventoryState",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "toState",
              "description": "The inventory state of the related quantity\nof items after the adjustment.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "InventoryState",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "quantity",
              "description": "The number of items affected as a decimal string. Can support up to 5 digits after the decimal point.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalPriceMoney",
              "description": "The total price paid for goods associated with the\nadjustment. Present if and only if `to_state` is `SOLD`. Always\nnon-negative.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "occurredAt",
              "description": "A client-generated RFC 3339-formatted timestamp that indicates when the physical count was examined.  For physical count updates, the occurred_at timestamp cannot be older than 24 hours or in the future relative to the time of the request. Examples for January 25th, 2020 6:25:34pm Pacific Standard Time: UTC: 2020-01-26T02:25:34Z Pacific Standard Time with UTC offset: 2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "An RFC 3339-formatted timestamp that indicates when the physical count is received. Examples for January 25th, 2020 6:25:34pm Pacific Standard Time: UTC: 2020-01-26T02:25:34Z Pacific Standard Time with UTC offset: 2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "source",
              "description": "Information about the application with which the physical count is submitted.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "SourceApplication",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "transactionId",
              "description": "The Square-generated ID of the Transaction that\ncaused the adjustment. Only relevant for payment-related state\ntransitions.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "refundId",
              "description": "The Square-generated ID of the Refund that\ncaused the adjustment. Only relevant for refund-related state\ntransitions.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "purchaseOrderId",
              "description": "The Square-generated ID of the purchase order that caused the\nadjustment. Only relevant for state transitions from the Square for Retail\napp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "goodsReceiptId",
              "description": "The Square-generated ID of the goods receipt that caused the\nadjustment. Only relevant for state transitions from the Square for Retail\napp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "adjustmentGroup",
              "description": "An adjustment group bundling the related adjustments of item variations through stock conversions in a single inventory event.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "InventoryAdjustmentGroup",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The Square-generated ID of the Location where the related\nquantity of items is being tracked.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalog",
              "description": "The CatalogObject being tracked.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "CatalogObject",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Indicates how the inventory change is applied. See\n[InventoryChangeType](entity:InventoryChangeType) for all possible values.\nSee [InventoryChangeType](#type-inventorychangetype) for possible values",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "InventoryChangeType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "employee",
              "description": "The Employee responsible for",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Employee",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMember",
              "description": "The Team Member responsible for",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TeamMember",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "InventoryChange",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "InventoryAdjustmentGroup",
          "description": "Permissions: INVENTORY_READ",
          "fields": [
            {
              "name": "id",
              "description": "A unique ID generated by Square for the\n`InventoryAdjustmentGroup`.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "rootAdjustmentId",
              "description": "The inventory adjustment of the composed variation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fromState",
              "description": "Representative `from_state` for adjustments within the group. For example, for a group adjustment from `IN_STOCK` to `SOLD`,\nthere can be two component adjustments in the group: one from `IN_STOCK`to `COMPOSED` and the other one from `COMPOSED` to `SOLD`.\nHere, the representative `from_state` for the `InventoryAdjustmentGroup` is `IN_STOCK`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "InventoryState",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "toState",
              "description": "Representative `to_state` for adjustments within group. For example, for a group adjustment from `IN_STOCK` to `SOLD`,\nthe two component adjustments in the group can be from `IN_STOCK` to `COMPOSED` and from `COMPOSED` to `SOLD`.\nHere, the representative `to_state` of the `InventoryAdjustmentGroup` is `SOLD`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "InventoryState",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "InventoryAlert",
          "description": "Inventory alert definition's associated values.\n\nPermissions:ITEMS_READ",
          "fields": [
            {
              "name": "threshold",
              "description": "If the inventory quantity for the variation is less than or equal to this value and type is LOW_QUANTITY, the variation displays an alert in the merchant dashboard.\nThis value is always an integer.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Indicates whether the item variation displays an alert when its inventory quantity is less than or equal to its threshold.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "InventoryAlertType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "InventoryAlertType",
          "description": "Indicates whether Square should alert the merchant when the inventory quantity of a CatalogItemVariation is low.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "NONE",
              "description": "The variation does not display an alert.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOW_QUANTITY",
              "description": "The variation generates an alert when its quantity is low.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INTERFACE",
          "name": "InventoryChange",
          "description": "Represents a single physical count, inventory, adjustment, or transfer\nthat is part of the history of inventory changes for a particular\n[CatalogObject](entity:CatalogObject) instance.\nPermissions:INVENTORY_READ",
          "fields": [
            {
              "name": "id",
              "description": "A unique ID generated by Square",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Indicates how the inventory change is applied. See\n[InventoryChangeType](entity:InventoryChangeType) for all possible values.\nSee [InventoryChangeType](#type-inventorychangetype) for possible values",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "InventoryChangeType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalog",
              "description": "The CatalogObject being tracked.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "CatalogObject",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "An RFC 3339-formatted timestamp that indicates when the physical count is received. Examples for January 25th, 2020 6:25:34pm Pacific Standard Time: UTC: 2020-01-26T02:25:34Z Pacific Standard Time with UTC offset: 2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "referenceId",
              "description": "An optional ID provided by the application to tie the InventoryChange to an external system.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "employee",
              "description": "The Employee responsible for",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Employee",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMember",
              "description": "The Team Member responsible for",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TeamMember",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "occurredAt",
              "description": "A client-generated RFC 3339-formatted timestamp that indicates when the physical count was examined.  For physical count updates, the occurred_at timestamp cannot be older than 24 hours or in the future relative to the time of the request. Examples for January 25th, 2020 6:25:34pm Pacific Standard Time: UTC: 2020-01-26T02:25:34Z Pacific Standard Time with UTC offset: 2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "source",
              "description": "Information about the application with which the physical count is submitted.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "SourceApplication",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "quantity",
              "description": "The number of items affected as a decimal string. Can support up to 5 digits after the decimal point.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "InventoryAdjustment",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "InventoryPhysicalCount",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "InventoryTransfer",
              "ofType": null
            }
          ]
        },
        {
          "kind": "OBJECT",
          "name": "InventoryChangeConnection",
          "description": "Contains information of InventoryChange result.\n\nPermissions:INVENTORY_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of InventoryChange",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INTERFACE",
                      "name": "InventoryChange",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "InventoryChangeFilter",
          "description": "Used for filtering query inventoryChanges.",
          "fields": null,
          "inputFields": [
            {
              "name": "merchantId",
              "description": "The merchant IDs associated with the InventoryChanges.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "catalog",
              "description": "The object IDs of any type of catalog objects to be retrieved. If the value is nil, it will return all catalog objects.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "location",
              "description": "The filter to return results by Location ID.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAfter",
              "description": "The filter to return results with their calculated_at value after the given time as specified in an RFC 3339 timestamp. The default value is the UNIX epoch of (1970-01-01T00:00:00Z).\n\nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n\nUTC: 2020-01-26T02:25:34Z\n\nPacific Standard Time with UTC offset: 2020-01-25T18:25:34-08:00",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedBefore",
              "description": "The filter to return results with their created_at or calculated_at value strictly before the given time as specified in an RFC 3339 timestamp. The default value is the UNIX epoch of (1970-01-01T00:00:00Z).\n\nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n\nUTC: 2020-01-26T02:25:34Z\n\nPacific Standard Time with UTC offset: 2020-01-25T18:25:34-08:00",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "type",
              "description": "The filter to return results by InventoryChangeType values other than TRANSFER. The default value is [PHYSICAL_COUNT, ADJUSTMENT].",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "InventoryChangeTypeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "state",
              "description": "The filter to return ADJUSTMENT query results by InventoryState.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "InventoryStateFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "ID of the InventoryChange to retrieve.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "InventoryChangeType",
          "description": "Indicates how the inventory change was applied to a tracked product quantity.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "PHYSICAL_COUNT",
              "description": "The change occurred as part of a physical count update.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ADJUSTMENT",
              "description": "The change occurred as part of the normal lifecycle of goods\n(e.g., as an inventory adjustment).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TRANSFER",
              "description": "The change occurred as part of an inventory transfer.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "InventoryChangeTypeFilter",
          "description": "Used for filtering with InventoryChangeType.",
          "fields": null,
          "inputFields": [
            {
              "name": "equalToAnyOf",
              "description": "Indicates how the inventory change was applied to a tracked product quantity.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "InventoryChangeType",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "InventoryCount",
          "description": "Represents Square-estimated quantity of items in a particular state at a\nparticular seller location based on the known history of physical counts and\ninventory adjustments.\nPermissions: INVENTORY_READ",
          "fields": [
            {
              "name": "state",
              "description": "The current inventory state for the related\nquantity of items.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "InventoryState",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "quantity",
              "description": "The number of items affected by the estimated count as a decimal string.\nCan support up to 5 digits after the decimal point.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isEstimated",
              "description": "Whether the inventory count is for composed variation (TRUE) or not (FALSE). If true, the inventory count will not be present in the response of\nany of these endpoints: [BatchChangeInventory](api-endpoint:Inventory-BatchChangeInventory),\n[BatchRetrieveInventoryChanges](api-endpoint:Inventory-BatchRetrieveInventoryChanges),\n[BatchRetrieveInventoryCounts](api-endpoint:Inventory-BatchRetrieveInventoryCounts), and\n[RetrieveInventoryChanges](api-endpoint:Inventory-RetrieveInventoryChanges).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The Square-generated ID of the Location where the related\nquantity of items is being tracked.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalog",
              "description": "The Square-generated ID of the\nCatalogObject being tracked.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "CatalogObject",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "calculatedAt",
              "description": "An RFC 3339-formatted timestamp that indicates when the most recent physical count or adjustment affecting\nthe estimated count is received.\n\nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n\nUTC:  2020-01-26T02:25:34Z\n\nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "InventoryCountConnection",
          "description": "Contains information of InventoryCount result.\n\nPermissions:INVENTORY_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of InventoryCount",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "InventoryCount",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "InventoryCountFilter",
          "description": "Used for filtering query inventoryCounts.",
          "fields": null,
          "inputFields": [
            {
              "name": "merchantId",
              "description": "The merchant IDs associated with the InventoryCounts.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "catalog",
              "description": "The object IDs of any type of catalog objects to be retrieved. If the value is nil, it will return all catalog objects.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "location",
              "description": "The filter to return results by Location ID.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAfter",
              "description": "The filter to return results with their calculated_at value after the given time as specified in an RFC 3339 timestamp. The default value is the UNIX epoch of (1970-01-01T00:00:00Z).\n\nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n\nUTC: 2020-01-26T02:25:34Z\n\nPacific Standard Time with UTC offset: 2020-01-25T18:25:34-08:00",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "state",
              "description": "The filter to return INVENTORY COUNT query results by InventoryState.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "InventoryStateFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "InventoryPhysicalCount",
          "description": "Represents the quantity of an item variation that is physically present\nat a specific location, verified by a seller or a seller's employee.For example,\na physical count might come from an employee counting the item variations on\nhand or from syncing with an external system.\nPermissions: INVENTORY_READ",
          "fields": [
            {
              "name": "id",
              "description": "A unique ID generated by Square",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "referenceId",
              "description": "An optional ID provided by the application to tie the InventoryChange to an external system.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "The current inventory state for the related\nquantity of items.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "InventoryState",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "quantity",
              "description": "The number of items affected as a decimal string. Can support up to 5 digits after the decimal point.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "source",
              "description": "Information about the application with which the physical count is submitted.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "SourceApplication",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "occurredAt",
              "description": "A client-generated RFC 3339-formatted timestamp that indicates when the physical count was examined.  For physical count updates, the occurred_at timestamp cannot be older than 24 hours or in the future relative to the time of the request. Examples for January 25th, 2020 6:25:34pm Pacific Standard Time: UTC: 2020-01-26T02:25:34Z Pacific Standard Time with UTC offset: 2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "An RFC 3339-formatted timestamp that indicates when the physical count is received. Examples for January 25th, 2020 6:25:34pm Pacific Standard Time: UTC: 2020-01-26T02:25:34Z Pacific Standard Time with UTC offset: 2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The Square-generated ID of the Location where the related\nquantity of items is being tracked.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalog",
              "description": "The CatalogObject being tracked.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "CatalogObject",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Indicates how the inventory change is applied. See\n[InventoryChangeType](entity:InventoryChangeType) for all possible values.\nSee [InventoryChangeType](#type-inventorychangetype) for possible values",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "InventoryChangeType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "employee",
              "description": "The Employee responsible for",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Employee",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMember",
              "description": "The Team Member responsible for",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TeamMember",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "InventoryChange",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "InventoryState",
          "description": "Indicates the state of a tracked item quantity in the lifecycle of goods.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CUSTOM",
              "description": "The related quantity of items are in a custom state. **READ-ONLY**:\nthe Inventory API cannot move quantities to or from this state.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IN_STOCK",
              "description": "The related quantity of items are on hand and available for sale.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOLD",
              "description": "The related quantity of items were sold as part of an itemized\ntransaction. Quantities in the `SOLD` state are no longer tracked.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RETURNED_BY_CUSTOMER",
              "description": "The related quantity of items were returned through the Square Point\nof Sale application, but are not yet available for sale. **READ-ONLY**:\nthe Inventory API cannot move quantities to or from this state.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RESERVED_FOR_SALE",
              "description": "The related quantity of items are on hand, but not currently\navailable for sale. **READ-ONLY**: the Inventory API cannot move\nquantities to or from this state.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SOLD_ONLINE",
              "description": "The related quantity of items were sold online. **READ-ONLY**: the\nInventory API cannot move quantities to or from this state.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ORDERED_FROM_VENDOR",
              "description": "The related quantity of items were ordered from a vendor but not yet\nreceived. **READ-ONLY**: the Inventory API cannot move quantities to or\nfrom this state.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RECEIVED_FROM_VENDOR",
              "description": "The related quantity of items were received from a vendor but are\nnot yet available for sale. **READ-ONLY**: the Inventory API cannot move\nquantities to or from this state.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IN_TRANSIT_TO",
              "description": "Replaced by `IN_TRANSIT` to represent quantities\nof items that are in transit between locations.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NONE",
              "description": "A placeholder indicating that the related quantity of items are not\ncurrently tracked in Square. Transferring quantities from the `NONE` state\nto a tracked state (e.g., `IN_STOCK`) introduces stock into the system.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WASTE",
              "description": "The related quantity of items are lost or damaged and cannot be\nsold.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNLINKED_RETURN",
              "description": "The related quantity of items were returned but not linked to a\nprevious transaction. Unlinked returns are not tracked in Square.\nTransferring a quantity from `UNLINKED_RETURN` to a tracked state (e.g.,\n`IN_STOCK`) introduces new stock into the system.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COMPOSED",
              "description": "The related quantity of items that are part of a composition consisting one or more components.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DECOMPOSED",
              "description": "The related quantity of items that are part of a component.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUPPORTED_BY_NEWER_VERSION",
              "description": "This state is not supported by this version of the Square API. We recommend that you upgrade the client to use the appropriate version of the Square API supporting this state.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IN_TRANSIT",
              "description": "The related quantity of items are in transit between locations. **READ-ONLY:** the Inventory API cannot currently be used to move quantities to or from this inventory state.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "InventoryStateFilter",
          "description": "Used for filtering with InventoryState.",
          "fields": null,
          "inputFields": [
            {
              "name": "equalToAnyOf",
              "description": "Indicates the state of a tracked item quantity in the lifecycle of goods.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "InventoryState",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "InventoryTransfer",
          "description": "Represents the transfer of a quantity of product inventory at a\nparticular time from one location to another.\nPermissions: INVENTORY_READ",
          "fields": [
            {
              "name": "id",
              "description": "A unique ID generated by Square",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "referenceId",
              "description": "An optional ID provided by the application to tie the InventoryChange to an external system.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "The inventory state for the quantity of\nitems being transferred.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "InventoryState",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "quantity",
              "description": "The number of items affected as a decimal string. Can support up to 5 digits after the decimal point.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "occurredAt",
              "description": "A client-generated RFC 3339-formatted timestamp that indicates when the physical count was examined.  For physical count updates, the occurred_at timestamp cannot be older than 24 hours or in the future relative to the time of the request. Examples for January 25th, 2020 6:25:34pm Pacific Standard Time: UTC: 2020-01-26T02:25:34Z Pacific Standard Time with UTC offset: 2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "An RFC 3339-formatted timestamp that indicates when the physical count is received. Examples for January 25th, 2020 6:25:34pm Pacific Standard Time: UTC: 2020-01-26T02:25:34Z Pacific Standard Time with UTC offset: 2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "source",
              "description": "Information about the application with which the physical count is submitted.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "SourceApplication",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalog",
              "description": "The CatalogObject being tracked.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "CatalogObject",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fromLocation",
              "description": "The Square-generated ID of the Location where the related\nquantity of items was tracked before the transfer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "toLocation",
              "description": "The Square-generated ID of the Location where the related\nquantity of items was tracked after the transfer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Indicates how the inventory change is applied. See\n[InventoryChangeType](entity:InventoryChangeType) for all possible values.\nSee [InventoryChangeType](#type-inventorychangetype) for possible values",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "InventoryChangeType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "employee",
              "description": "The Employee responsible for",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Employee",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMember",
              "description": "The Team Member responsible for",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TeamMember",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "InventoryChange",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Job",
          "description": "A record representing an individual job for the business.\n\nPermissions:EMPLOYEES_READ",
          "fields": [
            {
              "name": "id",
              "description": "The Square-issued ID of the job.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "JSON",
          "description": "A JSON scalar",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "JsonSafeLong",
          "description": "A numeric type for large integer values that can serialize safely as JSON.\n\nWhile JSON itself has no hard limit on the size of integers, the RFC-7159 spec\nmentions that values outside of the range -9,007,199,254,740,991 (-(2^53) + 1)\nto 9,007,199,254,740,991 (2^53 - 1) may not be interopable with all JSON\nimplementations. As it turns out, the number implementation used by JavaScript\nhas this issue. When you parse a JSON string that contains a numeric value like\n`4693522397653681111`, the parsed result will contain a rounded value like\n`4693522397653681000`.\n\nWhile this is entirely a client-side problem, we want to preserve maximum compatibility\nwith common client languages. Given the ubiquity of GraphiQL as a GraphQL client,\nwe want to avoid this problem.\n\nOur solution is to support two separate types:\n\n- This type (`JsonSafeLong`) is serialized as a number, but limits values to the safely\n  serializable range.\n- The `LongString` type supports long values that use all 64 bits, but serializes as a\n  string rather than a number, avoiding the JavaScript compatibility problems.\n\nFor more background, see the [JavaScript `Number.MAX_SAFE_INTEGER`\ndocs](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER)",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "JsonSafeLongFilterInput",
          "description": "Input type used to specify filters on `JsonSafeLong` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `JsonSafeLongFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "JsonSafeLongFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "JsonSafeLongFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "gt",
              "description": "Matches records where the field value is greater than (>) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "gte",
              "description": "Matches records where the field value is greater than or equal to (>=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lt",
              "description": "Matches records where the field value is less than (<) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lte",
              "description": "Matches records where the field value is less than or equal to (<=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "JsonSafeLongFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "JsonSafeLongListElementFilterInput",
          "description": "Input type used to specify filters on elements of a `[JsonSafeLong]` field.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `JsonSafeLongListElementFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "JsonSafeLongListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "JsonSafeLongListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "JsonSafeLong",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "gt",
              "description": "Matches records where the field value is greater than (>) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "gte",
              "description": "Matches records where the field value is greater than or equal to (>=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lt",
              "description": "Matches records where the field value is less than (<) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lte",
              "description": "Matches records where the field value is less than or equal to (<=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "JsonSafeLongListFilterInput",
          "description": "Input type used to specify filters on `[JsonSafeLong]` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `JsonSafeLongListFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "JsonSafeLongListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "JsonSafeLongListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anySatisfy",
              "description": "Matches records where any of the list elements match the provided sub-filter.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "JsonSafeLongListElementFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "JsonSafeLongListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "LanguageCode",
          "description": "A language code, in [BCP 47 format](https://tools.ietf.org/html/bcp47#appendix-A)",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LocalOffersCashbackDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of a cashback amount given by a Square Local Offers seller to their customer for a purchase.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment associated with this activity.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "LocalOffersCashbackDetailsFilterInput",
          "description": "Input type used to specify filters on `LocalOffersCashbackDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment associated with this activity.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LocalOffersFeeDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of a commission fee paid by a Square Local Offers seller to Square for a\npurchase discovered through Square Local Offers.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment associated with this activity.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "LocalOffersFeeDetailsFilterInput",
          "description": "Input type used to specify filters on `LocalOffersFeeDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment associated with this activity.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "LocalTime",
          "description": "A local time such as `\"23:59:33\"` or `\"07:20:47.454\"` without a time zone or offset, formatted based on the\n[partial-time portion of RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6).",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "LocalTimeGroupingOffsetInput",
          "description": "Input type offered when grouping on `LocalTime` fields, representing the amount of offset\n(positive or negative) to shift the `LocalTime` boundaries of each grouping bucket.\n\nFor example, when grouping by `HOUR`, you can shift by 30 minutes to change\nwhat minute-of-hour hours are considered to start on.",
          "fields": null,
          "inputFields": [
            {
              "name": "amount",
              "description": "Number (positive or negative) of the given `unit` to offset the boundaries of the `LocalTime` groupings.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "unit",
              "description": "Unit of offsetting to apply to the boundaries of the `LocalTime` groupings.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "LocalTimeUnitInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "LocalTimeGroupingTruncationUnitInput",
          "description": "Enumerates the supported truncation units of a `LocalTime`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "HOUR",
              "description": "The hour a `LocalTime` falls in.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MINUTE",
              "description": "The minute a `LocalTime` falls in.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SECOND",
              "description": "The second a `LocalTime` falls in.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "LocalTimeUnitInput",
          "description": "Enumeration of `LocalTime` units.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "HOUR",
              "description": "1/24th of a day.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MILLISECOND",
              "description": "1/1000th of a second.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MINUTE",
              "description": "1/60th of an hour.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SECOND",
              "description": "1/60th of a minute.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Location",
          "description": "A location for a Merchant. The location may be a physical location, such as a storefront, or it may be an abstract\nlocation, such as an online store, facebook/instagram property, etc.\n\nPermissions:MERCHANT_PROFILE_READ",
          "fields": [
            {
              "name": "id",
              "description": "The Square-issued ID of the location.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "address",
              "description": "The physical address of the location.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Address",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "businessEmail",
              "description": "The email of the location. This email is visible to the customers of the location. For example, the email appears on customer receipts",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "EmailAddress",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "businessHours",
              "description": "The hours of operation for the location.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "BusinessHours",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "businessName",
              "description": "The business name of the location This is the name visible to the customers of the location. For example, this name appears on customer receipts.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "capabilities",
              "description": "The Square features that are enabled for the location.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "LocationCapability",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "coordinates",
              "description": "The physical coordinates (latitude and longitude) of the location.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GeoCoordinates",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "country",
              "description": "The country of the location.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "Country",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The time when the location was created, in RFC 3339 format. For more information, see Working with Dates.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "currency",
              "description": "The currency used for all transactions at this location.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "Currency",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "The description of the location.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "facebookUrl",
              "description": "The Facebook profile URL of the location. The URL's domain should be 'facebook.com'.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Url",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "instagramUsername",
              "description": "The Instagram username of the location without the '@' symbol.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "language",
              "description": "The language associated with the location.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "LanguageCode",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "logoUrl",
              "description": "The URL of the logo image for the location.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Url",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mcc",
              "description": "A four-digit number that describes the kind of goods or services sold at the location.\nThe merchant category code (MCC) of the location as standardized by ISO 18245.\nFor example, 5045, for a location that sells computer goods and software.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchant",
              "description": "The merchant of the location.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Merchant",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The name of the location. This information appears in the Seller Dashboard as the nickname. A location name must be unique within a seller account.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "phoneNumber",
              "description": "The phone number of the location.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "PhoneNumber",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "posBackgroundUrl",
              "description": "The URL of the Point of Sal background image for the location.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Url",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "The status of the location, e.g. whether a location is active or inactive.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "LocationStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "timezone",
              "description": "The timezone of the location.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "TimeZone",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "twitterUsername",
              "description": "The Twitter username of the location without the '@' symbol.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of the location.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "LocationType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "websiteUrl",
              "description": "The website URL of the location.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Url",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LocationAggregatedValues",
          "description": "Type used to perform aggregation computations on `Location` fields.",
          "fields": [
            {
              "name": "id",
              "description": "Computed aggregate values for the `id` field:\n\n> The Square-issued ID of the location.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LocationBookingProfile",
          "description": "The booking profile of a seller's location, including the location's ID and whether the location is enabled for online booking.\nPermissions: APPOINTMENTS_BUSINESS_SETTINGS_READ",
          "fields": [
            {
              "name": "bookingSiteUrl",
              "description": "Url for the online booking site for this location.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the location.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "onlineBookingEnabled",
              "description": "Indicates whether the location is enabled for online booking.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LocationBookingProfileConnection",
          "description": "A list of location booking profiles of a seller.\nPermissions:APPOINTMENTS_BUSINESS_SETTINGS_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "Lists location booking profiles of a seller.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "LocationBookingProfile",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "LocationBookingProfileFilter",
          "description": "Represents a set of query expressions (filters) to narrow the scope of targeted location booking profiles\nreturned\nPermissions:APPOINTMENTS_BUSINESS_SETTINGS_READ",
          "fields": null,
          "inputFields": [
            {
              "name": "locationId",
              "description": "The location for which to retrieve bookings. If this is not set, all locations' bookings are retrieved.",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "The Square-assigned ID of the merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "LocationCapability",
          "description": "The capabilities a location might have.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AUTOMATIC_TRANSFERS",
              "description": "The capability to receive automatic transfers from Square.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREDIT_CARD_PROCESSING",
              "description": "The capability to process credit card transactions with Square.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNLINKED_REFUNDS",
              "description": "The capability to process unlinked refunds with Square.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LocationConnection",
          "description": "Represents a paginated collection of `Location` results.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Connection-Types) for more info.",
          "fields": [
            {
              "name": "nodes",
              "description": "The list of `Location` results.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Location",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalEdgeCount",
              "description": "The total number of edges available in this connection to paginate over.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "LocationFieldsListFilterInput",
          "description": "Input type used to specify filters on a `Location` object referenced directly\nor transitively from a list field that has been configured to index each leaf field as\nits own flattened list of values.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Used to filter on the `id` field:\n\n> The Square-issued ID of the location.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LocationGroupedBy",
          "description": "Type used to specify the `Location` fields to group by for aggregations.",
          "fields": [
            {
              "name": "id",
              "description": "The `id` field value for this group:\n\n> The Square-issued ID of the location.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "LocationRefFilterInput",
          "description": "Input type used to specify filters on `Location` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Used to filter on the `id` field:\n\n> The Square-issued ID of the location.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "LocationStatus",
          "description": "A location's status.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ACTIVE",
              "description": "A location that is active for business.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INACTIVE",
              "description": "A location that is not active for business. Inactive locations provide historical information.\nHide inactive locations unless the user has requested to see them.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "LocationType",
          "description": "A location's type.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "MOBILE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PHYSICAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "LongString",
          "description": "A numeric type for large integer values in the inclusive range -2^63\n(-9,223,372,036,854,775,808) to (2^63 - 1) (9,223,372,036,854,775,807).\n\nNote that `LongString` values are serialized as strings within JSON, to avoid\ninteropability problems with JavaScript. If you want a large integer type that\nserializes within JSON as a number, use `JsonSafeLong`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LongStringAggregatedValues",
          "description": "A return type used from aggregations to provided aggregated values over `LongString` fields.",
          "fields": [
            {
              "name": "approximateAvg",
              "description": "The average (mean) of the field values within this grouping.\n\nNote that the returned value is approximate. Imprecision can be introduced by the computation if\nany intermediary values fall outside the `JsonSafeLong` range (-9,007,199,254,740,991\nto 9,007,199,254,740,991).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "approximateDistinctValueCount",
              "description": "An approximation of the number of unique values for this field within this grouping.\n\nThe approximation uses the HyperLogLog++ algorithm from the [HyperLogLog in\nPractice](https://research.google.com/pubs/archive/40671.pdf)\npaper. The accuracy of the returned value varies based on the specific dataset, but\nit usually differs from the true distinct value count by less than 7%.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "approximateMax",
              "description": "The maximum of the field values within this grouping.\n\nThe aggregation computation performed to identify the largest value is not able\nto maintain exact precision when dealing with values that are outside the `JsonSafeLong`\nrange (-9,007,199,254,740,991 to 9,007,199,254,740,991).\nIn that case, the `exactMax` field will return `null`, but this field will provide\na value which may be approximate.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "approximateMin",
              "description": "The minimum of the field values within this grouping.\n\nThe aggregation computation performed to identify the smallest value is not able\nto maintain exact precision when dealing with values that are outside the `JsonSafeLong`\nrange (-9,007,199,254,740,991 to 9,007,199,254,740,991).\nIn that case, the `exactMin` field will return `null`, but this field will provide\na value which may be approximate.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "approximateSum",
              "description": "The (approximate) sum of the field values within this grouping.\n\nSums of large `LongString` values can result in overflow, where the exact sum cannot\nfit in a `LongString` return value. This field, as a double-precision `Float`, can\nrepresent larger sums, but the value may only be approximate.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "exactMax",
              "description": "The maximum of the field values within this grouping.\n\nSo long as the grouping contains at least one non-null value, and no values exceed the\n`JsonSafeLong` range in the underlying indexed field, this will return an exact non-null value.\n\nIf no non-null values are available, or if the maximum value is outside the `JsonSafeLong`\nrange, `null` will be returned. `approximateMax` can be used to differentiate between these\ncases and to get an approximate value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "exactMin",
              "description": "The minimum of the field values within this grouping.\n\nSo long as the grouping contains at least one non-null value, and no values exceed the\n`JsonSafeLong` range in the underlying indexed field, this will return an exact non-null value.\n\nIf no non-null values are available, or if the minimum value is outside the `JsonSafeLong`\nrange, `null` will be returned. `approximateMin` can be used to differentiate between these\ncases and to get an approximate value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "exactSum",
              "description": "The exact sum of the field values within this grouping, if it fits in a `JsonSafeLong`.\n\nSums of large `LongString` values can result in overflow, where the exact sum cannot\nfit in a `JsonSafeLong`. In that case, `null` will be returned, and `approximateSum`\ncan be used to get an approximate value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "LongStringFilterInput",
          "description": "Input type used to specify filters on `LongString` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `LongStringFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "LongStringFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "LongStringFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "LongString",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "gt",
              "description": "Matches records where the field value is greater than (>) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "gte",
              "description": "Matches records where the field value is greater than or equal to (>=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lt",
              "description": "Matches records where the field value is less than (<) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lte",
              "description": "Matches records where the field value is less than or equal to (<=) the provided value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "SCALAR",
                "name": "LongString",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "LongStringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyAccount",
          "description": "Describes a loyalty account in a loyalty program.For more information, see\n[Create and Retrieve Loyalty Accounts](https://developer.squareup.com/docs/loyalty-api/loyalty-accounts).\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "balance",
              "description": "The available point balance in the loyalty account. If points are scheduled to expire, they are listed in the `expiring_point_deadlines` field.\n  \nYour application should be able to handle loyalty accounts that have a negative point balance (`balance` is less than 0). This might occur if a seller makes a manual adjustment or as a result of a refund or exchange.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The timestamp when the loyalty account was created, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customer",
              "description": "The Square-assigned ID of the customer that is associated with the account.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Customer",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "enrolledAt",
              "description": "The timestamp when the buyer joined the loyalty program, in RFC 3339 format. This field is used to display the **Enrolled On** or **Member Since** date in first-party Square products.\n  \nIf this field is not set in a `CreateLoyaltyAccount` request, Square populates it after the buyer's first action on their account \n(when `AccumulateLoyaltyPoints` or `CreateLoyaltyReward` is called). In first-party flows, Square populates the field when the buyer agrees to the terms of service in Square Point of Sale. \n  \nThis field is typically specified in a `CreateLoyaltyAccount` request when creating a loyalty account for a buyer who already interacted with their account. \nFor example, you would set this field when migrating accounts from an external system. The timestamp in the request can represent a current or previous date and time, but it cannot be set for the future.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "expiringPointDeadlines",
              "description": "The schedule for when points expire in the loyalty account balance. This field is present only if the account has points that are scheduled to expire. \n  \nThe total number of points in this field equals the number of points in the `balance` field.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "LoyaltyAccountExpiringPointDeadline",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The Square-assigned ID of the loyalty account.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lifetimePoints",
              "description": "The total points accrued during the lifetime of the account.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mapping",
              "description": "The mapping that associates the loyalty account with a buyer. Currently,\na loyalty account can only be mapped to a buyer by phone number.\n  \nTo create a loyalty account, you must specify the `mapping` field, with the buyer's phone number\nin the `phone_number` field.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyAccountMapping",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "program",
              "description": "The Square-assigned ID of the loyalty program to which the account belongs.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyProgram",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The timestamp when the loyalty account was last updated, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyAccountConnection",
          "description": "A list of Loyalty Account.\nPermissions:LOYALTY_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of Loyalty Account.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "LoyaltyAccount",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyAccountExpiringPointDeadline",
          "description": "Represents a set of points for a loyalty account that are scheduled to expire on a specific date.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "expiresAt",
              "description": "The timestamp of when the points are scheduled to expire, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "points",
              "description": "The number of points scheduled to expire at the `expires_at` timestamp.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "LoyaltyAccountFilter",
          "description": "The search criteria for the loyalty accounts.",
          "fields": null,
          "inputFields": [
            {
              "name": "accountId",
              "description": "The ID of the loyalty account to retrieve.",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "customerIds",
              "description": "The set of customer IDs to use in the loyalty account search.  \n  \nThis cannot be combined with `mappings`.  \n  \nMax: 30 customer IDs",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "mappings",
              "description": "The set of mappings to use in the loyalty account search.  \n  \nThis cannot be combined with `customer_ids`.  \n  \nMax: 30 mappings",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "LoyaltyAccountMappingInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyAccountMapping",
          "description": "Represents the mapping that associates a loyalty account with a buyer.Currently, a loyalty account can only be mapped to a buyer by phone number. For more information, see \n[Loyalty Overview](https://developer.squareup.com/docs/loyalty/overview).\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "createdAt",
              "description": "The timestamp when the mapping was created, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The Square-assigned ID of the mapping.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "phoneNumber",
              "description": "The phone number of the buyer, in E.164 format. For example, \"+14155551111\".",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "LoyaltyAccountMappingInput",
          "description": "Represents the mapping that associates a loyalty account with a buyer.Currently, a loyalty account can only be mapped to a buyer by phone number. For more information, see\n[Loyalty Overview](https://developer.squareup.com/docs/loyalty/overview).\nPermissions: LOYALTY_READ",
          "fields": null,
          "inputFields": [
            {
              "name": "createdAt",
              "description": "The timestamp when the mapping was created, in RFC 3339 format.\n\nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n\nUTC:  2020-01-26T02:25:34Z\n\nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "The Square-assigned ID of the mapping.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "phoneNumber",
              "description": "The phone number of the buyer, in E.164 format. For example, \"+14155551111\".",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "LoyaltyAccountMappingType",
          "description": "The type of mapping.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "PHONE",
              "description": "The loyalty account is mapped by phone.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyEvent",
          "description": "Provides information about a loyalty event.For more information, see [Search for Balance-Changing Loyalty Events](https://developer.squareup.com/docs/loyalty-api/loyalty-events).\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "accumulatePoints",
              "description": "Provides metadata when the event `type` is `ACCUMULATE_POINTS`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyEventAccumulatePoints",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "accumulatePromotionPoints",
              "description": "Provides metadata when the event `type` is `ACCUMULATE_PROMOTION_POINTS`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyEventAccumulatePromotionPoints",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "adjustPoints",
              "description": "Provides metadata when the event `type` is `ADJUST_POINTS`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyEventAdjustPoints",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createReward",
              "description": "Provides metadata when the event `type` is `CREATE_REWARD`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyEventCreateReward",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The timestamp when the event was created, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteReward",
              "description": "Provides metadata when the event `type` is `DELETE_REWARD`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyEventDeleteReward",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "expirePoints",
              "description": "Provides metadata when the event `type` is `EXPIRE_POINTS`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyEventExpirePoints",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The Square-assigned ID of the loyalty event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the location where the event occurred.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loyaltyAccount",
              "description": "The ID of the loyalty account associated with the event.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyAccount",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "otherEvent",
              "description": "Provides metadata when the event `type` is `OTHER`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyEventOther",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "redeemReward",
              "description": "Provides metadata when the event `type` is `REDEEM_REWARD`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyEventRedeemReward",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "source",
              "description": "Defines whether the event was generated by the Square Point of Sale.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "LoyaltyEventSource",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of the loyalty event.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "LoyaltyEventType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyEventAccumulatePoints",
          "description": "Provides metadata when the event `type` is `ACCUMULATE_POINTS`.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "loyaltyProgram",
              "description": "The ID of the loyalty program.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyProgram",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "order",
              "description": "The ID of the order for which the buyer accumulated the points.\nThis field is returned only if the Orders API is used to process orders.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Order",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "points",
              "description": "The number of points accumulated by the event.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyEventAccumulatePromotionPoints",
          "description": "Provides metadata when the event `type` is `ACCUMULATE_PROMOTION_POINTS`.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "loyaltyProgram",
              "description": "The Square-assigned ID of the loyalty program.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyProgram",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loyaltyPromotion",
              "description": "The Square-assigned ID of the loyalty promotion.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyPromotion",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "order",
              "description": "The ID of the order for which the buyer earned the promotion points.\nOnly applications that use the Orders API to process orders can trigger this event.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Order",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "points",
              "description": "The number of points earned by the event.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyEventAdjustPoints",
          "description": "Provides metadata when the event `type` is `ADJUST_POINTS`.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "loyaltyProgram",
              "description": "The Square-assigned ID of the loyalty program.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyProgram",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "points",
              "description": "The number of points added or removed.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reason",
              "description": "The reason for the adjustment of points.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyEventConnection",
          "description": "A list of Loyalty Event.\nPermissions:LOYALTY_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of Loyalty Event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "LoyaltyEvent",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyEventCreateReward",
          "description": "Provides metadata when the event `type` is `CREATE_REWARD`.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "loyaltyProgram",
              "description": "The ID of the loyalty program.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyProgram",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "points",
              "description": "The loyalty points used to create the reward.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reward",
              "description": "The Square-assigned ID of the created loyalty reward.\nThis field is returned only if the event source is `LOYALTY_API`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyReward",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "LoyaltyEventDateTimeFilter",
          "description": "Filter events by date time range.",
          "fields": null,
          "inputFields": [
            {
              "name": "createdAt",
              "description": "The `created_at` date time range used to filter the result.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyEventDeleteReward",
          "description": "Provides metadata when the event `type` is `DELETE_REWARD`.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "loyaltyProgram",
              "description": "The ID of the loyalty program.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyProgram",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "points",
              "description": "The number of points returned to the loyalty account.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reward",
              "description": "The ID of the deleted loyalty reward.\nThis field is returned only if the event source is `LOYALTY_API`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyReward",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyEventExpirePoints",
          "description": "Provides metadata when the event `type` is `EXPIRE_POINTS`.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "loyaltyProgram",
              "description": "The Square-assigned ID of the loyalty program.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyProgram",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "points",
              "description": "The number of points expired.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "LoyaltyEventFilter",
          "description": "The filtering criteria.If the request specifies multiple filters, \nthe endpoint uses a logical AND to evaluate them.",
          "fields": null,
          "inputFields": [
            {
              "name": "dateTimeFilter",
              "description": "Filter events by date time range. \nFor each range, the start time is inclusive and the end time \nis exclusive.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "LoyaltyEventDateTimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "locationFilter",
              "description": "Filter events by location.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "LoyaltyEventLocationFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "loyaltyAccountFilter",
              "description": "Filter events by loyalty account.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "LoyaltyEventLoyaltyAccountFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "orderFilter",
              "description": "Filter events by the order associated with the event.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "LoyaltyEventOrderFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeFilter",
              "description": "Filter events by event type.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "LoyaltyEventTypeFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "LoyaltyEventLocationFilter",
          "description": "Filter events by location.",
          "fields": null,
          "inputFields": [
            {
              "name": "locationIds",
              "description": "The location IDs for loyalty events to query.\nIf multiple values are specified, the endpoint uses \na logical OR to combine them.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "LoyaltyEventLoyaltyAccountFilter",
          "description": "Filter events by loyalty account.",
          "fields": null,
          "inputFields": [
            {
              "name": "loyaltyAccountId",
              "description": "The ID of the loyalty account associated with loyalty events.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "LoyaltyEventOrderFilter",
          "description": "Filter events by the order associated with the event.",
          "fields": null,
          "inputFields": [
            {
              "name": "orderId",
              "description": "The ID of the order associated with the event.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyEventOther",
          "description": "Provides metadata when the event `type` is `OTHER`.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "loyaltyProgram",
              "description": "The Square-assigned ID of the loyalty program.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyProgram",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "points",
              "description": "The number of points added or removed.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyEventRedeemReward",
          "description": "Provides metadata when the event `type` is `REDEEM_REWARD`.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "loyaltyProgram",
              "description": "The ID of the loyalty program.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyProgram",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "order",
              "description": "The ID of the order that redeemed the reward.\nThis field is returned only if the Orders API is used to process orders.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Order",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reward",
              "description": "The ID of the redeemed loyalty reward.\nThis field is returned only if the event source is `LOYALTY_API`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyReward",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "LoyaltyEventSource",
          "description": "Defines whether the event was generated by the Square Point of Sale.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "LOYALTY_API",
              "description": "The event is generated by something other than the Square Point of Sale that used the Loyalty API.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE",
              "description": "The event is generated by the Square Point of Sale (POS).",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "LoyaltyEventType",
          "description": "The type of the loyalty event.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ACCUMULATE_POINTS",
              "description": "Points are added to a loyalty account for a purchase that\nqualified for points based on an [accrual rule](entity:LoyaltyProgramAccrualRule).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ACCUMULATE_PROMOTION_POINTS",
              "description": " Points are added to a loyalty account for a purchase that\nqualified for a [loyalty promotion](entity:LoyaltyPromotion).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ADJUST_POINTS",
              "description": "Loyalty points are manually adjusted.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATE_REWARD",
              "description": "A [loyalty reward](entity:LoyaltyReward) is created.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETE_REWARD",
              "description": "A loyalty reward is deleted.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPIRE_POINTS",
              "description": "Loyalty points are expired according to the \nexpiration policy of the loyalty program.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER",
              "description": "Some other loyalty event occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REDEEM_REWARD",
              "description": "A loyalty reward is redeemed.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "LoyaltyEventTypeFilter",
          "description": "Filter events by event type.",
          "fields": null,
          "inputFields": [
            {
              "name": "types",
              "description": "The loyalty event types used to filter the result.\nIf multiple values are specified, the endpoint uses a \nlogical OR to combine them.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "LoyaltyEventType",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyProgram",
          "description": "Represents a Square loyalty program.Loyalty programs define how buyers can earn points and redeem points for rewards. \nSquare sellers can have only one loyalty program, which is created and managed from the Seller Dashboard. \nFor more information, see [Loyalty Program Overview](https://developer.squareup.com/docs/loyalty/overview).\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "accrualRules",
              "description": "Defines how buyers can earn loyalty points from the base loyalty program.\nTo check for associated loyalty promotions that enable\nbuyers to earn extra points, call [ListLoyaltyPromotions](api-endpoint:Loyalty-ListLoyaltyPromotions).",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "LoyaltyProgramAccrualRule",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The timestamp when the program was created, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "expirationPolicy",
              "description": "If present, details for how points expire.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyProgramExpirationPolicy",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The Square-assigned ID of the loyalty program. Updates to \nthe loyalty program do not modify the identifier.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locationIds",
              "description": "The locations at which the program is active.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "rewardTiers",
              "description": "The list of rewards for buyers, sorted by ascending points.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "LoyaltyProgramRewardTier",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "Whether the program is currently active.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "LoyaltyProgramStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "terminology",
              "description": "A cosmetic name for the “points” currency.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyProgramTerminology",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The timestamp when the reward was last updated, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyProgramAccrualRule",
          "description": "Represents an accrual rule, which defines how buyers can earn points from the base loyalty program.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "accrualType",
              "description": "The type of the accrual rule that defines how buyers can earn points.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "LoyaltyProgramAccrualRuleType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "categoryData",
              "description": "Additional data for rules with the `CATEGORY` accrual type.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyProgramAccrualRuleCategoryData",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "itemVariationData",
              "description": "Additional data for rules with the `ITEM_VARIATION` accrual type.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyProgramAccrualRuleItemVariationData",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "points",
              "description": "The number of points that \nbuyers earn based on the `accrual_type`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "spendData",
              "description": "Additional data for rules with the `SPEND` accrual type.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyProgramAccrualRuleSpendData",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "visitData",
              "description": "Additional data for rules with the `VISIT` accrual type.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyProgramAccrualRuleVisitData",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyProgramAccrualRuleCategoryData",
          "description": "Represents additional data for rules with the `CATEGORY` accrual type.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "category",
              "description": "The ID of the `CATEGORY` catalog object that buyers can purchase to earn\npoints.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogCategory",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyProgramAccrualRuleItemVariationData",
          "description": "Represents additional data for rules with the `ITEM_VARIATION` accrual type.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "itemVariation",
              "description": "The ID of the `ITEM_VARIATION` catalog object that buyers can purchase to earn\npoints.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogItemVariation",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyProgramAccrualRuleSpendData",
          "description": "Represents additional data for rules with the `SPEND` accrual type.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The amount that buyers must spend to earn points. \nFor example, given an \"Earn 1 point for every $10 spent\" accrual rule, a buyer who spends $105 earns 10 points.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "excludedCategoryIds",
              "description": "The IDs of any `CATEGORY` catalog objects that are excluded from points accrual.\n  \nYou can use the [BatchRetrieveCatalogObjects](api-endpoint:Catalog-BatchRetrieveCatalogObjects)\nendpoint to retrieve information about the excluded categories.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "excludedItemVariationIds",
              "description": "The IDs of any `ITEM_VARIATION` catalog objects that are excluded from points accrual.\n  \nYou can use the [BatchRetrieveCatalogObjects](api-endpoint:Catalog-BatchRetrieveCatalogObjects)\nendpoint to retrieve information about the excluded item variations.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "taxMode",
              "description": "Indicates how taxes should be treated when calculating the purchase amount used for points accrual.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "LoyaltyProgramAccrualRuleTaxMode",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "LoyaltyProgramAccrualRuleTaxMode",
          "description": "Indicates how taxes should be treated when calculating the purchase amount used for loyalty points accrual.This setting applies only to `SPEND` accrual rules or `VISIT` accrual rules that have a minimum spend requirement.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AFTER_TAX",
              "description": "Include taxes in the purchase amount used for loyalty points accrual.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BEFORE_TAX",
              "description": "Exclude taxes from the purchase amount used for loyalty points accrual.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "LoyaltyProgramAccrualRuleType",
          "description": "The type of the accrual rule that defines how buyers can earn points.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CATEGORY",
              "description": "An accrual rule based on an item category. For example, accrue points \nfor purchasing any item in the \"hot drink\" category: coffee, tea, or hot cocoa.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEM_VARIATION",
              "description": "An accrual rule based on an item variation. For example, accrue \npoints for purchasing a coffee.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SPEND",
              "description": "A spend-based accrual rule. A buyer earns points based on the amount \nspent.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VISIT",
              "description": "A visit-based accrual rule. A buyer earns points for each visit. \nYou can specify the minimum purchase required.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyProgramAccrualRuleVisitData",
          "description": "Represents additional data for rules with the `VISIT` accrual type.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "minimumAmountMoney",
              "description": "The minimum purchase required during the visit to quality for points.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "taxMode",
              "description": "Indicates how taxes should be treated when calculating the purchase amount to determine whether the visit qualifies for points. \nThis setting applies only if `minimum_amount_money` is specified.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "LoyaltyProgramAccrualRuleTaxMode",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyProgramConnection",
          "description": "A list of Loyalty Program.\nPermissions:LOYALTY_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of Loyalty Program.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "LoyaltyProgram",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyProgramExpirationPolicy",
          "description": "Describes when the loyalty program expires.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "expirationDuration",
              "description": "The number of months before points expire, in `P[n]M` RFC 3339 duration format. For example, a value of `P12M` represents a duration of 12 months. \nPoints are valid through the last day of the month in which they are scheduled to expire. For example, with a  `P12M` duration, points earned on July 6, 2020 expire on August 1, 2021.\n  \nExample for 2 days, 12 hours, 30 minutes, and 15 seconds: P2DT12H30M15S",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "LoyaltyProgramFilter",
          "description": "Input used to help filter on the Loyalty program",
          "fields": null,
          "inputFields": [
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "programId",
              "description": "The ID of the loyalty program or the keyword main. Either value can be used to retrieve the single loyalty program that belongs to the seller.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyProgramRewardTier",
          "description": "Represents a reward tier in a loyalty program.A reward tier defines how buyers can redeem points for a reward, such as the number of points required and the value and scope of the discount. A loyalty program can offer multiple reward tiers.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "createdAt",
              "description": "The timestamp when the reward tier was created, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The Square-assigned ID of the reward tier.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The name of the reward tier.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "points",
              "description": "The points exchanged for the reward tier.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pricingRuleReference",
              "description": "A reference to the specific version of a `PRICING_RULE` catalog object that contains information about the reward tier discount.\n  \nUse `object_id` and `catalog_version` with the [RetrieveCatalogObject](api-endpoint:Catalog-RetrieveCatalogObject) endpoint\nto get discount details. Make sure to set `include_related_objects` to true in the request to retrieve all catalog objects\nthat define the discount. For more information, see [Getting discount details for a reward tier](https://developer.squareup.com/docs/loyalty-api/loyalty-rewards#get-discount-details).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogObjectReference",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "LoyaltyProgramStatus",
          "description": "Indicates whether the program is currently active.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ACTIVE",
              "description": "The program is fully functional. The program has an active subscription.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INACTIVE",
              "description": "The loyalty program does not have an active subscription. \nLoyalty API requests fail.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyProgramTerminology",
          "description": "Represents the naming used for loyalty points.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "one",
              "description": "A singular unit for a point (for example, 1 point is called 1 star).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "other",
              "description": "A plural unit for point (for example, 10 points is called 10 stars).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyPromotion",
          "description": "Represents a promotion for a loyalty program.Loyalty promotions enable buyers\nto earn extra points on top of those earned from the base program.\n\nA loyalty program can have a maximum of 10 loyalty promotions with an `ACTIVE` or `SCHEDULED` status.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "availableTime",
              "description": "The scheduling information that defines when purchases can qualify to earn points from an `ACTIVE` promotion.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyPromotionAvailableTimeData",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canceledAt",
              "description": "The timestamp of when the promotion was canceled, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The timestamp of when the promotion was created, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The Square-assigned ID of the promotion.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "incentive",
              "description": "The points incentive for the promotion. This field defines whether promotion points\nare earned by multiplying base program points or by adding a specified number of points.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyPromotionIncentive",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loyaltyProgram",
              "description": "The ID of the loyalty program associated with the promotion.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyProgram",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "minimumSpendAmountMoney",
              "description": "The minimum purchase amount required to earn promotion points. If specified, this amount is positive.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The name of the promotion.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "qualifyingCategoryIds",
              "description": "The IDs of any qualifying `CATEGORY` catalog objects. If specified,\nthe purchase must include at least one item from one of these categories to qualify for the promotion.\n  \nThis option is valid only if the base loyalty program uses a `VISIT` or `SPEND` accrual rule.\nWith `SPEND` accrual rules, make sure that qualifying promotional items are not excluded.\n  \nYou can specify `qualifying_category_ids` or `qualifying_item_variation_ids` for a promotion, but not both.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "qualifyingItemVariationIds",
              "description": "The IDs of any qualifying `ITEM_VARIATION` catalog objects. If specified,\nthe purchase must include at least one of these items to qualify for the promotion.\n  \nThis option is valid only if the base loyalty program uses a `VISIT` or `SPEND` accrual rule.\nWith `SPEND` accrual rules, make sure that qualifying promotional items are not excluded.\n  \nYou can specify `qualifying_item_variation_ids` or `qualifying_category_ids` for a given promotion, but not both.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "The current status of the promotion.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "LoyaltyPromotionStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "triggerLimit",
              "description": "The number of times a buyer can earn promotion points during a specified interval.\nIf not specified, buyers can trigger the promotion an unlimited number of times.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyPromotionTriggerLimit",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The timestamp when the promotion was last updated, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyPromotionAvailableTimeData",
          "description": "Represents scheduling information that determines when purchases can qualify to earn points\nfrom a loyalty promotion.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "endDate",
              "description": "The date that the promotion ends, in `YYYY-MM-DD` format. Square populates this field\nbased on the provided `time_periods`. If an end date is not specified, an `ACTIVE` promotion\nremains available until it is canceled.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startDate",
              "description": "The date that the promotion starts, in `YYYY-MM-DD` format. Square populates this field\nbased on the provided `time_periods`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "timePeriods",
              "description": "A list of [iCalendar (RFC 5545) events](https://tools.ietf.org/html/rfc5545#section-3.6.1)\n(`VEVENT`). Each event represents an available time period per day or days of the week. \nA day can have a maximum of one available time period.\n  \nOnly `DTSTART`, `DURATION`, and `RRULE` are supported. `DTSTART` and `DURATION` are required and\ntimestamps must be in local (unzoned) time format. Include `RRULE` to specify recurring promotions,\nan end date (using the `UNTIL` keyword), or both. For more information, see\n[Available time](https://developer.squareup.com/docs/loyalty-api/loyalty-promotions#available-time).\n  \nNote that `BEGIN:VEVENT` and `END:VEVENT` are optional in a `CreateLoyaltyPromotion` request\nbut are always included in the response.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyPromotionConnection",
          "description": "A list of Loyalty Promotion.\nPermissions:LOYALTY_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of Loyalty Promotion.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "LoyaltyPromotion",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "LoyaltyPromotionFilter",
          "description": "Input used to help filter on the Loyalty Promotion",
          "fields": null,
          "inputFields": [
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "programId",
              "description": "The ID of the loyalty program or the keyword main. Either value can be used to retrieve the single loyalty program that belongs to the seller.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "promotionId",
              "description": "The ID of the loyalty promotion to retrieve.",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "status",
              "description": "The status to filter the results by. If a status is provided, only loyalty promotions with the specified status are returned. Otherwise, all loyalty promotions associated with the loyalty program are returned.",
              "type": {
                "kind": "ENUM",
                "name": "LoyaltyPromotionStatus",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyPromotionIncentive",
          "description": "Represents how points for a loyalty promotion are calculated,\neither by multiplying the points earned from the base program or by adding a specified number\nof points to the points earned from the base program.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "pointsAdditionData",
              "description": "Additional data for a `POINTS_ADDITION` incentive type.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyPromotionIncentivePointsAdditionData",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pointsMultiplierData",
              "description": "Additional data for a `POINTS_MULTIPLIER` incentive type.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyPromotionIncentivePointsMultiplierData",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of points incentive.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "LoyaltyPromotionIncentiveType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyPromotionIncentivePointsAdditionData",
          "description": "Represents the metadata for a `POINTS_ADDITION` type of loyalty promotion incentive.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "pointsAddition",
              "description": "The number of additional points to earn each time the promotion is triggered. For example,\nsuppose a purchase qualifies for 5 points from the base loyalty program. If the purchase also\nqualifies for a `POINTS_ADDITION` promotion incentive with a `points_addition` of 3, the buyer\nearns a total of 8 points (5 program points + 3 promotion points = 8 points).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyPromotionIncentivePointsMultiplierData",
          "description": "Represents the metadata for a `POINTS_MULTIPLIER` type of loyalty promotion incentive.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "multiplier",
              "description": "The multiplier used to calculate the number of points earned each time the promotion is triggered,\nspecified as a string representation of a decimal. Square supports multipliers up to 10x, with three\npoint precision for decimal multipliers. For example, suppose a purchase qualifies for 4 points from the\nbase loyalty program. If the purchase also qualifies for a `POINTS_MULTIPLIER` promotion incentive with a\n`multiplier` of \"1.5\", the buyer earns a total of 6 points (4 program points x 1.5 promotion multiplier = 6 points).\nFractional points are dropped.\n  \nOne of the following is required when specifying a points multiplier:\n- (Recommended) This `multiplier` field.\n- The deprecated `points_multiplier` field. If provided in the request, Square also returns `multiplier`\nwith the equivalent value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pointsMultiplier",
              "description": "The multiplier used to calculate the number of points earned each time the promotion\nis triggered. For example, suppose a purchase qualifies for 5 points from the base loyalty program.\nIf the purchase also qualifies for a `POINTS_MULTIPLIER` promotion incentive with a `points_multiplier`\nof 3, the buyer earns a total of 15 points (5 program points x 3 promotion multiplier = 15 points).\n  \nDEPRECATED at version 2023-08-16. Replaced by the `multiplier` field.\n  \nOne of the following is required when specifying a points multiplier:\n- (Recommended) The `multiplier` field.\n- This deprecated `points_multiplier` field. If provided in the request, Square also returns `multiplier`\nwith the equivalent value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "LoyaltyPromotionIncentiveType",
          "description": "Indicates the type of points incentive for a loyalty promotion,\nwhich is used to determine how buyers can earn points from the promotion.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "POINTS_ADDITION",
              "description": "Add a specified number of points to those earned from the base loyalty program.\nFor example, \"Earn 10 additional points.\"",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "POINTS_MULTIPLIER",
              "description": "Multiply the number of points earned from the base loyalty program.\nFor example, \"Earn double points.\"",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "LoyaltyPromotionStatus",
          "description": "Indicates the status of a loyalty promotion.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ACTIVE",
              "description": "The loyalty promotion is currently active. Buyers can earn points for purchases\nthat meet the promotion conditions, such as the promotion's `available_time`.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CANCELED",
              "description": "The loyalty promotion was canceled. `CANCELED` is a terminal status.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ENDED",
              "description": "The loyalty promotion has ended because the specified `end_date` was reached.\n`ENDED` is a terminal status.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCHEDULED",
              "description": "The loyalty promotion is scheduled to start in the future. Square changes the\npromotion status to `ACTIVE` when the `start_date` is reached.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyPromotionTriggerLimit",
          "description": "Represents the number of times a buyer can earn points during a loyalty promotion.If this field is not set, buyers can trigger the promotion an unlimited number of times to earn points during\nthe time that the promotion is available.\n\nA purchase that is disqualified from earning points because of this limit might qualify for another active promotion.\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "interval",
              "description": "The time period the limit applies to.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "LoyaltyPromotionTriggerLimitInterval",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "times",
              "description": "The maximum number of times a buyer can trigger the promotion during the specified `interval`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "LoyaltyPromotionTriggerLimitInterval",
          "description": "Indicates the time period that the trigger limit applies to,\nwhich is used to determine the number of times a buyer can earn points for a loyalty promotion.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ALL_TIME",
              "description": "The limit applies to the entire time that the promotion is active. For example, if `times`\nis set to 1 and `time_period` is set to `ALL_TIME`, a buyer can earn promotion points a maximum\nof one time during the promotion.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DAY",
              "description": "The limit applies per day, according to the `available_time` schedule specified for the promotion.\nFor example, if the `times` field of the trigger limit is set to 1, a buyer can trigger the promotion\na maximum of once per day.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyReward",
          "description": "Represents a contract to redeem loyalty points for a reward tier discount.Loyalty rewards can be in an ISSUED, REDEEMED, or DELETED state. \nFor more information, see [Manage loyalty rewards](https://developer.squareup.com/docs/loyalty-api/loyalty-rewards).\nPermissions: LOYALTY_READ",
          "fields": [
            {
              "name": "createdAt",
              "description": "The timestamp when the reward was created, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The Square-assigned ID of the loyalty reward.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loyaltyAccount",
              "description": "The Square-assigned ID of the loyalty account to which the reward belongs.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyAccount",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "order",
              "description": "The Square-assigned ID of the order to which the reward is attached.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Order",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "points",
              "description": "The number of loyalty points used for the reward.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "redeemedAt",
              "description": "The timestamp when the reward was redeemed, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "rewardTier",
              "description": "The Square-assigned ID of the reward tier used to create the reward.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyProgramRewardTier",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "The status of a loyalty reward.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "LoyaltyRewardStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The timestamp when the reward was last updated, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "LoyaltyRewardConnection",
          "description": "A list of Loyalty Reward.\nPermissions:LOYALTY_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of Loyalty Reward.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "LoyaltyReward",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "LoyaltyRewardFilter",
          "description": "The set of search requirements.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "The ID of the loyalty reward to retrieve.",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "loyaltyAccountId",
              "description": "The ID of the loyalty account to which the loyalty reward belongs.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "status",
              "description": "The status of the loyalty reward.",
              "type": {
                "kind": "ENUM",
                "name": "LoyaltyRewardStatus",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "LoyaltyRewardStatus",
          "description": "The status of the loyalty reward.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DELETED",
              "description": "The reward is deleted.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ISSUED",
              "description": "The reward is issued.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REDEEMED",
              "description": "The reward is redeemed.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "MatchesPhraseFilterInput",
          "description": "Input type used to specify parameters for the `matchesPhrase` filtering operator.\n\nWhen `null` is passed, matches all documents.",
          "fields": null,
          "inputFields": [
            {
              "name": "phrase",
              "description": "The input phrase to search for.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "MatchesQueryAllowedEditsPerTermInput",
          "description": "Enumeration of allowed values for the `matchesQuery: {allowedEditsPerTerm: ...}` filter option.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DYNAMIC",
              "description": "Allowed edits per term is dynamically chosen based on the length of the term.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NONE",
              "description": "No allowed edits per term.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ONE",
              "description": "One allowed edit per term.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TWO",
              "description": "Two allowed edits per term.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "MatchesQueryFilterInput",
          "description": "Input type used to specify parameters for the `matchesQuery` filtering operator.\n\nWhen `null` is passed, matches all documents.",
          "fields": null,
          "inputFields": [
            {
              "name": "allowedEditsPerTerm",
              "description": "Number of allowed modifications per term to arrive at a match. For example, if set to 'ONE', the input\nterm 'glue' would match 'blue' but not 'clued', since the latter requires two modifications.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "MatchesQueryAllowedEditsPerTermInput",
                  "ofType": null
                }
              },
              "defaultValue": "DYNAMIC"
            },
            {
              "name": "query",
              "description": "The input query to search for.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "requireAllTerms",
              "description": "Set to `true` to match only if all terms in `query` are found, or\n`false` to only require one term to be found.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "defaultValue": "false"
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "UNION",
          "name": "MeasurementUnit",
          "description": "Represents a unit of measurement to use with a quantity, such as ounces or inches.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "MeasurementUnitAreaValue",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "MeasurementUnitCustom",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "MeasurementUnitGenericValue",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "MeasurementUnitLengthValue",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "MeasurementUnitTimeValue",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "MeasurementUnitVolumeValue",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "MeasurementUnitWeightValue",
              "ofType": null
            }
          ]
        },
        {
          "kind": "ENUM",
          "name": "MeasurementUnitArea",
          "description": "Unit of area used to measure a quantity.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "IMPERIAL_ACRE",
              "description": "The area is measured in acres.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IMPERIAL_SQUARE_INCH",
              "description": "The area is measured in square inches.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IMPERIAL_SQUARE_FOOT",
              "description": "The area is measured in square feet.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IMPERIAL_SQUARE_YARD",
              "description": "The area is measured in square yards.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IMPERIAL_SQUARE_MILE",
              "description": "The area is measured in square miles.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "METRIC_SQUARE_CENTIMETER",
              "description": "The area is measured in square centimeters.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "METRIC_SQUARE_METER",
              "description": "The area is measured in square meters.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "METRIC_SQUARE_KILOMETER",
              "description": "The area is measured in square kilometers.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "MeasurementUnitAreaValue",
          "description": "MeasurementUnitAreaValue\n\nPermissions:ITEMS_READ",
          "fields": [
            {
              "name": "value",
              "description": "Represents a standard area unit.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "MeasurementUnitArea",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "MeasurementUnitCustom",
          "description": "The information needed to define a custom unit, provided by the seller.\n\nPermissions:ITEMS_READ",
          "fields": [
            {
              "name": "abbreviation",
              "description": "The abbreviation of the custom unit, such as bsh (bushel). This appears in the cart for the Point of Sale app, and in reports.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The name of the custom unit, for example bushel",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "MeasurementUnitGeneric",
          "description": "The generic unit.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "UNIT",
              "description": "The generic unit.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "MeasurementUnitGenericValue",
          "description": "MeasurementUnitGenericValue\n\nPermissions:ITEMS_READ",
          "fields": [
            {
              "name": "value",
              "description": "Reserved for API integrations that lack the ability to specify a real measurement unit",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "MeasurementUnitGeneric",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "MeasurementUnitLength",
          "description": "The unit of length used to measure a quantity.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "IMPERIAL_INCH",
              "description": "The length is measured in inches.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IMPERIAL_FOOT",
              "description": "The length is measured in feet.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IMPERIAL_YARD",
              "description": "The length is measured in yards.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IMPERIAL_MILE",
              "description": "The length is measured in miles.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "METRIC_MILLIMETER",
              "description": "The length is measured in millimeters.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "METRIC_CENTIMETER",
              "description": "The length is measured in centimeters.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "METRIC_METER",
              "description": "The length is measured in meters.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "METRIC_KILOMETER",
              "description": "The length is measured in kilometers.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "MeasurementUnitLengthValue",
          "description": "MeasurementUnitLengthValue\n\nPermissions:ITEMS_READ",
          "fields": [
            {
              "name": "value",
              "description": "Represents a standard length unit.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "MeasurementUnitLength",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "MeasurementUnitTime",
          "description": "Unit of time used to measure a quantity (a duration).",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "GENERIC_MILLISECOND",
              "description": "The time is measured in milliseconds.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GENERIC_SECOND",
              "description": "The time is measured in seconds.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GENERIC_MINUTE",
              "description": "The time is measured in minutes.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GENERIC_HOUR",
              "description": "The time is measured in hours.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GENERIC_DAY",
              "description": "The time is measured in days.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "MeasurementUnitTimeValue",
          "description": "MeasurementUnitTimeValue\n\nPermissions:ITEMS_READ",
          "fields": [
            {
              "name": "value",
              "description": "Represents a standard unit of time.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "MeasurementUnitTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "MeasurementUnitUnitType",
          "description": "Describes the type of this unit and indicates which field contains the unit information.This is an ‘open’ enum.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "TYPE_CUSTOM",
              "description": "The unit details are contained in the custom_unit field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TYPE_AREA",
              "description": "The unit details are contained in the area_unit field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TYPE_LENGTH",
              "description": "The unit details are contained in the length_unit field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TYPE_VOLUME",
              "description": "The unit details are contained in the volume_unit field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TYPE_WEIGHT",
              "description": "The unit details are contained in the weight_unit field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TYPE_GENERIC",
              "description": "The unit details are contained in the generic_unit field.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "MeasurementUnitVolume",
          "description": "The unit of volume used to measure a quantity.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "GENERIC_FLUID_OUNCE",
              "description": "The volume is measured in ounces.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GENERIC_SHOT",
              "description": "The volume is measured in shots.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GENERIC_CUP",
              "description": "The volume is measured in cups.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GENERIC_PINT",
              "description": "The volume is measured in pints.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GENERIC_QUART",
              "description": "The volume is measured in quarts.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GENERIC_GALLON",
              "description": "The volume is measured in gallons.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IMPERIAL_CUBIC_INCH",
              "description": "The volume is measured in cubic inches.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IMPERIAL_CUBIC_FOOT",
              "description": "The volume is measured in cubic feet.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IMPERIAL_CUBIC_YARD",
              "description": "The volume is measured in cubic yards.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "METRIC_MILLILITER",
              "description": "The volume is measured in metric milliliters.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "METRIC_LITER",
              "description": "The volume is measured in metric liters.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "MeasurementUnitVolumeValue",
          "description": "MeasurementUnitVolumeValue\n\nPermissions:ITEMS_READ",
          "fields": [
            {
              "name": "value",
              "description": "Represents a standard volume unit.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "MeasurementUnitVolume",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "MeasurementUnitWeight",
          "description": "Unit of weight used to measure a quantity.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "IMPERIAL_WEIGHT_OUNCE",
              "description": "The weight is measured in ounces.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IMPERIAL_POUND",
              "description": "The weight is measured in pounds.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IMPERIAL_STONE",
              "description": "The weight is measured in stones.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "METRIC_MILLIGRAM",
              "description": "The weight is measured in milligrams.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "METRIC_GRAM",
              "description": "The weight is measured in grams.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "METRIC_KILOGRAM",
              "description": "The weight is measured in kilograms.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "MeasurementUnitWeightValue",
          "description": "MeasurementUnitWeightValue\n\nPermissions:ITEMS_READ",
          "fields": [
            {
              "name": "value",
              "description": "Represents a standard unit of weight or mass.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "MeasurementUnitWeight",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Merchant",
          "description": "A Square seller.\n\nPermissions:MERCHANT_PROFILE_READ",
          "fields": [
            {
              "name": "id",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "showOfflinePaymentModal",
              "description": "Returns offline payment modal status for the merchant.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "showOfflinePaymentModalAckBy",
              "description": "Returns offline payment modal ack by date for the merchant.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "country",
              "description": "The country associated with the merchant.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "Country",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "currency",
              "description": "The currency associated with the merchant.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "Currency",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "businessName",
              "description": "The business name of the merchant.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The time when the merchant was created, in RFC 3339 format. For more information, see Working with Dates.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "language",
              "description": "The language associated with the merchant account.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "LanguageCode",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locations",
              "description": "The locations for the merchant.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LocationConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mainLocation",
              "description": "The main location of the merchant.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "The merchant's status.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "MerchantStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "MerchantAggregatedValues",
          "description": "Type used to perform aggregation computations on `Merchant` fields.",
          "fields": [
            {
              "name": "id",
              "description": "Computed aggregate values for the `id` field:\n\n> The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "MerchantConnection",
          "description": "List of Merchant.\n\nPermissions:MERCHANT_PROFILE_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "A list of Merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Merchant",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "MerchantFilterInput",
          "description": "The Merchant ID to filter with.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "The ID of the Merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilterInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "MerchantGroupedBy",
          "description": "Type used to specify the `Merchant` fields to group by for aggregations.",
          "fields": [
            {
              "name": "id",
              "description": "The `id` field value for this group:\n\n> The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "MerchantPublicCapability",
          "description": "The public capabilities a merchant might have.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "IS_SANDBOX",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IS_TEST_MERCHANT",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "POINT_OF_SALE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SELL_CANNABIS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_CAPABILITY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "MerchantRefFilterInput",
          "description": "Input type used to specify filters on `Merchant` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Used to filter on the `id` field:\n\n> The Square-issued ID of the merchant.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "MerchantStatus",
          "description": "Merchant status.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ACTIVE",
              "description": "A fully operational merchant account. The merchant can interact with Square products and APIs.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DELETED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INACTIVE",
              "description": "A functionally limited merchant account. The merchant can only have limited interaction via Square APIs. The merchant cannot log in or access the seller dashboard.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Metadata",
          "description": "Application-defined data attached to an object. Metadata fields are intended to store descriptive references or\nassociations with an entity in another system or store brief information about the object. Square does not process\nthis field; it only stores and returns it in relevant API calls. Do not use metadata to store any sensitive\ninformation (personally identifiable information, card details, etc.).\n\nKeys written by applications must be 60 characters or less and must be in the character set [a-zA-Z0-9_-]. Entries\nmay also include metadata generated by Square. These keys are prefixed with a namespace, separated from the key with\na ':' character.\n\nValues have a max length of 255 characters.\n\nAn application may have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same application.\n\nSee [Metadata](https://developer.squareup.com/docs/orders-api/metadata) for more information.",
          "fields": [
            {
              "name": "entries",
              "description": "A list of entries.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetadataEntry",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "MetadataEntry",
          "description": "A key-value pair for Metadata.",
          "fields": [
            {
              "name": "key",
              "description": "The key of the Metadata entry",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": "The value of the Metadata entry",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Mode",
          "description": "A group of settings that tailor a POS device for the type of business a seller is running.",
          "fields": [
            {
              "name": "id",
              "description": "The ID of the mode.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ModeAggregatedValues",
          "description": "Type used to perform aggregation computations on `Mode` fields.",
          "fields": [
            {
              "name": "id",
              "description": "Computed aggregate values for the `id` field:\n\n> The ID of the mode.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ModeGroupedBy",
          "description": "Type used to specify the `Mode` fields to group by for aggregations.",
          "fields": [
            {
              "name": "id",
              "description": "The `id` field value for this group:\n\n> The ID of the mode.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ModeRefFilterInput",
          "description": "Input type used to specify filters on `Mode` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Used to filter on the `id` field:\n\n> The ID of the mode.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ModifierLocationOverride",
          "description": "Location-specific overrides for specified properties of a `CatalogModifier` object.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "priceMoney",
              "description": "The overridden price at the specified location. If this is unspecified, the modifier price is not overridden.\nThe modifier becomes free of charge at the specified location, when this `price_money` field is set to 0.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "soldOut",
              "description": "Indicates whether the modifier is sold out at the specified location or not. As an example, for cheese (modifier) burger (item), when the modifier is sold out, it is the cheese, but not the burger, that is sold out.\nThe seller can manually set this sold out status. Attempts by an application to set this attribute are ignored.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the `Location` object representing the location. This can include a deactivated location.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Money",
          "description": "Represents an amount of money.\n\nMoney fields can be signed or unsigned. Fields that do not explicitly define whether they are signed or unsigned are\nconsidered unsigned and can only hold positive amounts. For signed fields, the sign of the value indicates the purpose\nof the money transfer. See\n[Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts) for\nmore information.",
          "fields": [
            {
              "name": "amount",
              "description": "The amount of money, in the smallest denomination of the currency indicated by currency. For example, when currency\nis USD, amount is in cents. Monetary amounts can be positive or negative. See the specific field description to\ndetermine the meaning of the sign in a particular case.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "currency",
              "description": "The type of currency in currency code.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "Currency",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "MoneyFieldsListFilterInput",
          "description": "Input type used to specify filters on a `Money` object referenced directly\nor transitively from a list field that has been configured to index each leaf field as\nits own flattened list of values.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "amount",
              "description": "Used to filter on the `amount` field:\n\n> The amount of money, in the smallest denomination of the currency\n> indicated by `currency`. For example, when `currency` is `USD`, `amount` is\n> in cents. Monetary amounts can be positive or negative. See the specific\n> field description to determine the meaning of the sign in a particular case.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "JsonSafeLongListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "currency",
              "description": "Used to filter on the `currency` field:\n\n> The type of currency, in __ISO 4217 format__. For example, the currency\n> code for US dollars is `USD`.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CurrencyListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "MoneyFilterInput",
          "description": "Input type used to specify filters on `Money` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "amount",
              "description": "Used to filter on the `amount` field:\n\n> The amount of money, in the smallest denomination of the currency\n> indicated by `currency`. For example, when `currency` is `USD`, `amount` is\n> in cents. Monetary amounts can be positive or negative. See the specific\n> field description to determine the meaning of the sign in a particular case.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "JsonSafeLongFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "currency",
              "description": "Used to filter on the `currency` field:\n\n> The type of currency, in __ISO 4217 format__. For example, the currency\n> code for US dollars is `USD`.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CurrencyFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "NetworkInterfaceComponentDetails",
          "description": "Structured data for a `Network` interface, set for DeviceComponents of type `NETWORK_INTERFACE`.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "ipAddressV4",
              "description": "The string representation of the device's IPv4 address.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "macAddress",
              "description": "The MAC address of the device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "NonNumericAggregatedValues",
          "description": "A return type used from aggregations to provided aggregated values over non-numeric fields.",
          "fields": [
            {
              "name": "approximateDistinctValueCount",
              "description": "An approximation of the number of unique values for this field within this grouping.\n\nThe approximation uses the HyperLogLog++ algorithm from the [HyperLogLog in\nPractice](https://research.google.com/pubs/archive/40671.pdf)\npaper. The accuracy of the returned value varies based on the specific dataset, but\nit usually differs from the true distinct value count by less than 7%.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OAuthScope",
          "description": "OAuth scopes",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "APPOINTMENTS_ALL_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "APPOINTMENTS_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BANK_ACCOUNTS_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CASH_DRAWER_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUSTOMERS_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DISPUTES_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EMPLOYEES_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GIFTCARDS_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVENTORY_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVOICES_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEMS_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOYALTY_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MERCHANT_PROFILE_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NONE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ONLINE_STORE_SITE_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ONLINE_STORE_SNIPPETS_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ORDERS_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYMENTS_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SETTLEMENTS_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUBSCRIPTIONS_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TIMECARDS_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TIMECARDS_SETTINGS_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VENDOR_READ",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OnboardingEntryPoint",
          "description": "The square one p&p supported and unsupported onboarding entry point",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DASHBOARD",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DO_NOT_USE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GOLDEN_PATH",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LEGACY_POS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PNP_ELIGIBLE_ONBOARDING",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PNP_INELIGIBLE_ONBOARDING",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_ONLINE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUPERPOS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OnboardingEntryPointInput",
          "description": "Input version of OnboardingEntryPoint",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DASHBOARD",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DO_NOT_USE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GOLDEN_PATH",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LEGACY_POS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PNP_ELIGIBLE_ONBOARDING",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PNP_INELIGIBLE_ONBOARDING",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_ONLINE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUPERPOS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OpenDisputeDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of any open disputes.",
          "fields": [
            {
              "name": "paymentId",
              "description": "Unique ID for the payment involved in the open dispute.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "OpenDisputeDetailsFilterInput",
          "description": "Input type used to specify filters on `OpenDisputeDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> Unique ID for the payment involved in the open dispute.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Order",
          "description": "References to Orders subgraph entities\n\nPermissions:ORDERS_READ",
          "fields": [
            {
              "name": "id",
              "description": "The Square-issued ID of the Order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "closedAt",
              "description": "The timestamp for when the order reached a terminal state, in RFC 3339 format (for example \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The timestamp for when the order was created, at server side, in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customer",
              "description": "The ID of the customer associated with the order.\n  \nYou should specify a `customer_id` on the order (or the payment) to ensure that transactions\nare reliably linked to customers. Omitting this field might result in the creation of new\n[instant profiles](https://developer.squareup.com/docs/customers-api/what-it-does#instant-profiles).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Customer",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "discounts",
              "description": "The list of all discounts associated with the order.\n  \nDiscounts can be scoped to either `ORDER` or `LINE_ITEM`. For discounts scoped to `LINE_ITEM`,\nan `OrderLineItemAppliedDiscount` must be added to each line item that the discount applies to.\nFor discounts with `ORDER` scope, the server generates an `OrderLineItemAppliedDiscount`\nfor every line item.\n  \n__IMPORTANT__: If `LINE_ITEM` scope is set on any discounts in this field, using the deprecated\n`line_items.discounts` field results in an error. Use `line_items.applied_discounts`\ninstead.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderLineItemDiscount",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fulfillments",
              "description": "Details about order fulfillment.\n  \nOrders can only be created with at most one fulfillment. However, orders returned\nby the API might contain multiple fulfillments.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderFulfillment",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lineItems",
              "description": "The line items included in the order.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderLineItem",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the seller location that this order is associated with.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "metadata",
              "description": "Application-defined data attached to this order. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (such as personally\nidentifiable information or card details).\n  \nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n  \nValues have a maximum length of 255 characters.\n  \nAn application can have up to 10 entries per metadata field.\n  \nEntries written by applications are private and can only be read or modified by the same\napplication.\n  \nFor more information, see  [Metadata](https://developer.squareup.com/docs/build-basics/metadata).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Metadata",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "netAmountDue",
              "description": "The net amount of money due on the order.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `netAmountDueMoney` instead."
            },
            {
              "name": "netAmountDueMoney",
              "description": "The net amount of money due on the order.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "netAmounts",
              "description": "The net money amounts (sale money - return money).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OrderMoneyAmounts",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pricingOptions",
              "description": "Pricing options for an order. The options affect how the order's price is calculated.\nThey can be used, for example, to apply automatic price adjustments that are based on\npreconfigured pricing rules.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OrderPricingOptions",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "referenceId",
              "description": "A client-specified ID to associate an entity in another system\nwith this order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "refunds",
              "description": "The refunds that are part of this order.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Refund",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "returnAmounts",
              "description": "The rollup of the returned money amounts.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OrderMoneyAmounts",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "returns",
              "description": "A collection of items from sale orders being returned in this one. Normally part of an\nitemized return or exchange. There is exactly one `Return` object per sale `Order` being\nreferenced.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderReturn",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "rewards",
              "description": "A set-like list of Rewards that have been added to the Order.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Reward",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "roundingAdjustment",
              "description": "A positive rounding adjustment to the total of the order. This adjustment is commonly\nused to apply cash rounding when the minimum unit of account is smaller than the lowest physical\ndenomination of the currency.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OrderRoundingAdjustment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "serviceCharges",
              "description": "A list of service charges applied to the order.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderServiceCharge",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "source",
              "description": "The origination details of the order.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OrderSource",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "The current state of the order.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderState",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "taxes",
              "description": "The list of all taxes associated with the order.\n  \nTaxes can be scoped to either `ORDER` or `LINE_ITEM`. For taxes with `LINE_ITEM` scope, an\n`OrderLineItemAppliedTax` must be added to each line item that the tax applies to. For taxes\nwith `ORDER` scope, the server generates an `OrderLineItemAppliedTax` for every line item.\n  \nOn reads, each tax in the list includes the total amount of that tax applied to the order.\n  \n__IMPORTANT__: If `LINE_ITEM` scope is set on any taxes in this field, using the deprecated\n`line_items.taxes` field results in an error. Use `line_items.applied_taxes`\ninstead.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderLineItemTax",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tenders",
              "description": "The tenders that were used to pay for the order.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INTERFACE",
                  "name": "OrderTender",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ticketName",
              "description": "A short-term identifier for the order (such as a customer first name,\ntable number, or auto-generated order number that resets daily).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalDiscount",
              "description": "The total amount of discount money to collect for the order.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `totalDiscountMoney` instead."
            },
            {
              "name": "totalDiscountMoney",
              "description": "The total amount of discount money to collect for the order.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalMoney",
              "description": "The total amount of money to collect for the order.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalServiceCharge",
              "description": "The total amount of money collected in service charges for the order.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `totalServiceChargeMoney` instead."
            },
            {
              "name": "totalServiceChargeMoney",
              "description": "The total amount of money collected in service charges for the order.\n  \nNote: `total_service_charge_money` is the sum of `applied_money` fields for each individual\nservice charge. Therefore, `total_service_charge_money` only includes inclusive tax amounts,\nnot additive tax amounts.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalTax",
              "description": "The total amount of tax money to collect for the order.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `totalTaxMoney` instead."
            },
            {
              "name": "totalTaxMoney",
              "description": "The total amount of tax money to collect for the order.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalTip",
              "description": "The total amount of tip money to collect for the order.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `totalTipMoney` instead."
            },
            {
              "name": "totalTipMoney",
              "description": "The total amount of tip money to collect for the order.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The timestamp for when the order was last updated, at server side, in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version number, which is incremented each time an update is committed to the order.\nOrders not created through the API do not include a version number and\ntherefore cannot be updated.\n  \n[Read more about working with versions](https://developer.squareup.com/docs/orders-api/manage-orders/update-orders).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderBankAccountTender",
          "description": "Represents the details of a tender with `type` `BANK_ACCOUNT`.See BankAccountPaymentDetails\nfor more exposed details of a bank account payment.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The total amount of the tender, including `tip_money`. If the tender has a `payment_id`, the `total_money` of the corresponding Payment will be equal to the `amount_money` of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `amountMoney` instead."
            },
            {
              "name": "amountMoney",
              "description": "The total amount of the tender, including `tip_money`. If the tender has a `payment_id`,\nthe `total_money` of the corresponding Payment will be equal to the\n`amount_money` of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The timestamp for when the tender was created, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customer",
              "description": "If the tender is associated with a customer or represents a customer's card on file,\nthis is the ID of the associated customer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Customer",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The tender's unique ID. It is the associated payment ID.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the transaction's associated location.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "note",
              "description": "An optional note associated with the tender at the time of payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payment",
              "description": "The ID of the Payment that corresponds to this tender.\nThis value is only present for payments created with the v2 Payments API.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Payment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "processingFee",
              "description": "The amount of any Square processing fees applied to the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `processingFeeMoney` instead."
            },
            {
              "name": "processingFeeMoney",
              "description": "The amount of any Square processing fees applied to the tender.\n  \nThis field is not immediately populated when a new transaction is created.\nIt is usually available after about ten seconds.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "The bank account payment's current state.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderBankAccountTenderStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tip",
              "description": "The tip's amount of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `tipMoney` instead."
            },
            {
              "name": "tipMoney",
              "description": "The tip's amount of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "transactionId",
              "description": "The ID of the tender's associated transaction.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of tender, such as `CARD` or `CASH`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderTenderType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "OrderTender",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderBankAccountTenderStatus",
          "description": "Indicates the bank account payment's current status.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "COMPLETED",
              "description": "The bank account payment has been completed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FAILED",
              "description": "The bank account payment failed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PENDING",
              "description": "The bank account payment is in progress.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderBuyNowPayLaterTender",
          "description": "Represents the details of a tender with `type` `BUY_NOW_PAY_LATER`.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The total amount of the tender, including `tip_money`. If the tender has a `payment_id`, the `total_money` of the corresponding Payment will be equal to the `amount_money` of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `amountMoney` instead."
            },
            {
              "name": "amountMoney",
              "description": "The total amount of the tender, including `tip_money`. If the tender has a `payment_id`,\nthe `total_money` of the corresponding Payment will be equal to the\n`amount_money` of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "buyNowPayLaterBrand",
              "description": "The Buy Now Pay Later brand.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderBuyNowPayLaterTenderBrand",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The timestamp for when the tender was created, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customer",
              "description": "If the tender is associated with a customer or represents a customer's card on file,\nthis is the ID of the associated customer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Customer",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The tender's unique ID. It is the associated payment ID.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the transaction's associated location.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "note",
              "description": "An optional note associated with the tender at the time of payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payment",
              "description": "The ID of the Payment that corresponds to this tender.\nThis value is only present for payments created with the v2 Payments API.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Payment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "processingFee",
              "description": "The amount of any Square processing fees applied to the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `processingFeeMoney` instead."
            },
            {
              "name": "processingFeeMoney",
              "description": "The amount of any Square processing fees applied to the tender.\n  \nThis field is not immediately populated when a new transaction is created.\nIt is usually available after about ten seconds.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "The buy now pay later payment's current state (such as `AUTHORIZED` or\n`CAPTURED`). See TenderBuyNowPayLaterDetailsStatus\nfor possible values.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderBuyNowPayLaterTenderStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tip",
              "description": "The tip's amount of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `tipMoney` instead."
            },
            {
              "name": "tipMoney",
              "description": "The tip's amount of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "transactionId",
              "description": "The ID of the tender's associated transaction.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of tender, such as `CARD` or `CASH`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderTenderType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "OrderTender",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderBuyNowPayLaterTenderBrand",
          "description": "Orders buy now pay later tender brands enum.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AFTERPAY",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER_BRAND",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderBuyNowPayLaterTenderStatus",
          "description": "Orders buy now pay later detail status enum.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AUTHORIZED",
              "description": "The buy now pay later payment has been authorized but not yet captured.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CAPTURED",
              "description": "The buy now pay later payment was authorized and subsequently captured (i.e., completed).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FAILED",
              "description": "The buy now pay later payment failed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VOIDED",
              "description": "The buy now pay later payment was authorized and subsequently voided (i.e., canceled).",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderCardTender",
          "description": "Represents additional details of a tender with `type` `CARD` or `SQUARE_GIFT_CARD`\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The total amount of the tender, including `tip_money`. If the tender has a `payment_id`, the `total_money` of the corresponding Payment will be equal to the `amount_money` of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `amountMoney` instead."
            },
            {
              "name": "amountMoney",
              "description": "The total amount of the tender, including `tip_money`. If the tender has a `payment_id`,\nthe `total_money` of the corresponding Payment will be equal to the\n`amount_money` of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "card",
              "description": "The credit card's non-confidential details.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Card",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The timestamp for when the tender was created, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customer",
              "description": "If the tender is associated with a customer or represents a customer's card on file,\nthis is the ID of the associated customer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Customer",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "entryMethod",
              "description": "The method used to enter the card's details for the transaction.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderCardTenderEntryMethod",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The tender's unique ID. It is the associated payment ID.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the transaction's associated location.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "note",
              "description": "An optional note associated with the tender at the time of payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payment",
              "description": "The ID of the Payment that corresponds to this tender.\nThis value is only present for payments created with the v2 Payments API.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Payment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "processingFee",
              "description": "The amount of any Square processing fees applied to the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `processingFeeMoney` instead."
            },
            {
              "name": "processingFeeMoney",
              "description": "The amount of any Square processing fees applied to the tender.\n  \nThis field is not immediately populated when a new transaction is created.\nIt is usually available after about ten seconds.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "The credit card payment's current state (such as `AUTHORIZED` or\n`CAPTURED`). See TenderCardDetailsStatus\nfor possible values.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderCardTenderStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tip",
              "description": "The tip's amount of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `tipMoney` instead."
            },
            {
              "name": "tipMoney",
              "description": "The tip's amount of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "transactionId",
              "description": "The ID of the tender's associated transaction.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of tender, such as `CARD` or `CASH`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderTenderType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "OrderTender",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderCardTenderEntryMethod",
          "description": "Indicates the method used to enter the card's details.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CONTACTLESS",
              "description": "The card was processed via a contactless (i.e., NFC) transaction\nwith a Square reader.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EMV",
              "description": "The card was processed via EMV with a Square reader.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "KEYED",
              "description": "The card information was keyed manually into Square Point of Sale or a\nSquare-hosted web form.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ON_FILE",
              "description": "The buyer's card details were already on file with Square.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SWIPED",
              "description": "The card was swiped through a Square reader or Square stand.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderCardTenderStatus",
          "description": "Indicates the card transaction's current status.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AUTHORIZED",
              "description": "The card transaction has been authorized but not yet captured.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CAPTURED",
              "description": "The card transaction was authorized and subsequently captured (i.e., completed).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FAILED",
              "description": "The card transaction failed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VOIDED",
              "description": "The card transaction was authorized and subsequently voided (i.e., canceled).",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderCashTender",
          "description": "Represents the details of a tender with `type` `CASH`.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The total amount of the tender, including `tip_money`. If the tender has a `payment_id`, the `total_money` of the corresponding Payment will be equal to the `amount_money` of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `amountMoney` instead."
            },
            {
              "name": "amountMoney",
              "description": "The total amount of the tender, including `tip_money`. If the tender has a `payment_id`,\nthe `total_money` of the corresponding Payment will be equal to the\n`amount_money` of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "buyerTenderedMoney",
              "description": "The total amount of cash provided by the buyer, before change is given.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "changeBackMoney",
              "description": "The amount of change returned to the buyer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The timestamp for when the tender was created, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customer",
              "description": "If the tender is associated with a customer or represents a customer's card on file,\nthis is the ID of the associated customer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Customer",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The tender's unique ID. It is the associated payment ID.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the transaction's associated location.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "note",
              "description": "An optional note associated with the tender at the time of payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payment",
              "description": "The ID of the Payment that corresponds to this tender.\nThis value is only present for payments created with the v2 Payments API.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Payment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "processingFee",
              "description": "The amount of any Square processing fees applied to the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `processingFeeMoney` instead."
            },
            {
              "name": "processingFeeMoney",
              "description": "The amount of any Square processing fees applied to the tender.\n  \nThis field is not immediately populated when a new transaction is created.\nIt is usually available after about ten seconds.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tip",
              "description": "The tip's amount of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `tipMoney` instead."
            },
            {
              "name": "tipMoney",
              "description": "The tip's amount of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "transactionId",
              "description": "The ID of the tender's associated transaction.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of tender, such as `CARD` or `CASH`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderTenderType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "OrderTender",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderConnection",
          "description": "A list of Orders.\n\nPermissions:ORDERS_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of Order.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Order",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderCurbsidePickup",
          "description": "Specific details for curbside pickup.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "buyerArrivedAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the buyer arrived and is waiting for pickup. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "curbsideDetails",
              "description": "Specific details for curbside pickup, such as parking number and vehicle model.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderDelivery",
          "description": "Describes delivery details of an order fulfillment.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "cancelReason",
              "description": "The delivery cancellation reason. Max length: 100 characters.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canceledAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the fulfillment was canceled. This field is automatically\nset when the fulfillment `state` changes to `CANCELED`.\n  \nThe timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "completedAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicates when the seller completed the fulfillment.\nThis field is automatically set when  fulfillment `state` changes to `COMPLETED`.\nThe timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "courierPickupAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when an order can be picked up by the courier for delivery.\nThe timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "courierPickupWindowDuration",
              "description": "The time period after `courier_pickup_at` in which the courier should pick up the order.\nThe duration must be in RFC 3339 format (for example, \"P1W3D\").\n  \nExample for 2 days, 12 hours, 30 minutes, and 15 seconds: P2DT12H30M15S",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Duration",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "courierProviderName",
              "description": "The name of the courier provider.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "courierSupportPhoneNumber",
              "description": "The support phone number of the courier.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deliverAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nthat represents the start of the delivery period.\nWhen the fulfillment `schedule_type` is `ASAP`, the field is automatically\nset to the current time plus the `prep_time_duration`.\nOtherwise, the application can set this field while the fulfillment `state` is\n`PROPOSED`, `RESERVED`, or `PREPARED` (any time before the\nterminal state such as `COMPLETED`, `CANCELED`, and `FAILED`).\n  \nThe timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deliveredAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the fulfillment was delivered to the recipient.\nThe timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deliveryWindowDuration",
              "description": "The time period after `deliver_at` in which to deliver the order.\nApplications can set this field when the fulfillment `state` is\n`PROPOSED`, `RESERVED`, or `PREPARED` (any time before the terminal state\nsuch as `COMPLETED`, `CANCELED`, and `FAILED`).\n  \nThe duration must be in RFC 3339 format (for example, \"P1W3D\").\n  \nExample for 2 days, 12 hours, 30 minutes, and 15 seconds: P2DT12H30M15S",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Duration",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "dropoffNotes",
              "description": "A note to provide additional instructions about how to deliver the order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "externalDeliveryId",
              "description": "The identifier for the delivery created by the third-party courier service.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inProgressAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicates when the seller started processing the fulfillment.\nThis field is automatically set when the fulfillment `state` changes to `RESERVED`.\nThe timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isNoContactDelivery",
              "description": "Whether the delivery is preferred to be no contact.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "managedDelivery",
              "description": "The flag to indicate the delivery is managed by a third party (ie DoorDash), which means\nwe may not receive all recipient information for PII purposes.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "note",
              "description": "Provides additional instructions about the delivery fulfillment.\nIt is displayed in the Square Point of Sale application and set by the API.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "placedAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the fulfillment was placed.\nThe timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").\n  \nMust be in RFC 3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\".\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "prepTimeDuration",
              "description": "The duration of time it takes to prepare and deliver this fulfillment.\nThe duration must be in RFC 3339 format (for example, \"P1W3D\").\n  \nExample for 2 days, 12 hours, 30 minutes, and 15 seconds: P2DT12H30M15S",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Duration",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "readyAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the seller marked the fulfillment as ready for\ncourier pickup. This field is automatically set when the fulfillment `state` changes\nto PREPARED.\nThe timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "recipient",
              "description": "The contact information for the person to receive the fulfillment.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OrderFulfillmentRecipient",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "rejectedAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the fulfillment was rejected. This field is\nautomatically set when the fulfillment `state` changes to `FAILED`.\nThe timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scheduleType",
              "description": "Indicates the fulfillment delivery schedule type. If `SCHEDULED`, then\n`deliver_at` is required. If `ASAP`, then `prep_time_duration` is required. The default is `SCHEDULED`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderDeliveryScheduleType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "squareDeliveryId",
              "description": "The identifier for the delivery created by Square.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderDeliveryScheduleType",
          "description": "The schedule type of the delivery fulfillment.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ASAP",
              "description": "Indicates that the fulfillment to deliver as soon as possible and should be prepared\nimmediately.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCHEDULED",
              "description": "Indicates the fulfillment to deliver at a scheduled deliver time.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "OrderFilter",
          "description": "OrderFilter is used for filtering a query with Order",
          "fields": null,
          "inputFields": [
            {
              "name": "closedAt",
              "description": "Time range for filtering on the closedAt timestamp. If you use this value, you must also set the orderBy of the query to closedAt.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TimeRangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "Time range for filtering on the createdAt timestamp. If you use this value, you must also set the orderBy of the query to createdAt.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TimeRangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "customer",
              "description": "Filter by customers associated with the order.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "fulfillmentState",
              "description": "List of fulfillment states to filter for. Will return orders if any of its fulfillments match any of the fulfillment states listed in this field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OrderFulfillmentStateFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "fulfillmentType",
              "description": "List of fulfillment types to filter for. Will return orders if any of its fulfillments match any of the fulfillment types listed in this field.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OrderFulfillmentTypeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "The order IDs to filter with.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "location",
              "description": "The location IDs for the orders to query. All locations must belong to the same merchant.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "The merchant IDs for the orders to query.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "sourceName",
              "description": "Filters by Source name. Will return any orders with with a source.name that matches any of the listed source names.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicStringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "state",
              "description": "States to filter for.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OrderStateFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Time range for filtering on the updatedAt timestamp. If you use this value, you must also set the orderBy of the query to updatedAt.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TimeRangeFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderFulfillment",
          "description": "Contains details about how to fulfill this order.Orders can only be created with at most one fulfillment using the API.\nHowever, orders returned by the Orders API might contain multiple fulfillments because sellers can create multiple fulfillments using Square products such as Square Online.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "delivery",
              "description": "Describes delivery details of an order fulfillment.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OrderDelivery",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "entries",
              "description": "A list of entries pertaining to the fulfillment of an order. Each entry must reference\na valid `uid` for an order line item in the `line_item_uid` field, as well as a `quantity` to\nfulfill.\n  \nMultiple entries can reference the same line item `uid`, as long as the total quantity among\nall fulfillment entries referencing a single line item does not exceed the quantity of the\norder's line item itself.\n  \nAn order cannot be marked as `COMPLETED` before all fulfillments are `COMPLETED`,\n`CANCELED`, or `FAILED`. Fulfillments can be created and completed independently\nbefore order completion.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderFulfillmentFulfillmentEntry",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lineItemApplication",
              "description": "Describes what order line items this fulfillment applies to.\nIt can be `ALL` or `ENTRY_LIST` with a supplied list of fulfillment entries.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderFulfillmentLineItemApplication",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "metadata",
              "description": "Application-defined data attached to this fulfillment. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (such as personally\nidentifiable information or card details).\n  \nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n  \nValues have a maximum length of 255 characters.\n  \nAn application can have up to 10 entries per metadata field.\n  \nEntries written by applications are private and can only be read or modified by the same\napplication.\n  \nFor more information, see [Metadata](https://developer.squareup.com/docs/build-basics/metadata).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Metadata",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pickup",
              "description": "Contains details for a pickup fulfillment. These details are required when the fulfillment\ntype is `PICKUP`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OrderPickup",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shipment",
              "description": "Contains details for a shipment fulfillment. These details are required when the fulfillment type\nis `SHIPMENT`.\n  \nA shipment fulfillment's relationship to fulfillment `state`:\n`PROPOSED`: A shipment is requested.\n`RESERVED`: Fulfillment in progress. Shipment processing.\n`PREPARED`: Shipment packaged. Shipping label created.\n`COMPLETED`: Package has been shipped.\n`CANCELED`: Shipment has been canceled.\n`FAILED`: Shipment has failed.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OrderShipment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "The state of the fulfillment.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderFulfillmentState",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of the fulfillment.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderFulfillmentType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uid",
              "description": "A unique ID that identifies the fulfillment only within this order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderFulfillmentFulfillmentEntry",
          "description": "Links an order line item to a fulfillment.Each entry must reference\na valid `uid` for an order line item in the `line_item_uid` field, as well as a `quantity` to\nfulfill.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "lineItemUid",
              "description": "The `uid` from the order line item.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "metadata",
              "description": "Application-defined data attached to this fulfillment entry. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (such as personally\nidentifiable information or card details).\n  \nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n  \nValues have a maximum length of 255 characters.\n  \nAn application can have up to 10 entries per metadata field.\n  \nEntries written by applications are private and can only be read or modified by the same\napplication.\n  \nFor more information, see [Metadata](https://developer.squareup.com/docs/build-basics/metadata).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Metadata",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "quantity",
              "description": "The quantity of the line item being fulfilled, formatted as a decimal number.\nFor example, `\"3\"`.\n  \nFulfillments for line items with a `quantity_unit` can have non-integer quantities.\nFor example, `\"1.70000\"`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Decimal",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uid",
              "description": "A unique ID that identifies the fulfillment entry only within this order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderFulfillmentLineItemApplication",
          "description": "The `line_item_application` describes what order line items this fulfillment applies\nto.It can be `ALL` or `ENTRY_LIST` with a supplied list of fulfillment entries.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ALL",
              "description": "If `ALL`, `entries` must be unset.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ENTRY_LIST",
              "description": "If `ENTRY_LIST`, supply a list of `entries`.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderFulfillmentRecipient",
          "description": "Information about the fulfillment recipient.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "address",
              "description": "The address of the fulfillment recipient. This field is required.\n  \nIf provided, the address overrides the corresponding customer profile value\nindicated by `customer_id`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Address",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customer",
              "description": "The ID of the customer associated with the fulfillment.\n  \nIf `customer_id` is provided, the fulfillment recipient's `display_name`,\n`email_address`, and `phone_number` are automatically populated from the\ntargeted customer profile. If these fields are set in the request, the request\nvalues override the information from the customer profile. If the\ntargeted customer profile does not contain the necessary information and\nthese fields are left unset, the request results in an error.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Customer",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "displayName",
              "description": "The display name of the fulfillment recipient. This field is required.\n  \nIf provided, the display name overrides the corresponding customer profile value\nindicated by `customer_id`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "emailAddress",
              "description": "The email address of the fulfillment recipient.\n  \nIf provided, the email address overrides the corresponding customer profile value\nindicated by `customer_id`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "phoneNumber",
              "description": "The phone number of the fulfillment recipient. This field is required.\n  \nIf provided, the phone number overrides the corresponding customer profile value\nindicated by `customer_id`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderFulfillmentState",
          "description": "The current state of this fulfillment.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CANCELED",
              "description": "Indicates that the fulfillment was canceled.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COMPLETED",
              "description": "Indicates that the fulfillment was successfully completed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FAILED",
              "description": "Indicates that the fulfillment failed to be completed, but was not explicitly\ncanceled.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PREPARED",
              "description": "Indicates that the fulfillment has been prepared.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PROPOSED",
              "description": "Indicates that the fulfillment has been proposed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RESERVED",
              "description": "Indicates that the fulfillment has been reserved.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "OrderFulfillmentStateFilter",
          "description": "OrderFulfillmentStateFilter is used for filtering a query with OrderFulfillmentState",
          "fields": null,
          "inputFields": [
            {
              "name": "equalToAnyOf",
              "description": "Used for filtering a query with OrderFulfillmentState",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "OrderFulfillmentState",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderFulfillmentType",
          "description": "The type of fulfillment.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DELIVERY",
              "description": "A courier to deliver the fulfillment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DIGITAL",
              "description": "A digital fulfillment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PICKUP",
              "description": "A recipient to pick up the fulfillment from a physical [location](entity:Location).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SHIPMENT",
              "description": "A shipping carrier to ship the fulfillment.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "OrderFulfillmentTypeFilter",
          "description": "OrderFulfillmentTypeFilter is used for filtering a query with OrderFulfillmentType",
          "fields": null,
          "inputFields": [
            {
              "name": "equalToAnyOf",
              "description": "Used for filtering a query with OrderFulfillmentType",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "OrderFulfillmentType",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderLineItem",
          "description": "Represents a line item in an order.Each line item describes a different\nproduct to purchase, with its own quantity and price details.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "appliedDiscounts",
              "description": "The list of references to discounts applied to this line item. Each\n`OrderLineItemAppliedDiscount` has a `discount_uid` that references the `uid` of a top-level\n`OrderLineItemDiscounts` applied to the line item. On reads, the amount\napplied is populated.\n  \nAn `OrderLineItemAppliedDiscount` is automatically created on every line item for all\n`ORDER` scoped discounts that are added to the order. `OrderLineItemAppliedDiscount` records\nfor `LINE_ITEM` scoped discounts must be added in requests for the discount to apply to any\nline items.\n  \nTo change the amount of a discount, modify the referenced top-level discount.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderLineItemAppliedDiscount",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appliedServiceCharges",
              "description": "The list of references to service charges applied to this line item. Each\n`OrderLineItemAppliedServiceCharge` has a `service_charge_id` that references the `uid` of a\ntop-level `OrderServiceCharge` applied to the line item. On reads, the amount applied is\npopulated.\n  \nTo change the amount of a service charge, modify the referenced top-level service charge.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderLineItemAppliedServiceCharge",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appliedTaxes",
              "description": "The list of references to taxes applied to this line item. Each\n`OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a\ntop-level `OrderLineItemTax` applied to the line item. On reads, the\namount applied is populated.\n  \nAn `OrderLineItemAppliedTax` is automatically created on every line\nitem for all `ORDER` scoped taxes added to the order. `OrderLineItemAppliedTax`\nrecords for `LINE_ITEM` scoped taxes must be added in requests for the tax\nto apply to any line items.\n  \nTo change the amount of a tax, modify the referenced top-level tax.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderLineItemAppliedTax",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "basePrice",
              "description": "The base price for a single unit of the line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `basePriceMoney` instead."
            },
            {
              "name": "basePriceMoney",
              "description": "The base price for a single unit of the line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "grossSales",
              "description": "The amount of money made in gross sales for this line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `grossSalesMoney` instead."
            },
            {
              "name": "grossSalesMoney",
              "description": "The amount of money made in gross sales for this line item.\nThe amount is calculated as the sum of the variation's total price and each modifier's total price.\nFor inclusive tax items in the US, Canada, and Japan, tax is deducted from `gross_sales_money`. For Europe and\nAustralia, inclusive tax remains as part of the gross sale calculation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "itemType",
              "description": "The type of line item: an itemized sale, a non-itemized sale (custom amount), or the\nactivation or reloading of a gift card.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderLineItemItemType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "itemVariation",
              "description": "The CatalogItemVariation ID applied to this line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogItemVariation",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "metadata",
              "description": "Application-defined data attached to this line item. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (such as personally\nidentifiable information or card details).\n  \nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n  \nValues have a maximum length of 255 characters.\n  \nAn application can have up to 10 entries per metadata field.\n  \nEntries written by applications are private and can only be read or modified by the same\napplication.\n  \nFor more information, see [Metadata](https://developer.squareup.com/docs/build-basics/metadata).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Metadata",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "modifiers",
              "description": "The CatalogModifiers applied to this line item.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderLineItemModifier",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The name of the line item.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "note",
              "description": "An optional note associated with the line item.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pricingBlocklists",
              "description": "Describes pricing adjustments that are blocked from automatic\napplication to a line item. For more information, see\n[Apply Taxes and Discounts](https://developer.squareup.com/docs/orders-api/apply-taxes-and-discounts).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OrderLineItemPricingBlocklists",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "quantity",
              "description": "The count, or measurement, of a line item being purchased:\n  \nIf `quantity` is a whole number, and `quantity_unit` is not specified, then `quantity` denotes an item count.  For example: `3` apples.\n  \nIf `quantity` is a whole or decimal number, and `quantity_unit` is also specified, then `quantity` denotes a measurement.  For example: `2.25` pounds of broccoli.\n  \nFor more information, see [Specify item quantity and measurement unit](https://developer.squareup.com/docs/orders-api/create-orders#specify-item-quantity-and-measurement-unit).\n  \nLine items with a quantity of `0` are automatically removed\nwhen paying for or otherwise completing the order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Decimal",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "quantityUnit",
              "description": "The measurement unit and decimal precision that this line item's quantity is measured in.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OrderQuantityUnit",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalDiscount",
              "description": "The total amount of discount money to collect for the line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `totalDiscountMoney` instead."
            },
            {
              "name": "totalDiscountMoney",
              "description": "The total amount of discount money to collect for the line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalMoney",
              "description": "The total amount of money to collect for this line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalServiceCharge",
              "description": "The total amount of apportioned service charge money to collect for the line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `totalServiceChargeMoney` instead."
            },
            {
              "name": "totalServiceChargeMoney",
              "description": "The total amount of apportioned service charge money to collect for the line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalTax",
              "description": "The total amount of tax money to collect for the line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `totalTaxMoney` instead."
            },
            {
              "name": "totalTaxMoney",
              "description": "The total amount of tax money to collect for the line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uid",
              "description": "A unique ID that identifies the line item only within this order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "variationTotalPrice",
              "description": "The total price of all item variations sold in this line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `variationTotalPriceMoney` instead."
            },
            {
              "name": "variationTotalPriceMoney",
              "description": "The total price of all item variations sold in this line item.\nThe price is calculated as `base_price_money` multiplied by `quantity`.\nIt does not include modifiers.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderLineItemAppliedDiscount",
          "description": "Represents an applied portion of a discount to a line item in an order.Order scoped discounts have automatically applied discounts present for each line item.\nLine-item scoped discounts must have applied discounts added manually for any applicable line\nitems. The corresponding applied money is automatically computed based on participating\nline items.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "appliedMoney",
              "description": "The amount of money applied by the discount to the line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "discountUid",
              "description": "The `uid` of the discount that the applied discount represents. It must\nreference a discount present in the `order.discounts` field.\n  \nThis field is immutable. To change which discounts apply to a line item,\nyou must delete the discount and re-add it as a new `OrderLineItemAppliedDiscount`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uid",
              "description": "A unique ID that identifies the applied discount only within this order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderLineItemAppliedServiceCharge",
          "description": "Permissions: ORDERS_READ",
          "fields": [
            {
              "name": "appliedMoney",
              "description": "The amount of money applied by the service charge to the line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "serviceChargeUid",
              "description": "The `uid` of the service charge that the applied service charge represents. It must\nreference a service charge present in the `order.service_charges` field.\n  \nThis field is immutable. To change which service charges apply to a line item,\ndelete and add a new `OrderLineItemAppliedServiceCharge`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uid",
              "description": "A unique ID that identifies the applied service charge only within this order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderLineItemAppliedTax",
          "description": "Represents an applied portion of a tax to a line item in an order.Order-scoped taxes automatically include the applied taxes in each line item.\nLine item taxes must be referenced from any applicable line items.\nThe corresponding applied money is automatically computed, based on the\nset of participating line items.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "appliedMoney",
              "description": "The amount of money applied by the tax to the line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "taxUid",
              "description": "The `uid` of the tax for which this applied tax represents. It must reference\na tax present in the `order.taxes` field.\n  \nThis field is immutable. To change which taxes apply to a line item, delete and add a new\n`OrderLineItemAppliedTax`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uid",
              "description": "A unique ID that identifies the applied tax only within this order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderLineItemDiscount",
          "description": "Represents a discount that applies to one or more line items in an\norder.Fixed-amount, order-scoped discounts are distributed across all non-zero line item totals.\nThe amount distributed to each line item is relative to the\namount contributed by the item to the order subtotal.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The total declared monetary amount of the discount.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `amountMoney` instead."
            },
            {
              "name": "amountMoney",
              "description": "The total declared monetary amount of the discount.\n  \n`amount_money` is not set for percentage-based discounts.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appliedMoney",
              "description": "The amount of discount actually applied to the line item.\n  \nThe amount represents the amount of money applied as a line-item scoped discount.\nWhen an amount-based discount is scoped to the entire order, the value\nof `applied_money` is different than `amount_money` because the total\namount of the discount is distributed across all line items.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "discount",
              "description": "The catalog object ID referencing CatalogDiscount.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogDiscount",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "discountCodeIds",
              "description": "The discount code IDs corresponding to this discount.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "metadata",
              "description": "Application-defined data attached to this discount. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (such as personally\nidentifiable information or card details).\n  \nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n  \nValues have a maximum length of 255 characters.\n  \nAn application can have up to 10 entries per metadata field.\n  \nEntries written by applications are private and can only be read or modified by the same\napplication.\n  \nFor more information, see [Metadata](https://developer.squareup.com/docs/build-basics/metadata).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Metadata",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The discount's name.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "percentage",
              "description": "The percentage of the discount, as a string representation of a decimal number.\nA value of `7.25` corresponds to a percentage of 7.25%.\n  \n`percentage` is not set for amount-based discounts.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Decimal",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pricingRule",
              "description": "The object ID of a pricing rule to be applied\nautomatically to this discount. The specification and application of the discounts, to\nwhich a `pricing_rule_id` is assigned, are completely controlled by the corresponding\npricing rule.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogPricingRule",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "rewards",
              "description": "The reward IDs corresponding to this discount. The application and\nspecification of discounts that have `reward_ids` are completely controlled by the backing\ncriteria corresponding to the reward tiers of the rewards that are added to the order\nthrough the Loyalty API. To manually unapply discounts that are the result of added rewards,\nthe rewards must be removed from the order through the Loyalty API.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Reward",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scope",
              "description": "Indicates the level at which the discount applies. For `ORDER` scoped discounts,\nSquare generates references in `applied_discounts` on all order line items that do\nnot have them. For `LINE_ITEM` scoped discounts, the discount only applies to line items\nwith a discount reference in their `applied_discounts` field.\n  \nThis field is immutable. To change the scope of a discount, you must delete\nthe discount and re-add it as a new discount.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderLineItemDiscountScope",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of the discount.\n  \nDiscounts that do not reference a catalog object ID must have a type of\n`FIXED_PERCENTAGE` or `FIXED_AMOUNT`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderLineItemDiscountType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uid",
              "description": "A unique ID that identifies the discount only within this order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderLineItemDiscountScope",
          "description": "Indicates whether this is a line-item or order-level discount.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "LINE_ITEM",
              "description": "The discount should be applied to only line items specified by\n`OrderLineItemAppliedDiscount` reference records.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ORDER",
              "description": "The discount should be applied to the entire order.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER_DISCOUNT_SCOPE",
              "description": "Used for reporting only.\nThe original transaction discount scope is currently not supported by the API.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderLineItemDiscountType",
          "description": "Indicates how the discount is applied to the associated line item or order.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "FIXED_AMOUNT",
              "description": "Apply the discount as a fixed monetary value (such as $1.00) off the item price.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIXED_PERCENTAGE",
              "description": "Apply the discount as a fixed percentage (such as 5%) off the item price.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_DISCOUNT",
              "description": "Used for reporting only.\nThe original transaction discount type is currently not supported by the API.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VARIABLE_AMOUNT",
              "description": "Apply the discount as a variable amount based on the item price.\n  \nThe specific discount amount of a `VARIABLE_AMOUNT` discount\nis assigned at the time of the purchase.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VARIABLE_PERCENTAGE",
              "description": "Apply the discount as a variable percentage based on the item\nprice.\n  \nThe specific discount percentage of a `VARIABLE_PERCENTAGE` discount\nis assigned at the time of the purchase.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderLineItemItemType",
          "description": "Represents the line item type.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CUSTOM_AMOUNT",
              "description": "Indicates that the line item is a non-itemized sale.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GIFT_CARD",
              "description": "Indicates that the line item is a gift card sale. Gift cards sold through\nthe Orders API are sold in an unactivated state and can be activated through the\nGift Cards API using the line item `uid`.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEM",
              "description": "Indicates that the line item is an itemized sale.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderLineItemModifier",
          "description": "A CatalogModifier.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "basePrice",
              "description": "The base price for the modifier.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `basePriceMoney` instead."
            },
            {
              "name": "metadata",
              "description": "Application-defined data attached to this order. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (such as personally\nidentifiable information or card details).\n  \nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n  \nValues have a maximum length of 255 characters.\n  \nAn application can have up to 10 entries per metadata field.\n  \nEntries written by applications are private and can only be read or modified by the same\napplication.\n  \nFor more information, see  [Metadata](https://developer.squareup.com/docs/build-basics/metadata).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Metadata",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "modifier",
              "description": "The catalog object ID referencing CatalogModifier.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogModifier",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `catalogObject` instead."
            },
            {
              "name": "name",
              "description": "The name of the item modifier.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "quantity",
              "description": "The quantity of the line item modifier. The modifier quantity can be 0 or more.\nFor example, suppose a restaurant offers a cheeseburger on the menu. When a buyer orders\nthis item, the restaurant records the purchase by creating an `Order` object with a line item\nfor a burger. The line item includes a line item modifier: the name is cheese and the quantity\nis 1. The buyer has the option to order extra cheese (or no cheese). If the buyer chooses\nthe extra cheese option, the modifier quantity increases to 2. If the buyer does not want\nany cheese, the modifier quantity is set to 0.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Decimal",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalPrice",
              "description": "The total price of the item modifier for its line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `totalPriceMoney` instead."
            },
            {
              "name": "uid",
              "description": "A unique ID that identifies the modifier only within this order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderLineItemPricingBlocklists",
          "description": "Describes pricing adjustments that are blocked from automatic\napplication to a line item.For more information, see\n[Apply Taxes and Discounts](https://developer.squareup.com/docs/orders-api/apply-taxes-and-discounts).\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "blockedDiscounts",
              "description": "A list of discounts blocked from applying to the line item.\nDiscounts can be blocked by the `discount_uid` (for ad hoc discounts) or\nthe `discount_catalog_object_id` (for catalog discounts).",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderLineItemPricingBlocklistsBlockedDiscount",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "blockedTaxes",
              "description": "A list of taxes blocked from applying to the line item.\nTaxes can be blocked by the `tax_uid` (for ad hoc taxes) or\nthe `tax_catalog_object_id` (for catalog taxes).",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderLineItemPricingBlocklistsBlockedTax",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderLineItemPricingBlocklistsBlockedDiscount",
          "description": "A discount to block from applying to a line item.The discount must be\nidentified by either `discount_uid` or `discount_catalog_object_id`, but not both.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "discountCatalogObjectId",
              "description": "The `catalog_object_id` of the discount that should be blocked.\nUse this field to block catalog discounts. For ad hoc discounts, use the\n`discount_uid` field.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "discountUid",
              "description": "The `uid` of the discount that should be blocked. Use this field to block\nad hoc discounts. For catalog discounts, use the `discount_catalog_object_id` field.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uid",
              "description": "A unique ID of the `BlockedDiscount` within the order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderLineItemPricingBlocklistsBlockedTax",
          "description": "A tax to block from applying to a line item.The tax must be\nidentified by either `tax_uid` or `tax_catalog_object_id`, but not both.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "taxCatalogObjectId",
              "description": "The `catalog_object_id` of the tax that should be blocked.\nUse this field to block catalog taxes. For ad hoc taxes, use the\n`tax_uid` field.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "taxUid",
              "description": "The `uid` of the tax that should be blocked. Use this field to block\nad hoc taxes. For catalog, taxes use the `tax_catalog_object_id` field.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uid",
              "description": "A unique ID of the `BlockedTax` within the order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderLineItemTax",
          "description": "Represents a tax that applies to one or more line item in the order.Fixed-amount, order-scoped taxes are distributed across all non-zero line item totals.\nThe amount distributed to each line item is relative to the amount the item\ncontributes to the order subtotal.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "appliedMoney",
              "description": "The amount of money applied to the order by the tax.\n  \n- For percentage-based taxes, `applied_money` is the money\ncalculated using the percentage.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "autoApplied",
              "description": "Determines whether the tax was automatically applied to the order based on\nthe catalog configuration. For an example, see\n[Automatically Apply Taxes to an Order](https://developer.squareup.com/docs/orders-api/apply-taxes-and-discounts/auto-apply-taxes).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "metadata",
              "description": "Application-defined data attached to this tax. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (such as personally\nidentifiable information or card details).\n  \nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n  \nValues have a maximum length of 255 characters.\n  \nAn application can have up to 10 entries per metadata field.\n  \nEntries written by applications are private and can only be read or modified by the same\napplication.\n  \nFor more information, see [Metadata](https://developer.squareup.com/docs/build-basics/metadata).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Metadata",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The tax's name.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "percentage",
              "description": "The percentage of the tax, as a string representation of a decimal\nnumber. For example, a value of `\"7.25\"` corresponds to a percentage of\n7.25%.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Decimal",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scope",
              "description": "Indicates the level at which the tax applies. For `ORDER` scoped taxes,\nSquare generates references in `applied_taxes` on all order line items that do\nnot have them. For `LINE_ITEM` scoped taxes, the tax only applies to line items\nwith references in their `applied_taxes` field.\n  \nThis field is immutable. To change the scope, you must delete the tax and\nre-add it as a new tax.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderLineItemTaxScope",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tax",
              "description": "The catalog object ID referencing CatalogTax.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogTax",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Indicates the calculation method used to apply the tax.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderLineItemTaxType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uid",
              "description": "A unique ID that identifies the tax only within this order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderLineItemTaxScope",
          "description": "Indicates whether this is a line-item or order-level tax.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "LINE_ITEM",
              "description": "The tax should be applied only to line items specified by\nthe `OrderLineItemAppliedTax` reference records.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ORDER",
              "description": "The tax should be applied to the entire order.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER_TAX_SCOPE",
              "description": "Used for reporting only.\nThe original transaction tax scope is currently not supported by the API.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderLineItemTaxType",
          "description": "Indicates how the tax is applied to the associated line item or order.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ADDITIVE",
              "description": "The tax is an additive tax. The tax amount is added on top of the price.\nFor example, an item with a cost of 1.00 USD and a 10% additive tax has a total\ncost to the buyer of 1.10 USD.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INCLUSIVE",
              "description": "The tax is an inclusive tax. Inclusive taxes are already included\nin the line item price or order total. For example, an item with a cost of\n1.00 USD and a 10% inclusive tax has a pretax cost of 0.91 USD\n(91 cents) and a 0.09 (9 cents) tax for a total cost of 1.00 USD to\nthe buyer.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_TAX",
              "description": "Used for reporting only.\nThe original transaction tax type is currently not supported by the API.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderMoneyAmounts",
          "description": "A collection of various money amounts.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "discount",
              "description": "The money associated with discounts.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `discountMoney` instead."
            },
            {
              "name": "serviceCharge",
              "description": "The money associated with service charges.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `serviceChargeMoney` instead."
            },
            {
              "name": "tax",
              "description": "The money associated with taxes.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `taxMoney` instead."
            },
            {
              "name": "tip",
              "description": "The money associated with tips.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `tipMoney` instead."
            },
            {
              "name": "totalMoney",
              "description": "The total money.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderOtherTender",
          "description": "Permissions: ORDERS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The total amount of the tender, including `tip_money`. If the tender has a `payment_id`, the `total_money` of the corresponding Payment will be equal to the `amount_money` of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `amountMoney` instead."
            },
            {
              "name": "amountMoney",
              "description": "The total amount of the tender, including `tip_money`. If the tender has a `payment_id`,\nthe `total_money` of the corresponding Payment will be equal to the\n`amount_money` of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The timestamp for when the tender was created, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customer",
              "description": "If the tender is associated with a customer or represents a customer's card on file,\nthis is the ID of the associated customer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Customer",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The tender's unique ID. It is the associated payment ID.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the transaction's associated location.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "note",
              "description": "An optional note associated with the tender at the time of payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payment",
              "description": "The ID of the Payment that corresponds to this tender.\nThis value is only present for payments created with the v2 Payments API.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Payment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "processingFee",
              "description": "The amount of any Square processing fees applied to the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `processingFeeMoney` instead."
            },
            {
              "name": "processingFeeMoney",
              "description": "The amount of any Square processing fees applied to the tender.\n  \nThis field is not immediately populated when a new transaction is created.\nIt is usually available after about ten seconds.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tip",
              "description": "The tip's amount of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `tipMoney` instead."
            },
            {
              "name": "tipMoney",
              "description": "The tip's amount of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "transactionId",
              "description": "The ID of the tender's associated transaction.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of tender, such as `CARD` or `CASH`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderTenderType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "OrderTender",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderPickup",
          "description": "Contains details necessary to fulfill a pickup order.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "acceptedAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the fulfillment was marked in progress. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "autoCompleteDuration",
              "description": "The duration of time after which an in progress pickup fulfillment is automatically moved\nto the `COMPLETED` state. The duration must be in RFC 3339 format (for example, \"P1W3D\").\n  \nIf not set, this pickup fulfillment remains in progress until it is canceled or completed.\n  \nExample for 2 days, 12 hours, 30 minutes, and 15 seconds: P2DT12H30M15S",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Duration",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cancelReason",
              "description": "A description of why the pickup was canceled. The maximum length: 100 characters.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canceledAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the fulfillment was canceled. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "curbsidePickup",
              "description": "Specific details for curbside pickup. These details can only be populated if `is_curbside_pickup` is set to `true`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OrderCurbsidePickup",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "expiredAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the fulfillment expired. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "expiresAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when this fulfillment expires if it is not marked in progress. The timestamp must be\nin RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\"). The expiration time can only be set\nup to 7 days in the future. If `expires_at` is not set, any new payments attached to the order\nare automatically completed.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isCurbsidePickup",
              "description": "If set to `true`, indicates that this pickup order is for curbside pickup, not in-store pickup.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "note",
              "description": "A note to provide additional instructions about the pickup\nfulfillment displayed in the Square Point of Sale application and set by the API.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pickedUpAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the fulfillment was picked up by the recipient. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pickupAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nthat represents the start of the pickup window. Must be in RFC 3339 timestamp format, e.g.,\n\"2016-09-04T23:59:33.123Z\".\n  \nFor fulfillments with the schedule type `ASAP`, this is automatically set\nto the current time plus the expected duration to prepare the fulfillment.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pickupWindowDuration",
              "description": "The window of time in which the order should be picked up after the `pickup_at` timestamp.\nMust be in RFC 3339 duration format, e.g., \"P1W3D\". Can be used as an\ninformational guideline for merchants.\n  \nExample for 2 days, 12 hours, 30 minutes, and 15 seconds: P2DT12H30M15S",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Duration",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "placedAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the fulfillment was placed. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "prepTimeDuration",
              "description": "The duration of time it takes to prepare this fulfillment.\nThe duration must be in RFC 3339 format (for example, \"P1W3D\").\n  \nExample for 2 days, 12 hours, 30 minutes, and 15 seconds: P2DT12H30M15S",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Duration",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "readyAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the fulfillment is marked as ready for pickup. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "recipient",
              "description": "Information about the person to pick up this fulfillment from a physical\nlocation.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OrderFulfillmentRecipient",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "rejectedAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the fulfillment was rejected. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scheduleType",
              "description": "The schedule type of the pickup fulfillment. Defaults to `SCHEDULED`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderPickupScheduleType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderPickupScheduleType",
          "description": "The schedule type of the pickup fulfillment.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ASAP",
              "description": "Indicates that the fulfillment will be picked up as soon as possible and\nshould be prepared immediately.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCHEDULED",
              "description": "Indicates that the fulfillment will be picked up at a scheduled pickup time.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderPricingOptions",
          "description": "Pricing options for an order.The options affect how the order's price is calculated.\nThey can be used, for example, to apply automatic price adjustments that are based on preconfigured\npricing rules.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "autoApplyDiscounts",
              "description": "The option to determine whether pricing rule-based\ndiscounts are automatically applied to an order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "autoApplyTaxes",
              "description": "The option to determine whether rule-based taxes are automatically\napplied to an order when the criteria of the corresponding rules are met.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderQuantityUnit",
          "description": "Contains the measurement unit for a quantity and a precision that\nspecifies the number of digits after the decimal point for decimal quantities.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "catalogObjectId",
              "description": "The catalog object ID referencing the\nCatalogMeasurementUnit.\n  \nThis field is set when this is a catalog-backed measurement unit.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "measurementUnit",
              "description": "A MeasurementUnit that represents the\nunit of measure for the quantity.",
              "args": [],
              "type": {
                "kind": "UNION",
                "name": "MeasurementUnit",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "precision",
              "description": "For non-integer quantities, represents the number of digits after the decimal point that are\nrecorded for this quantity.\n  \nFor example, a precision of 1 allows quantities such as `\"1.0\"` and `\"1.1\"`, but not `\"1.01\"`.\n  \nMin: 0. Max: 5.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderReturn",
          "description": "The set of line items, service charges, taxes, discounts, tips, and other items being returned in an order.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "amounts",
              "description": "An aggregate monetary value being returned by this return entry.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OrderMoneyAmounts",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "discounts",
              "description": "A collection of references to discounts being returned for an order, including the total\napplied discount amount to be returned. The discounts must reference a top-level discount ID\nfrom the source order.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderReturnDiscount",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lineItems",
              "description": "A collection of line items that are being returned.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderReturnLineItem",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "returnTips",
              "description": "A collection of references to tips being returned for an order.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderReturnTip",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "roundingAdjustment",
              "description": "A positive or negative rounding adjustment to the total value being returned. Adjustments are commonly\nused to apply cash rounding when the minimum unit of the account is smaller than the lowest\nphysical denomination of the currency.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OrderRoundingAdjustment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "serviceCharges",
              "description": "A collection of service charges that are being returned.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderReturnServiceCharge",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "source",
              "description": "An order that contains the original sale of these return line items. This is unset\nfor unlinked returns.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Order",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "taxes",
              "description": "A collection of references to taxes being returned for an order, including the total\napplied tax amount to be returned. The taxes must reference a top-level tax ID from the source\norder.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderReturnTax",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uid",
              "description": "A unique ID that identifies the return only within this order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderReturnDiscount",
          "description": "Represents a discount being returned that applies to one or more return line items in an\norder.Fixed-amount, order-scoped discounts are distributed across all non-zero return line item totals.\nThe amount distributed to each return line item is relative to that item’s contribution to the\norder subtotal.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The total declared monetary amount of the discount.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `amountMoney` instead."
            },
            {
              "name": "amountMoney",
              "description": "The total declared monetary amount of the discount.\n  \n`amount_money` is not set for percentage-based discounts.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appliedMoney",
              "description": "The amount of discount actually applied to this line item. When an amount-based\ndiscount is at the order level, this value is different from `amount_money` because the discount\nis distributed across the line items.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "discount",
              "description": "The catalog object ID referencing CatalogDiscount.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogDiscount",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The discount's name.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "percentage",
              "description": "The percentage of the tax, as a string representation of a decimal number.\nA value of `\"7.25\"` corresponds to a percentage of 7.25%.\n  \n`percentage` is not set for amount-based discounts.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Decimal",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scope",
              "description": "Indicates the level at which the `OrderReturnDiscount` applies. For `ORDER` scoped\ndiscounts, the server generates references in `applied_discounts` on all\n`OrderReturnLineItem`s. For `LINE_ITEM` scoped discounts, the discount is only applied to\n`OrderReturnLineItem`s with references in their `applied_discounts` field.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderLineItemDiscountScope",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sourceDiscountUid",
              "description": "The discount `uid` from the order that contains the original application of this discount.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of the discount. If it is created by the API, it is `FIXED_PERCENTAGE` or `FIXED_AMOUNT`.\n  \nDiscounts that do not reference a catalog object ID must have a type of\n`FIXED_PERCENTAGE` or `FIXED_AMOUNT`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderLineItemDiscountType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uid",
              "description": "A unique ID that identifies the returned discount only within this order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderReturnLineItem",
          "description": "The line item being returned in an order.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "appliedDiscounts",
              "description": "The list of references to `OrderReturnDiscount` entities applied to the return line item. Each\n`OrderLineItemAppliedDiscount` has a `discount_uid` that references the `uid` of a top-level\n`OrderReturnDiscount` applied to the return line item. On reads, the applied amount\nis populated.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderLineItemAppliedDiscount",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appliedServiceCharges",
              "description": "The list of references to `OrderReturnServiceCharge` entities applied to the return\nline item. Each `OrderLineItemAppliedServiceCharge` has a `service_charge_uid` that\nreferences the `uid` of a top-level `OrderReturnServiceCharge` applied to the return line\nitem. On reads, the applied amount is populated.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderLineItemAppliedServiceCharge",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appliedTaxes",
              "description": "The list of references to `OrderReturnTax` entities applied to the return line item. Each\n`OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a top-level\n`OrderReturnTax` applied to the return line item. On reads, the applied amount\nis populated.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderLineItemAppliedTax",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "basePrice",
              "description": "The base price for a single unit of the line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `basePriceMoney` instead."
            },
            {
              "name": "basePriceMoney",
              "description": "The base price for a single unit of the line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "grossReturn",
              "description": "The gross return amount of money calculated as (item base price + modifiers price) * quantity.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `grossReturnMoney` instead."
            },
            {
              "name": "grossReturnMoney",
              "description": "The gross return amount of money calculated as (item base price + modifiers price) * quantity.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "itemVariation",
              "description": "The CatalogItemVariation ID applied to this return line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogItemVariation",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "modifiers",
              "description": "The CatalogModifiers applied to this line item.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderReturnLineItemModifier",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The name of the line item.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "note",
              "description": "The note of the return line item.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "quantity",
              "description": "The quantity returned, formatted as a decimal number.\nFor example, `\"3\"`.\n  \nLine items with a `quantity_unit` can have non-integer quantities.\nFor example, `\"1.70000\"`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Decimal",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "quantityUnit",
              "description": "The unit and precision that this return line item's quantity is measured in.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OrderQuantityUnit",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sourceLineItemUid",
              "description": "The `uid` of the line item in the original sale order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalDiscount",
              "description": "The total amount of discount money to return for the line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `totalDiscountMoney` instead."
            },
            {
              "name": "totalDiscountMoney",
              "description": "The total amount of discount money to return for the line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalMoney",
              "description": "The total amount of money to return for this line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalServiceCharge",
              "description": "The total amount of apportioned service charge money to return for the line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `totalServiceChargeMoney` instead."
            },
            {
              "name": "totalServiceChargeMoney",
              "description": "The total amount of apportioned service charge money to return for the line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalTax",
              "description": "The total amount of tax money to return for the line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `totalTaxMoney` instead."
            },
            {
              "name": "totalTaxMoney",
              "description": "The total amount of tax money to return for the line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uid",
              "description": "A unique ID for this return line-item entry.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "variationName",
              "description": "The name of the variation applied to this return line item.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "variationTotalPrice",
              "description": "The total price of all item variations returned in this line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `variationTotalPriceMoney` instead."
            },
            {
              "name": "variationTotalPriceMoney",
              "description": "The total price of all item variations returned in this line item.\nThe price is calculated as `base_price_money` multiplied by `quantity` and\ndoes not include modifiers.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderReturnLineItemModifier",
          "description": "A line item modifier being returned.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "basePrice",
              "description": "The base price for the modifier.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `basePriceMoney` instead."
            },
            {
              "name": "modifier",
              "description": "The catalog object ID referencing CatalogModifier.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogModifier",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `catalogObject` instead."
            },
            {
              "name": "name",
              "description": "The name of the item modifier.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "quantity",
              "description": "The quantity of the line item modifier. The modifier quantity can be 0 or more.\nFor example, suppose a restaurant offers a cheeseburger on the menu. When a buyer orders\nthis item, the restaurant records the purchase by creating an `Order` object with a line item\nfor a burger. The line item includes a line item modifier: the name is cheese and the quantity\nis 1. The buyer has the option to order extra cheese (or no cheese). If the buyer chooses\nthe extra cheese option, the modifier quantity increases to 2. If the buyer does not want\nany cheese, the modifier quantity is set to 0.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Decimal",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sourceModifierUid",
              "description": "The modifier `uid` from the order's line item that contains the\noriginal sale of this line item modifier.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalPrice",
              "description": "The total price of the item modifier for its line item.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `totalPriceMoney` instead."
            },
            {
              "name": "uid",
              "description": "A unique ID that identifies the return modifier only within this order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderReturnServiceCharge",
          "description": "Represents the service charge applied to the original order.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The amount of a non-percentage-based service charge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `amountMoney` instead."
            },
            {
              "name": "amountMoney",
              "description": "The amount of a non-percentage-based service charge.\n  \nEither `percentage` or `amount_money` should be set, but not both.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appliedMoney",
              "description": "The amount of money applied to the order by the service charge, including\nany inclusive tax amounts, as calculated by Square.\n  \n- For fixed-amount service charges, `applied_money` is equal to `amount_money`.\n- For percentage-based service charges, `applied_money` is the money calculated using the percentage.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appliedTaxes",
              "description": "The list of references to `OrderReturnTax` entities applied to the\n`OrderReturnServiceCharge`. Each `OrderLineItemAppliedTax` has a `tax_uid`\nthat references the `uid` of a top-level `OrderReturnTax` that is being\napplied to the `OrderReturnServiceCharge`. On reads, the applied amount is\npopulated.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderLineItemAppliedTax",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "calculationPhase",
              "description": "The calculation phase after which to apply the service charge.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderServiceChargeCalculationPhase",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The name of the service charge.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "percentage",
              "description": "The percentage of the service charge, as a string representation of\na decimal number. For example, a value of `\"7.25\"` corresponds to a\npercentage of 7.25%.\n  \nEither `percentage` or `amount_money` should be set, but not both.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Decimal",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scope",
              "description": "Indicates the level at which the apportioned service charge applies. For `ORDER`\nscoped service charges, Square generates references in `applied_service_charges` on\nall order line items that do not have them. For `LINE_ITEM` scoped service charges,\nthe service charge only applies to line items with a service charge reference in their\n`applied_service_charges` field.\n  \nThis field is immutable. To change the scope of an apportioned service charge, you must delete\nthe apportioned service charge and re-add it as a new apportioned service charge.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderServiceChargeScope",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "serviceCharge",
              "description": "The catalog object ID of the associated OrderServiceCharge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogServiceCharge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sourceServiceChargeUid",
              "description": "The service charge `uid` from the order containing the original\nservice charge. `source_service_charge_uid` is `null` for\nunlinked returns.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "taxable",
              "description": "Indicates whether the surcharge can be taxed. Service charges\ncalculated in the `TOTAL_PHASE` cannot be marked as taxable.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalMoney",
              "description": "The total amount of money to collect for the service charge.\n  \n__NOTE__: If an inclusive tax is applied to the service charge, `total_money`\ndoes not equal `applied_money` plus `total_tax_money` because the inclusive\ntax amount is already included in both `applied_money` and `total_tax_money`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalTax",
              "description": "The total amount of tax money to collect for the service charge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `totalTaxMoney` instead."
            },
            {
              "name": "totalTaxMoney",
              "description": "The total amount of tax money to collect for the service charge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "treatmentType",
              "description": "The treatment type of the service charge.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderServiceChargeTreatmentType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uid",
              "description": "A unique ID that identifies the return service charge only within this order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderReturnTax",
          "description": "Represents a tax being returned that applies to one or more return line items in an order.Fixed-amount, order-scoped taxes are distributed across all non-zero return line item totals.\nThe amount distributed to each return line item is relative to that item’s contribution to the\norder subtotal.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "appliedMoney",
              "description": "The amount of money applied by the tax in an order.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The tax's name.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "percentage",
              "description": "The percentage of the tax, as a string representation of a decimal number.\nFor example, a value of `\"7.25\"` corresponds to a percentage of 7.25%.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Decimal",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scope",
              "description": "Indicates the level at which the `OrderReturnTax` applies. For `ORDER` scoped\ntaxes, Square generates references in `applied_taxes` on all\n`OrderReturnLineItem`s. For `LINE_ITEM` scoped taxes, the tax is only applied to\n`OrderReturnLineItem`s with references in their `applied_discounts` field.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderLineItemTaxScope",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sourceTaxUid",
              "description": "The tax `uid` from the order that contains the original tax charge.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tax",
              "description": "The catalog object ID referencing CatalogTax.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogTax",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Indicates the calculation method used to apply the tax.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderLineItemTaxType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uid",
              "description": "A unique ID that identifies the returned tax only within this order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderReturnTip",
          "description": "A tip being returned.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "appliedMoney",
              "description": "The amount of tip being returned\n--",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sourceTenderId",
              "description": "The tender `id` from the order that contains the original application of this tip.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sourceTenderUid",
              "description": "The tender `uid` from the order that contains the original application of this tip.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uid",
              "description": "A unique ID that identifies the tip only within this order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderRoundingAdjustment",
          "description": "A rounding adjustment of the money being returned.Commonly used to apply cash rounding\nwhen the minimum unit of the account is smaller than the lowest physical denomination of the currency.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The actual rounding adjustment amount.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `amountMoney` instead."
            },
            {
              "name": "amountMoney",
              "description": "The actual rounding adjustment amount.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The name of the rounding adjustment from the original sale order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uid",
              "description": "A unique ID that identifies the rounding adjustment only within this order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderServiceCharge",
          "description": "Represents a service charge applied to an order.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The amount of a non-percentage-based service charge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `amountMoney` instead."
            },
            {
              "name": "amountMoney",
              "description": "The amount of a non-percentage-based service charge.\n  \nExactly one of `percentage` or `amount_money` should be set.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appliedMoney",
              "description": "The amount of money applied to the order by the service charge,\nincluding any inclusive tax amounts, as calculated by Square.\n  \n- For fixed-amount service charges, `applied_money` is equal to `amount_money`.\n- For percentage-based service charges, `applied_money` is the money\ncalculated using the percentage.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appliedTaxes",
              "description": "The list of references to the taxes applied to this service charge. Each\n`OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a top-level\n`OrderLineItemTax` that is being applied to this service charge. On reads, the amount applied\nis populated.\n  \nAn `OrderLineItemAppliedTax` is automatically created on every taxable service charge\nfor all `ORDER` scoped taxes that are added to the order. `OrderLineItemAppliedTax` records\nfor `LINE_ITEM` scoped taxes must be added in requests for the tax to apply to any taxable\nservice charge. Taxable service charges have the `taxable` field set to `true` and calculated\nin the `SUBTOTAL_PHASE`.\n  \nTo change the amount of a tax, modify the referenced top-level tax.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrderLineItemAppliedTax",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "calculationPhase",
              "description": "The calculation phase at which to apply the service charge.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderServiceChargeCalculationPhase",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "metadata",
              "description": "Application-defined data attached to this service charge. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (such as personally\nidentifiable information or card details).\n  \nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n  \nValues have a maximum length of 255 characters.\n  \nAn application can have up to 10 entries per metadata field.\n  \nEntries written by applications are private and can only be read or modified by the same\napplication.\n  \nFor more information, see [Metadata](https://developer.squareup.com/docs/build-basics/metadata).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Metadata",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The name of the service charge.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "percentage",
              "description": "The service charge percentage as a string representation of a\ndecimal number. For example, `\"7.25\"` indicates a service charge of 7.25%.\n  \nExactly 1 of `percentage` or `amount_money` should be set.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Decimal",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scope",
              "description": "Indicates the level at which the apportioned service charge applies. For `ORDER`\nscoped service charges, Square generates references in `applied_service_charges` on\nall order line items that do not have them. For `LINE_ITEM` scoped service charges,\nthe service charge only applies to line items with a service charge reference in their\n`applied_service_charges` field.\n  \nThis field is immutable. To change the scope of an apportioned service charge, you must delete\nthe apportioned service charge and re-add it as a new apportioned service charge.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderServiceChargeScope",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "serviceCharge",
              "description": "The catalog object ID referencing the service charge CatalogObject.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogServiceCharge",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "taxable",
              "description": "Indicates whether the service charge can be taxed. If set to `true`,\norder-level taxes automatically apply to the service charge. Note that\nservice charges calculated in the `TOTAL_PHASE` cannot be marked as taxable.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalMoney",
              "description": "The total amount of money to collect for the service charge.\n  \n__Note__: If an inclusive tax is applied to the service charge,\n`total_money` does not equal `applied_money` plus `total_tax_money`\nbecause the inclusive tax amount is already included in both\n`applied_money` and `total_tax_money`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalTax",
              "description": "The total amount of money to collect for the service charge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `totalTaxMoney` instead."
            },
            {
              "name": "totalTaxMoney",
              "description": "The total amount of tax money to collect for the service charge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "treatmentType",
              "description": "The treatment type of the service charge.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderServiceChargeTreatmentType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of the service charge.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderServiceChargeType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uid",
              "description": "A unique ID that identifies the service charge only within this order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderServiceChargeCalculationPhase",
          "description": "Represents a phase in the process of calculating order totals.Service charges are applied after the indicated phase.\n\n[Read more about how order totals are calculated.](https://developer.squareup.com/docs/orders-api/how-it-works#how-totals-are-calculated)",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "APPORTIONED_AMOUNT_PHASE",
              "description": "The service charge is calculated as a compounding adjustment\nafter any discounts and percentage based apportioned service charges,\nbut before any tax considerations.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "APPORTIONED_PERCENTAGE_PHASE",
              "description": "The service charge is calculated as a compounding adjustment\nafter any discounts, but before amount based apportioned service charges\nand any tax considerations.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUBTOTAL_PHASE",
              "description": "The service charge is applied after discounts, but before\ntaxes.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TOTAL_PHASE",
              "description": "The service charge is applied after all discounts and taxes\nare applied.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderServiceChargeScope",
          "description": "Indicates whether this is a line-item or order-level apportioned\nservice charge.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "LINE_ITEM",
              "description": "The service charge should be applied to only line items specified by\n`OrderLineItemAppliedServiceCharge` reference records.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ORDER",
              "description": "The service charge should be applied to the entire order.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER_SERVICE_CHARGE_SCOPE",
              "description": "Used for reporting only.\nThe original transaction service charge scope is currently not supported by the API.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderServiceChargeTreatmentType",
          "description": "Indicates whether the service charge will be treated as a value-holding line item or\napportioned toward a line item.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "APPORTIONED_TREATMENT",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LINE_ITEM_TREATMENT",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderServiceChargeType",
          "description": "Orders service charge type enum.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AUTO_GRATUITY",
              "description": "The service charge is an automatic gratuity.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUSTOM",
              "description": "The service charge is a custom amount.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderShipment",
          "description": "Contains the details necessary to fulfill a shipment order.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "cancelReason",
              "description": "A description of why the shipment was canceled.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canceledAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating the shipment was canceled.\nThe timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "carrier",
              "description": "The shipping carrier being used to ship this fulfillment (such as UPS, FedEx, or USPS).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "expectedShippedAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the shipment is expected to be delivered to the shipping carrier.\nThe timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "failedAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the shipment failed to be completed. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "failureReason",
              "description": "A description of why the shipment failed to be completed.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inProgressAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when this fulfillment was moved to the `RESERVED` state, which  indicates that preparation\nof this shipment has begun. The timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "packagedAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when this fulfillment was moved to the `PREPARED` state, which indicates that the\nfulfillment is packaged. The timestamp must be in RFC 3339 format (for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "placedAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when the shipment was requested. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "recipient",
              "description": "Information about the person to receive this shipment fulfillment.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OrderFulfillmentRecipient",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shippedAt",
              "description": "The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nindicating when this fulfillment was moved to the `COMPLETED` state, which indicates that\nthe fulfillment has been given to the shipping carrier. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\").\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shippingNote",
              "description": "A note with additional information for the shipping carrier.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shippingType",
              "description": "A description of the type of shipping product purchased from the carrier\n(such as First Class, Priority, or Express).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "trackingNumber",
              "description": "The reference number provided by the carrier to track the shipment's progress.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "trackingUrl",
              "description": "A link to the tracking webpage on the carrier's website.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Url",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderSort",
          "description": "Criteria to sort results by. The chronological order in which results are returned. Defaults to createdAt_DESC.\n\nWhen using a BasicDateTimeFilter, OrderSort must match the timestamp field that the BasicDateTimeFilter uses to filter. For example, If you set your sort_field to closedAt and you use a BasicDateTimeFilter,\nyour BasicDateTimeFilter must filter for orders by their closedAt date. If this field does not match the timestamp field in BasicDateTimeFilter, it will return an error.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "closedAt_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "closedAt_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderSource",
          "description": "Represents the origination details of an order.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "name",
              "description": "The name used to identify the place (physical or digital) that an order originates.\nIf unset, the name defaults to the name of the application that created the order.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OrderSquareAccountTender",
          "description": "Represents the details of a tender with `type` `SQUARE_ACCOUNT`.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The total amount of the tender, including `tip_money`. If the tender has a `payment_id`, the `total_money` of the corresponding Payment will be equal to the `amount_money` of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `amountMoney` instead."
            },
            {
              "name": "amountMoney",
              "description": "The total amount of the tender, including `tip_money`. If the tender has a `payment_id`,\nthe `total_money` of the corresponding Payment will be equal to the\n`amount_money` of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The timestamp for when the tender was created, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customer",
              "description": "If the tender is associated with a customer or represents a customer's card on file,\nthis is the ID of the associated customer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Customer",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The tender's unique ID. It is the associated payment ID.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the transaction's associated location.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "note",
              "description": "An optional note associated with the tender at the time of payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payment",
              "description": "The ID of the Payment that corresponds to this tender.\nThis value is only present for payments created with the v2 Payments API.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Payment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "processingFee",
              "description": "The amount of any Square processing fees applied to the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `processingFeeMoney` instead."
            },
            {
              "name": "processingFeeMoney",
              "description": "The amount of any Square processing fees applied to the tender.\n  \nThis field is not immediately populated when a new transaction is created.\nIt is usually available after about ten seconds.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "The Square Account payment's current state (such as `AUTHORIZED` or\n`CAPTURED`). See TenderSquareAccountDetailsStatus\nfor possible values.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderSquareAccountTenderStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tip",
              "description": "The tip's amount of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `tipMoney` instead."
            },
            {
              "name": "tipMoney",
              "description": "The tip's amount of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "transactionId",
              "description": "The ID of the tender's associated transaction.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of tender, such as `CARD` or `CASH`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderTenderType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "OrderTender",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderSquareAccountTenderStatus",
          "description": "Orders tender square account detail status enum.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "AUTHORIZED",
              "description": "The Square Account payment has been authorized but not yet captured.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CAPTURED",
              "description": "The Square Account payment was authorized and subsequently captured (i.e., completed).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FAILED",
              "description": "The Square Account payment failed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VOIDED",
              "description": "The Square Account payment was authorized and subsequently voided (i.e., canceled).",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "OrderState",
          "description": "The state of the order.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CANCELED",
              "description": "Indicates that the order is canceled. Canceled orders are not paid. This is a terminal state.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COMPLETED",
              "description": "Indicates that the order is completed. Completed orders are fully paid. This is a terminal state.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DRAFT",
              "description": "Indicates that the order is in a draft state. Draft orders can be updated,\nbut cannot be paid or fulfilled.\nFor more information, see [Create Orders](https://developer.squareup.com/docs/orders-api/create-orders).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OPEN",
              "description": "Indicates that the order is open. Open orders can be updated.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "OrderStateFilter",
          "description": "OrderStateFilter is used for filtering a query with OrderState",
          "fields": null,
          "inputFields": [
            {
              "name": "equalToAnyOf",
              "description": "Used for filtering a query with OrderState",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "OrderState",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INTERFACE",
          "name": "OrderTender",
          "description": "Represents a tender (i.e., a method of payment) used in a Square transaction. Permissions:ORDERS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The total amount of the tender, including `tip_money`. If the tender has a `payment_id`, the `total_money` of the corresponding Payment will be equal to the `amount_money` of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `amountMoney` instead."
            },
            {
              "name": "amountMoney",
              "description": "The total amount of the tender, including `tip_money`. If the tender has a `payment_id`,\nthe `total_money` of the corresponding Payment will be equal to the\n`amount_money` of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The timestamp for when the tender was created, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customer",
              "description": "If the tender is associated with a customer or represents a customer's card on file,\nthis is the ID of the associated customer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Customer",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The tender's unique ID. It is the associated payment ID.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the transaction's associated location.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "note",
              "description": "An optional note associated with the tender at the time of payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payment",
              "description": "The ID of the Payment that corresponds to this tender.\nThis value is only present for payments created with the v2 Payments API.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Payment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "processingFee",
              "description": "The amount of any Square processing fees applied to the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `processingFeeMoney` instead."
            },
            {
              "name": "processingFeeMoney",
              "description": "The amount of any Square processing fees applied to the tender.\n  \nThis field is not immediately populated when a new transaction is created.\nIt is usually available after about ten seconds.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tip",
              "description": "The tip's amount of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `tipMoney` instead."
            },
            {
              "name": "tipMoney",
              "description": "The tip's amount of the tender.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "transactionId",
              "description": "The ID of the tender's associated transaction.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of tender, such as `CARD` or `CASH`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "OrderTenderType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "OrderBankAccountTender",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "OrderBuyNowPayLaterTender",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "OrderCardTender",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "OrderCashTender",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "OrderOtherTender",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "OrderSquareAccountTender",
              "ofType": null
            }
          ]
        },
        {
          "kind": "ENUM",
          "name": "OrderTenderType",
          "description": "Indicates a tender's type.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "BANK_ACCOUNT",
              "description": "A bank account payment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BUY_NOW_PAY_LATER",
              "description": "A Buy Now Pay Later payment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD",
              "description": "A credit card.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CASH",
              "description": "Cash.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NO_SALE",
              "description": "This tender represents the register being opened for a \"no sale\" event.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER",
              "description": "A form of tender that does not match any other value.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_ACCOUNT",
              "description": "A Square House Account payment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_GIFT_CARD",
              "description": "A Square gift card.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "THIRD_PARTY_CARD",
              "description": "A credit card processed with a card processor other than Square.\n  \nThis value applies only to merchants in countries where Square does not\nyet provide card processing.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WALLET",
              "description": "A payment from a digital wallet, e.g. Cash App, Paypay, Rakuten Pay,\nAu Pay, D Barai, Merpay, Wechat Pay, Alipay.\n  \nNote: Some \"digital wallets\", including Google Pay and Apple Pay, facilitate\ncard payments.  Those payments have the `CARD` type.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OtherAdjustmentDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of any other type of adjustments that don't fall under existing types.",
          "fields": [
            {
              "name": "paymentId",
              "description": "Unique ID for the payment related to other adjustments.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "OtherAdjustmentDetailsFilterInput",
          "description": "Input type used to specify filters on `OtherAdjustmentDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> Unique ID for the payment related to other adjustments.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "OtherDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of any other type that does not belong in the rest of the types.",
          "fields": [
            {
              "name": "paymentId",
              "description": "Unique ID for the payment related to other details.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "OtherDetailsFilterInput",
          "description": "Input type used to specify filters on `OtherDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> Unique ID for the payment related to other details.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PageInfo",
          "description": "Provides pagination-related information.",
          "fields": [
            {
              "name": "endCursor",
              "description": "The `Cursor` of the last edge of the current page. This can be passed in the next query as\na `after` argument to paginate forwards.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasNextPage",
              "description": "Indicates if there is another page of results available after the current one.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasPreviousPage",
              "description": "Indicates if there is another page of results available before the current one.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startCursor",
              "description": "The `Cursor` of the first edge of the current page. This can be passed in the next query as\na `before` argument to paginate backwards.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Payment",
          "description": "Permissions:PAYMENTS_READ",
          "fields": [
            {
              "name": "id",
              "description": "Unique ID for the payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locationId",
              "description": "The ID of the location associated with the payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "amountMoney",
              "description": "The amount processed for this payment, not including `tipMoney`.\n\nThe amount is specified in the smallest denomination of the applicable currency (for example,\nUS dollar amounts are specified in cents). For more information, see\n[Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appFeeMoney",
              "description": "The amount the developer is taking as a fee for facilitating the payment on behalf\nof the seller. This amount is specified in the smallest denomination of the applicable currency\n(for example, US dollar amounts are specified in cents). For more information,\nsee [Take Payments and Collect Fees](https://developer.squareup.com/docs/payments-api/take-payments-and-collect-fees).\n\nThe amount cannot be more than 90% of the `total_money` value.\n\nTo set this field, `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS` OAuth permission is required.\nFor more information, see [Permissions](https://developer.squareup.com/docs/payments-api/take-payments-and-collect-fees#permissions).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "applicationDetails",
              "description": "Details about the application that took the payment.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "PaymentApplicationDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "approvedMoney",
              "description": "The initial amount of money approved for this payment.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bankAccountDetails",
              "description": "Details about a bank account payment. These details are only populated if the `sourceType` is `BANK_ACCOUNT`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "BankAccountPaymentDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "billingAddress",
              "description": "The buyer's billing address.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Address",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "buyNowPayLaterDetails",
              "description": "Details about a Buy Now Pay Later payment. The details are only populated\nif the `sourceType` is `BUY_NOW_PAY_LATER`. For more information, see\n[Afterpay Payments](https://developer.squareup.com/docs/payments-api/take-payments/afterpay-payments).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "BuyNowPayLaterPaymentDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "buyerEmailAddress",
              "description": "The buyer's email address.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "capabilities",
              "description": "Actions that can be performed on this payment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "PaymentCapability",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails",
              "description": "Details about a card payment. These details are only populated if the `sourceType` is CARD.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CardPaymentDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cashDetails",
              "description": "Details about a cash payment. These details are only populated if the `sourceType` is `CASH`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CashPaymentDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The timestamp of when the payment was created, in RFC 3339 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customerId",
              "description": "The [Customer](https://developer.squareup.com/reference/square/payments-api/list-payments#type-customer)\nID of the customer associated with the payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "delayAction",
              "description": "The action to be applied to the payment when the `delayDuration` has elapsed.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "PaymentDelayAction",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "delayDuration",
              "description": "The duration of time after the payment's creation when Square automatically applies the\n`delayAction` to the payment. This automatic `delayAction` applies only to payments that\ndon't reach a terminal state (COMPLETED, CANCELED, or FAILED) before the `delayDuration`\ntime period.\n\nThis field is specified as a time duration, in RFC 3339 format.\n\nNotes:\nThis feature is only supported for card payments.\n\nDefault:\n\n  - Card Present payments: \"PT36H\" (36 hours) from the creation time.\n  - Card Not Present payments: \"P7D\" (7 days) from the creation time.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Duration",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "delayedUntil",
              "description": "The read-only timestamp of when the `delayAction` is automatically applied,\nin RFC 3339 format.\n\nNote that this field is calculated by summing the payment's `delayDuration` and `createdAt`\nfields. The `createdAt` field is generated by Square and might not exactly match the\ntime on your local machine.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceDetails",
              "description": "Details about the device that took the payment.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "PaymentDeviceDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "externalDetails",
              "description": "Details about an external payment. The details are only populated if the `sourceType` is `EXTERNAL`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ExternalPaymentDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The ID of the merchant associated with the payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "note",
              "description": "An optional note to include when creating a payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "orderId",
              "description": "The ID of the order associated with the payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "processingFees",
              "description": "The processing fees and fee adjustments assessed by Square for this payment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PaymentProcessingFee",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "receiptNumber",
              "description": "The payment's receipt number.\nThe field will be missing if a payment is canceled.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "receiptUrl",
              "description": "The URL for the payment's receipt.\nThe field is only populated for COMPLETED payments.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Url",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "referenceId",
              "description": "An optional ID that associates this payment with an entity in another system.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "refundedMoney",
              "description": "The total amount of the payment refunded to date.\n\nThis amount is specified in the smallest denomination of the applicable currency (for example,\nUS dollar amounts are specified in cents).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "refunds",
              "description": "The refunds for this payment.",
              "args": [
                {
                  "name": "after",
                  "description": "Used to forward-paginate through the `refunds`. When provided, the next page after the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Used to backward-paginate through the `refunds`. When provided, the previous page before the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "Used to filter the returned `refunds` based on the provided criteria.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentRefundFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Used in conjunction with the `after` argument to forward-paginate through the `refunds`.\nWhen provided, limits the number of returned results to the first `n` after the provided\n`after` cursor (or from the start of the `refunds`, if no `after` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Used in conjunction with the `before` argument to backward-paginate through the `refunds`.\nWhen provided, limits the number of returned results to the last `n` before the provided\n`before` cursor (or from the end of the `refunds`, if no `before` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Used to specify how the returned `refunds` should be sorted.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "PaymentRefundSortOrder",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "PaymentRefundConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "riskEvaluation",
              "description": "Provides information about the risk associated with this payment, as determined by Square.\nThis field will be present for payments to sellers that have opted in to receive risk\nevaluations.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "PaymentRiskEvaluation",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shippingAddress",
              "description": "The buyer's shipping address.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Address",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sourceType",
              "description": "The source type for the payment.\n\nFor information about these payment source types,\nsee [Take Payments](https://developer.squareup.com/docs/payments-api/take-payments).",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "PaymentSourceType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "statementDescriptionIdentifier",
              "description": "Additional payment information that gets added on the customer's card statement\nas part of the statement description.\n\nNote that the `statementDescriptionIdentifier` may get truncated on the statement description\nto fit the required information including the Square identifier (SQ *) and name of the\nseller taking the payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "Indicates whether the payment is APPROVED, PENDING, COMPLETED, CANCELED, or FAILED.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "PaymentStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMemberId",
              "description": "An optional ID of the TeamMember associated with taking the payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tipMoney",
              "description": "The amount designated as a tip.\n\nThis amount is specified in the smallest denomination of the applicable currency (for example,\nUS dollar amounts are specified in cents). For more information, see\n[Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalMoney",
              "description": "The total amount for the payment, including `amountMoney` and `tipMoney`.\n\nThis amount is specified in the smallest denomination of the applicable currency (for example,\nUS dollar amounts are specified in cents). For more information, see\n[Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The timestamp of when the payment was last updated, in RFC 3339 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "walletDetails",
              "description": "Details about an wallet payment. The details are only populated if the `sourceType` is `WALLET`.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DigitalWalletPaymentDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PaymentApplicationDetails",
          "description": "Permissions: PAYMENTS_READ\n\nDetails about the application that took the payment.",
          "fields": [
            {
              "name": "applicationId",
              "description": "The Square ID assigned to the application used to take the payment.\nApplication developers can use this information to identify payments that\ntheir application processed.\nFor example, if a developer uses a custom application to process payments,\nthis field contains the application ID from the Developer Dashboard.\nIf a seller uses a [Square App Marketplace](https://developer.squareup.com/docs/app-marketplace)\napplication to process payments, the field contains the corresponding application ID.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "squareProduct",
              "description": "The Square product, such as Square Point of Sale (POS), Square Invoices, or Square Virtual Terminal.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "PaymentApplicationDetailsExternalSquareProduct",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PaymentApplicationDetailsExternalSquareProduct",
          "description": "A list of products to return to external callers.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "APPOINTMENTS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ECOMMERCE_API",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVOICES",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ONLINE_STORE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RESTAURANTS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RETAIL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_POS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TERMINAL_API",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VIRTUAL_TERMINAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PaymentApplicationDetailsExternalSquareProductFilterInput",
          "description": "Input type used to specify filters on `PaymentApplicationDetailsExternalSquareProduct` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single\n`PaymentApplicationDetailsExternalSquareProductFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentApplicationDetailsExternalSquareProductFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentApplicationDetailsExternalSquareProductFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "PaymentApplicationDetailsExternalSquareProductInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentApplicationDetailsExternalSquareProductFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PaymentApplicationDetailsExternalSquareProductInput",
          "description": "A list of products to return to external callers.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "APPOINTMENTS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ECOMMERCE_API",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVOICES",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ONLINE_STORE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RESTAURANTS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RETAIL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_POS",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TERMINAL_API",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VIRTUAL_TERMINAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PaymentApplicationDetailsFilterInput",
          "description": "Input type used to specify filters on `PaymentApplicationDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "applicationId",
              "description": "Used to filter on the `applicationId` field:\n\n> The Square ID assigned to the application used to take the payment.\n> Application developers can use this information to identify payments that\n> their application processed.\n> For example, if a developer uses a custom application to process payments,\n> this field contains the application ID from the Developer Dashboard.\n> If a seller uses a [Square App Marketplace](https://developer.squareup.com/docs/app-marketplace)\n> application to process payments, the field contains the corresponding application ID.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "squareProduct",
              "description": "Used to filter on the `squareProduct` field:\n\n> The Square product, such as Square Point of Sale (POS), Square Invoices, or Square Virtual Terminal.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentApplicationDetailsExternalSquareProductFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PaymentAppProcessingFee",
          "description": "Permissions: PAYMENTS_READ\n\nRepresents an application processing fee.",
          "fields": [
            {
              "name": "amountMoney",
              "description": "The exact fee amount assessed based on the payment fee rate.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "effectiveAt",
              "description": "The timestamp of when the fee takes effect, in RFC 3339 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "partyAccountId",
              "description": "The platform account token for this payment fee.\nFor a capture, this is the recipient of funds. For a refund, this is the source of funds.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "priceSelectors",
              "description": "The price selector IDs of the payment fee being applied.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of payment fee being applied (for example, `THIRD_PARTY_PAYMENT_FEE` or `THIRD_PARTY_REFUND_FEE`).",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "PaymentAppProcessingFeeType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PaymentAppProcessingFeeFieldsListFilterInput",
          "description": "Input type used to specify filters on a `PaymentAppProcessingFee` object referenced directly\nor transitively from a list field that has been configured to index each leaf field as\nits own flattened list of values.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `PaymentAppProcessingFeeFieldsListFilterInput` input\nbecause of collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentAppProcessingFeeFieldsListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "amountMoney",
              "description": "Used to filter on the `amountMoney` field:\n\n> The exact fee amount assessed based on the payment fee rate.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MoneyFieldsListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentAppProcessingFeeFieldsListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "count",
              "description": "Used to filter on the number of non-null elements in this list field.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "effectiveAt",
              "description": "Used to filter on the `effectiveAt` field:\n\n> The timestamp of when the fee takes effect, in RFC 3339 format.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentAppProcessingFeeFieldsListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "partyAccountId",
              "description": "Used to filter on the `partyAccountId` field:\n\n> The platform account token for this payment fee.\n> For a capture, this is the recipient of funds. For a refund, this is the source of funds.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "priceSelectors",
              "description": "Used to filter on the `priceSelectors` field:\n\n> The price selector IDs of the payment fee being applied.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "type",
              "description": "Used to filter on the `type` field:\n\n> The type of payment fee being applied (for example, `THIRD_PARTY_PAYMENT_FEE` or `THIRD_PARTY_REFUND_FEE`).\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentAppProcessingFeeTypeListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PaymentAppProcessingFeeType",
          "description": "The type of payment fee being applied.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "THIRD_PARTY_PAYMENT_FEE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "THIRD_PARTY_REFUND_FEE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PaymentAppProcessingFeeTypeInput",
          "description": "The type of payment fee being applied.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "THIRD_PARTY_PAYMENT_FEE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "THIRD_PARTY_REFUND_FEE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PaymentAppProcessingFeeTypeListElementFilterInput",
          "description": "Input type used to specify filters on elements of a `[PaymentAppProcessingFeeType]` field.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `PaymentAppProcessingFeeTypeListElementFilterInput`\ninput because of collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentAppProcessingFeeTypeListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentAppProcessingFeeTypeListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "PaymentAppProcessingFeeTypeInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PaymentAppProcessingFeeTypeListFilterInput",
          "description": "Input type used to specify filters on `[PaymentAppProcessingFeeType]` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `PaymentAppProcessingFeeTypeListFilterInput` input\nbecause of collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentAppProcessingFeeTypeListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentAppProcessingFeeTypeListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anySatisfy",
              "description": "Matches records where any of the list elements match the provided sub-filter.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentAppProcessingFeeTypeListElementFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentAppProcessingFeeTypeListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PaymentCapability",
          "description": "Actions that can be performed on a payment.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "EDIT_AMOUNT_DOWN",
              "description": "The payment amount can be edited down.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EDIT_AMOUNT_UP",
              "description": "The payment amount can be edited up.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EDIT_DELAY_ACTION",
              "description": "The delay action can be edited.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EDIT_TIP_AMOUNT_DOWN",
              "description": "The tip amount can be edited down.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EDIT_TIP_AMOUNT_UP",
              "description": "The tip amount can be edited up.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PaymentCapabilityInput",
          "description": "Actions that can be performed on a payment.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "EDIT_AMOUNT",
              "description": null,
              "isDeprecated": true,
              "deprecationReason": "Use `EDIT_AMOUNT_UP` and `EDIT_AMOUNT_DOWN` instead."
            },
            {
              "name": "EDIT_AMOUNT_DOWN",
              "description": "The payment amount can be edited down.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EDIT_AMOUNT_UP",
              "description": "The payment amount can be edited up.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EDIT_DELAY_ACTION",
              "description": "The delay action can be edited.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EDIT_DELAY_ACTION_VIA_PAY_ORDER",
              "description": "The delay action can be edited via the payment order.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EDIT_TIP_AMOUNT",
              "description": null,
              "isDeprecated": true,
              "deprecationReason": "Use `EDIT_TIP_AMOUNT_UP` and `EDIT_TIP_AMOUNT_DOWN` instead."
            },
            {
              "name": "EDIT_TIP_AMOUNT_DOWN",
              "description": "The tip amount can be edited down.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EDIT_TIP_AMOUNT_UP",
              "description": "The tip amount can be edited up.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PaymentCapabilityListElementFilterInput",
          "description": "Input type used to specify filters on elements of a `[PaymentCapability]` field.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `PaymentCapabilityListElementFilterInput` input\nbecause of collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentCapabilityListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentCapabilityListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "PaymentCapabilityInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PaymentCapabilityListFilterInput",
          "description": "Input type used to specify filters on `[PaymentCapability]` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `PaymentCapabilityListFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentCapabilityListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentCapabilityListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anySatisfy",
              "description": "Matches records where any of the list elements match the provided sub-filter.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentCapabilityListElementFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentCapabilityListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PaymentConnection",
          "description": "Represents a paginated collection of `Payment` results.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Connection-Types) for more info.\n\nPermissions: PAYMENTS_READ.",
          "fields": [
            {
              "name": "edges",
              "description": "Wraps a specific `Payment` to pair it with its pagination cursor.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PaymentEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalEdgeCount",
              "description": "The total number of edges available in this connection to paginate over.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PaymentDelayAction",
          "description": "The action to be applied to the payment when the `delayDuration` has elapsed.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CANCEL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COMPLETE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PaymentDelayActionFilterInput",
          "description": "Input type used to specify filters on `PaymentDelayAction` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `PaymentDelayActionFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentDelayActionFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentDelayActionFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "PaymentDelayActionInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentDelayActionFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PaymentDelayActionInput",
          "description": "The action to be applied to the payment when the `delayDuration` has elapsed.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CANCEL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COMPLETE",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PaymentDeviceDetails",
          "description": "Permissions: PAYMENTS_READ\n\nDetails about the device that took the payment.",
          "fields": [
            {
              "name": "deviceId",
              "description": "Square-issued ID of the device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceInstallationId",
              "description": "Square-issued installation ID for the device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceName",
              "description": "The name of the device set by the seller.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PaymentDeviceDetailsFilterInput",
          "description": "Input type used to specify filters on `PaymentDeviceDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "deviceId",
              "description": "Used to filter on the `deviceId` field:\n\n> Square-issued ID of the device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deviceInstallationId",
              "description": "Used to filter on the `deviceInstallationId` field:\n\n> Square-issued installation ID for the device.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deviceName",
              "description": "Used to filter on the `deviceName` field:\n\n> The name of the device set by the seller.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PaymentEdge",
          "description": "Represents a specific `Payment` in the context of a `PaymentConnection`,\nproviding access to both the `Payment` and a pagination `Cursor`.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Edge-Types) for more info.\n\nPermissions: PAYMENTS_READ.",
          "fields": [
            {
              "name": "cursor",
              "description": "The `Cursor` of this `Payment`. This can be passed in the next query as\na `before` or `after` argument to continue paginating from this `Payment`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `Payment` of this edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Payment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PaymentFilter",
          "description": "Input type used to specify filters on `Payment` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "amountMoney",
              "description": "Used to filter on the `amountMoney` field:\n\n> The amount processed for this payment, not including `tipMoney`.\n>\n> The amount is specified in the smallest denomination of the applicable currency (for example,\n> US dollar amounts are specified in cents). For more information, see\n> [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts).\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MoneyFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "appFeeMoney",
              "description": "Used to filter on the `appFeeMoney` field:\n\n> The amount the developer is taking as a fee for facilitating the payment on behalf\n> of the seller. This amount is specified in the smallest denomination of the applicable currency\n> (for example, US dollar amounts are specified in cents). For more information,\n> see [Take Payments and Collect Fees](https://developer.squareup.com/docs/payments-api/take-payments-and-collect-fees).\n>\n> The amount cannot be more than 90% of the `total_money` value.\n>\n> To set this field, `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS` OAuth permission is required.\n> For more information, see [Permissions](https://developer.squareup.com/docs/payments-api/take-payments-and-collect-fees#permissions).\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MoneyFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "applicationDetails",
              "description": "Used to filter on the `applicationDetails` field:\n\n> Details about the application that took the payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentApplicationDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "approvedMoney",
              "description": "Used to filter on the `approvedMoney` field:\n\n> The initial amount of money approved for this payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MoneyFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "bankAccountDetails",
              "description": "Used to filter on the `bankAccountDetails` field:\n\n> Details about a bank account payment. These details are only populated if the `sourceType` is `BANK_ACCOUNT`.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BankAccountPaymentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "billingAddress",
              "description": "Used to filter on the `billingAddress` field:\n\n> The buyer's billing address.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AddressFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "buyNowPayLaterDetails",
              "description": "Used to filter on the `buyNowPayLaterDetails` field:\n\n> Details about a Buy Now Pay Later payment. The details are only populated\n> if the `sourceType` is `BUY_NOW_PAY_LATER`. For more information, see\n> [Afterpay Payments](https://developer.squareup.com/docs/payments-api/take-payments/afterpay-payments).\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BuyNowPayLaterPaymentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "buyerEmailAddress",
              "description": "Used to filter on the `buyerEmailAddress` field:\n\n> The buyer's email address.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "capabilities",
              "description": "Used to filter on the `capabilities` field:\n\n> Actions that can be performed on this payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentCapabilityListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cardDetails",
              "description": "Used to filter on the `cardDetails` field:\n\n> Details about a card payment. These details are only populated if the `sourceType` is CARD.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CardPaymentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cashDetails",
              "description": "Used to filter on the `cashDetails` field:\n\n> Details about a cash payment. These details are only populated if the `sourceType` is `CASH`.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "CashPaymentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "Used to filter on the `createdAt` field:\n\n> The timestamp of when the payment was created, in RFC 3339 format.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "customerId",
              "description": "Used to filter on the `customerId` field:\n\n> The [Customer](https://developer.squareup.com/reference/square/payments-api/list-payments#type-customer)\n> ID of the customer associated with the payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "delayAction",
              "description": "Used to filter on the `delayAction` field:\n\n> The action to be applied to the payment when the `delayDuration` has elapsed.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentDelayActionFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "delayDuration",
              "description": "Used to filter on the `delayDuration` field:\n\n> The duration of time after the payment's creation when Square automatically applies the\n> `delayAction` to the payment. This automatic `delayAction` applies only to payments that\n> don't reach a terminal state (COMPLETED, CANCELED, or FAILED) before the `delayDuration`\n> time period.\n>\n> This field is specified as a time duration, in RFC 3339 format.\n>\n> Notes:\n> This feature is only supported for card payments.\n>\n> Default:\n>\n>   - Card Present payments: \"PT36H\" (36 hours) from the creation time.\n>   - Card Not Present payments: \"P7D\" (7 days) from the creation time.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DurationFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "delayedUntil",
              "description": "Used to filter on the `delayedUntil` field:\n\n> The read-only timestamp of when the `delayAction` is automatically applied,\n> in RFC 3339 format.\n>\n> Note that this field is calculated by summing the payment's `delayDuration` and `createdAt`\n> fields. The `createdAt` field is generated by Square and might not exactly match the\n> time on your local machine.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "deviceDetails",
              "description": "Used to filter on the `deviceDetails` field:\n\n> Details about the device that took the payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentDeviceDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "externalDetails",
              "description": "Used to filter on the `externalDetails` field:\n\n> Details about an external payment. The details are only populated if the `sourceType` is `EXTERNAL`.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ExternalPaymentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "Used to filter on the `id` field:\n\n> Unique ID for the payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "locationId",
              "description": "Used to filter on the `locationId` field:\n\n> The ID of the location associated with the payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "Used to filter on the `merchantId` field:\n\n> The ID of the merchant associated with the payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "note",
              "description": "Used to filter on the `note` field:\n\n> An optional note to include when creating a payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "orderId",
              "description": "Used to filter on the `orderId` field:\n\n> The ID of the order associated with the payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "processingFees",
              "description": "Used to filter on the `processingFees` field:\n\n> The processing fees and fee adjustments assessed by Square for this payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentProcessingFeeFieldsListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "receiptNumber",
              "description": "Used to filter on the `receiptNumber` field:\n\n> The payment's receipt number.\n> The field will be missing if a payment is canceled.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "receiptUrl",
              "description": "Used to filter on the `receiptUrl` field:\n\n> The URL for the payment's receipt.\n> The field is only populated for COMPLETED payments.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UrlFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "referenceId",
              "description": "Used to filter on the `referenceId` field:\n\n> An optional ID that associates this payment with an entity in another system.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "refundedMoney",
              "description": "Used to filter on the `refundedMoney` field:\n\n> The total amount of the payment refunded to date.\n>\n> This amount is specified in the smallest denomination of the applicable currency (for example,\n> US dollar amounts are specified in cents).\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MoneyFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "riskEvaluation",
              "description": "Used to filter on the `riskEvaluation` field:\n\n> Provides information about the risk associated with this payment, as determined by Square.\n> This field will be present for payments to sellers that have opted in to receive risk\n> evaluations.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentRiskEvaluationFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "shippingAddress",
              "description": "Used to filter on the `shippingAddress` field:\n\n> The buyer's shipping address.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AddressFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "sourceType",
              "description": "Used to filter on the `sourceType` field:\n\n> The source type for the payment.\n>\n> For information about these payment source types,\n> see [Take Payments](https://developer.squareup.com/docs/payments-api/take-payments).\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentSourceTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "statementDescriptionIdentifier",
              "description": "Used to filter on the `statementDescriptionIdentifier` field:\n\n> Additional payment information that gets added on the customer's card statement\n> as part of the statement description.\n>\n> Note that the `statementDescriptionIdentifier` may get truncated on the statement description\n> to fit the required information including the Square identifier (SQ *) and name of the\n> seller taking the payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "status",
              "description": "Used to filter on the `status` field:\n\n> Indicates whether the payment is APPROVED, PENDING, COMPLETED, CANCELED, or FAILED.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "teamMemberId",
              "description": "Used to filter on the `teamMemberId` field:\n\n> An optional ID of the TeamMember associated with taking the payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "tipMoney",
              "description": "Used to filter on the `tipMoney` field:\n\n> The amount designated as a tip.\n>\n> This amount is specified in the smallest denomination of the applicable currency (for example,\n> US dollar amounts are specified in cents). For more information, see\n> [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts).\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MoneyFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "totalMoney",
              "description": "Used to filter on the `totalMoney` field:\n\n> The total amount for the payment, including `amountMoney` and `tipMoney`.\n>\n> This amount is specified in the smallest denomination of the applicable currency (for example,\n> US dollar amounts are specified in cents). For more information, see\n> [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts).\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MoneyFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Used to filter on the `updatedAt` field:\n\n> The timestamp of when the payment was last updated, in RFC 3339 format.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "walletDetails",
              "description": "Used to filter on the `walletDetails` field:\n\n> Details about an wallet payment. The details are only populated if the `sourceType` is `WALLET`.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DigitalWalletPaymentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PaymentProcessingFee",
          "description": "Permissions: PAYMENTS_READ\n\nRepresents the Square processing fee.",
          "fields": [
            {
              "name": "amountMoney",
              "description": "The fee amount, which might be negative, that is assessed or adjusted by Square.\n\nPositive values represent funds being assessed, while negative values represent funds being returned.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "effectiveAt",
              "description": "The timestamp of when the fee takes effect, in RFC 3339 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of fee assessed or adjusted.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "PaymentProcessingFeeType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PaymentProcessingFeeFieldsListFilterInput",
          "description": "Input type used to specify filters on a `PaymentProcessingFee` object referenced directly\nor transitively from a list field that has been configured to index each leaf field as\nits own flattened list of values.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "amountMoney",
              "description": "Used to filter on the `amountMoney` field:\n\n> The fee amount, which might be negative, that is assessed or adjusted by Square.\n>\n> Positive values represent funds being assessed, while negative values represent funds being returned.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MoneyFieldsListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "effectiveAt",
              "description": "Used to filter on the `effectiveAt` field:\n\n> The timestamp of when the fee takes effect, in RFC 3339 format.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "type",
              "description": "Used to filter on the `type` field:\n\n> The type of fee assessed or adjusted.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentProcessingFeeTypeListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PaymentProcessingFeeType",
          "description": "The type of fee assessed or adjusted.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ADJUSTMENT",
              "description": "Type used for an adjustment to the initial processing fee.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INITIAL",
              "description": "Type used on the initial processing fee.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PaymentProcessingFeeTypeInput",
          "description": "The type of fee assessed or adjusted.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ADJUSTMENT",
              "description": "Type used for an adjustment to the initial processing fee.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INITIAL",
              "description": "Type used on the initial processing fee.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PaymentProcessingFeeTypeListElementFilterInput",
          "description": "Input type used to specify filters on elements of a `[PaymentProcessingFeeType]` field.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `PaymentProcessingFeeTypeListElementFilterInput` input\nbecause of collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentProcessingFeeTypeListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentProcessingFeeTypeListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "PaymentProcessingFeeTypeInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PaymentProcessingFeeTypeListFilterInput",
          "description": "Input type used to specify filters on `[PaymentProcessingFeeType]` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `PaymentProcessingFeeTypeListFilterInput` input\nbecause of collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentProcessingFeeTypeListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentProcessingFeeTypeListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anySatisfy",
              "description": "Matches records where any of the list elements match the provided sub-filter.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentProcessingFeeTypeListElementFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentProcessingFeeTypeListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PaymentRefund",
          "description": "Permissions: PAYMENTS_READ\n\nRepresents a refund of a payment made using Square. Contains information about\nthe original payment and the amount of money refunded.\n\n\nFor more performant queries on this type, please filter on `merchantId` if possible.",
          "fields": [
            {
              "name": "amountMoney",
              "description": "The amount of money refunded. This amount is specified in the smallest denomination\nof the applicable currency (for example, US dollar amounts are specified in cents).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appFeeMoney",
              "description": "The amount of money the application developer contributed to help cover the refunded amount.\nThis amount is specified in the smallest denomination of the applicable currency (for example,\nUS dollar amounts are specified in cents). For more information, see\n[Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The timestamp of when the refund was created, in RFC 3339 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "errors",
              "description": "Information about errors encountered during the request.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Error",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The unique ID for this refund, generated by Square.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locationId",
              "description": "The location ID associated with the payment this refund is attached to.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The merchant ID associated with the payment this refund is attached to.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "orderId",
              "description": "The ID of the order associated with the refund.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payment",
              "description": "The payment this refund belongs to.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Payment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "paymentId",
              "description": "The ID of the payment associated with this refund.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "processingFees",
              "description": "Processing fees and fee adjustments assessed by Square for this refund.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PaymentProcessingFee",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reason",
              "description": "The reason for the refund.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "The refund's status.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "PaymentRefundStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMemberId",
              "description": "An optional ID of the team member associated with taking the payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The timestamp of when the refund was last updated, in RFC 3339 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PaymentRefundConnection",
          "description": "Represents a paginated collection of `PaymentRefund` results.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Connection-Types) for more info.\n\nPermissions: PAYMENTS_READ.",
          "fields": [
            {
              "name": "edges",
              "description": "Wraps a specific `PaymentRefund` to pair it with its pagination cursor.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PaymentRefundEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalEdgeCount",
              "description": "The total number of edges available in this connection to paginate over.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PaymentRefundEdge",
          "description": "Represents a specific `PaymentRefund` in the context of a `PaymentRefundConnection`,\nproviding access to both the `PaymentRefund` and a pagination `Cursor`.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Edge-Types) for more info.\n\nPermissions: PAYMENTS_READ.",
          "fields": [
            {
              "name": "cursor",
              "description": "The `Cursor` of this `PaymentRefund`. This can be passed in the next query as\na `before` or `after` argument to continue paginating from this `PaymentRefund`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `PaymentRefund` of this edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "PaymentRefund",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PaymentRefundFilter",
          "description": "Input type used to specify filters on `PaymentRefund` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "amountMoney",
              "description": "Used to filter on the `amountMoney` field:\n\n> The amount of money refunded. This amount is specified in the smallest denomination\n> of the applicable currency (for example, US dollar amounts are specified in cents).\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MoneyFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "appFeeMoney",
              "description": "Used to filter on the `appFeeMoney` field:\n\n> The amount of money the application developer contributed to help cover the refunded amount.\n> This amount is specified in the smallest denomination of the applicable currency (for example,\n> US dollar amounts are specified in cents). For more information, see\n> [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts).\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MoneyFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "Used to filter on the `createdAt` field:\n\n> The timestamp of when the refund was created, in RFC 3339 format.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "errors",
              "description": "Used to filter on the `errors` field:\n\n> Information about errors encountered during the request.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ErrorFieldsListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "Used to filter on the `id` field:\n\n> The unique ID for this refund, generated by Square.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "locationId",
              "description": "Used to filter on the `locationId` field:\n\n> The location ID associated with the payment this refund is attached to.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "Used to filter on the `merchantId` field:\n\n> The merchant ID associated with the payment this refund is attached to.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "orderId",
              "description": "Used to filter on the `orderId` field:\n\n> The ID of the order associated with the refund.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> The ID of the payment associated with this refund.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "processingFees",
              "description": "Used to filter on the `processingFees` field:\n\n> Processing fees and fee adjustments assessed by Square for this refund.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentProcessingFeeFieldsListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "reason",
              "description": "Used to filter on the `reason` field:\n\n> The reason for the refund.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "status",
              "description": "Used to filter on the `status` field:\n\n> The refund's status.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentRefundStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "teamMemberId",
              "description": "Used to filter on the `teamMemberId` field:\n\n> An optional ID of the team member associated with taking the payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Used to filter on the `updatedAt` field:\n\n> The timestamp of when the refund was last updated, in RFC 3339 format.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PaymentRefundSortOrder",
          "description": "Enumerates the ways `PaymentRefund`s can be sorted.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "amountMoney_amount_ASC",
              "description": "Sorts ascending by the `amountMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "amountMoney_amount_DESC",
              "description": "Sorts descending by the `amountMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "amountMoney_currency_ASC",
              "description": "Sorts ascending by the `amountMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "amountMoney_currency_DESC",
              "description": "Sorts descending by the `amountMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appFeeMoney_amount_ASC",
              "description": "Sorts ascending by the `appFeeMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appFeeMoney_amount_DESC",
              "description": "Sorts descending by the `appFeeMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appFeeMoney_currency_ASC",
              "description": "Sorts ascending by the `appFeeMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appFeeMoney_currency_DESC",
              "description": "Sorts descending by the `appFeeMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt_ASC",
              "description": "Sorts ascending by the `createdAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt_DESC",
              "description": "Sorts descending by the `createdAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id_ASC",
              "description": "Sorts ascending by the `id` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id_DESC",
              "description": "Sorts descending by the `id` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locationId_ASC",
              "description": "Sorts ascending by the `locationId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locationId_DESC",
              "description": "Sorts descending by the `locationId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId_ASC",
              "description": "Sorts ascending by the `merchantId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId_DESC",
              "description": "Sorts descending by the `merchantId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "orderId_ASC",
              "description": "Sorts ascending by the `orderId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "orderId_DESC",
              "description": "Sorts descending by the `orderId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "paymentId_ASC",
              "description": "Sorts ascending by the `paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "paymentId_DESC",
              "description": "Sorts descending by the `paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reason_ASC",
              "description": "Sorts ascending by the `reason` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reason_DESC",
              "description": "Sorts descending by the `reason` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status_ASC",
              "description": "Sorts ascending by the `status` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status_DESC",
              "description": "Sorts descending by the `status` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMemberId_ASC",
              "description": "Sorts ascending by the `teamMemberId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMemberId_DESC",
              "description": "Sorts descending by the `teamMemberId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt_ASC",
              "description": "Sorts ascending by the `updatedAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt_DESC",
              "description": "Sorts descending by the `updatedAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PaymentRefundStatus",
          "description": "Indicates the current status of a `PaymentRefund` object.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "COMPLETED",
              "description": "Successfully completed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FAILED",
              "description": "An error occurred.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PENDING",
              "description": "Awaiting approval.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REJECTED",
              "description": "The refund was rejected.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PaymentRefundStatusFilter",
          "description": "Input type used to specify filters on `PaymentRefundStatus` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `PaymentRefundStatusFilter` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentRefundStatusFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentRefundStatusFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "PaymentRefundStatus",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentRefundStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PaymentRiskEvaluation",
          "description": "Permissions: PAYMENTS_READ\n\nRepresents fraud risk information for the associated payment.\n\nWhen you take a payment through Square's Payments API (using the `CreatePayment`\nendpoint), Square evaluates it and assigns a risk level to the payment. Sellers\ncan use this information to determine the course of action (for example,\nprovide the goods/services or refund the payment).",
          "fields": [
            {
              "name": "createdAt",
              "description": "The timestamp when payment risk was evaluated, in RFC3339 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "riskLevel",
              "description": "The risk level associated with the payment.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "PaymentRiskEvaluationRiskLevel",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PaymentRiskEvaluationFilterInput",
          "description": "Input type used to specify filters on `PaymentRiskEvaluation` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "createdAt",
              "description": "Used to filter on the `createdAt` field:\n\n> The timestamp when payment risk was evaluated, in RFC3339 format.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "riskLevel",
              "description": "Used to filter on the `riskLevel` field:\n\n> The risk level associated with the payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentRiskEvaluationRiskLevelFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PaymentRiskEvaluationRiskLevel",
          "description": "Represents a risk level produced by evaluating a payment.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "HIGH",
              "description": "Indicates significantly elevated risk level with the payment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MODERATE",
              "description": "Indicates elevated risk level associated with the payment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NORMAL",
              "description": "Indicates payment risk is within the normal range.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PENDING",
              "description": "Indicates Square is still evaluating the payment.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PaymentRiskEvaluationRiskLevelFilterInput",
          "description": "Input type used to specify filters on `PaymentRiskEvaluationRiskLevel` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `PaymentRiskEvaluationRiskLevelFilterInput` input\nbecause of collisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentRiskEvaluationRiskLevelFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentRiskEvaluationRiskLevelFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "PaymentRiskEvaluationRiskLevelInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentRiskEvaluationRiskLevelFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PaymentRiskEvaluationRiskLevelInput",
          "description": "Represents a risk level produced by evaluating a payment.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "HIGH",
              "description": "Indicates significantly elevated risk level with the payment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MODERATE",
              "description": "Indicates elevated risk level associated with the payment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NORMAL",
              "description": "Indicates payment risk is within the normal range.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PENDING",
              "description": "Indicates Square is still evaluating the payment.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PaymentSortOrder",
          "description": "Enumerates the ways `Payment`s can be sorted.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "amountMoney_amount_ASC",
              "description": "Sorts ascending by the `amountMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "amountMoney_amount_DESC",
              "description": "Sorts descending by the `amountMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "amountMoney_currency_ASC",
              "description": "Sorts ascending by the `amountMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "amountMoney_currency_DESC",
              "description": "Sorts descending by the `amountMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appFeeMoney_amount_ASC",
              "description": "Sorts ascending by the `appFeeMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appFeeMoney_amount_DESC",
              "description": "Sorts descending by the `appFeeMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appFeeMoney_currency_ASC",
              "description": "Sorts ascending by the `appFeeMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "appFeeMoney_currency_DESC",
              "description": "Sorts descending by the `appFeeMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "applicationDetails_applicationId_ASC",
              "description": "Sorts ascending by the `applicationDetails.applicationId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "applicationDetails_applicationId_DESC",
              "description": "Sorts descending by the `applicationDetails.applicationId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "applicationDetails_squareProduct_ASC",
              "description": "Sorts ascending by the `applicationDetails.squareProduct` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "applicationDetails_squareProduct_DESC",
              "description": "Sorts descending by the `applicationDetails.squareProduct` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "approvedMoney_amount_ASC",
              "description": "Sorts ascending by the `approvedMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "approvedMoney_amount_DESC",
              "description": "Sorts descending by the `approvedMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "approvedMoney_currency_ASC",
              "description": "Sorts ascending by the `approvedMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "approvedMoney_currency_DESC",
              "description": "Sorts descending by the `approvedMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bankAccountDetails_accountOwnershipType_ASC",
              "description": "Sorts ascending by the `bankAccountDetails.accountOwnershipType` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bankAccountDetails_accountOwnershipType_DESC",
              "description": "Sorts descending by the `bankAccountDetails.accountOwnershipType` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bankAccountDetails_bankName_ASC",
              "description": "Sorts ascending by the `bankAccountDetails.bankName` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bankAccountDetails_bankName_DESC",
              "description": "Sorts descending by the `bankAccountDetails.bankName` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bankAccountDetails_country_ASC",
              "description": "Sorts ascending by the `bankAccountDetails.country` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bankAccountDetails_country_DESC",
              "description": "Sorts descending by the `bankAccountDetails.country` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bankAccountDetails_fingerprint_ASC",
              "description": "Sorts ascending by the `bankAccountDetails.fingerprint` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bankAccountDetails_fingerprint_DESC",
              "description": "Sorts descending by the `bankAccountDetails.fingerprint` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bankAccountDetails_statementDescription_ASC",
              "description": "Sorts ascending by the `bankAccountDetails.statementDescription` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bankAccountDetails_statementDescription_DESC",
              "description": "Sorts descending by the `bankAccountDetails.statementDescription` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bankAccountDetails_transferType_ASC",
              "description": "Sorts ascending by the `bankAccountDetails.transferType` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bankAccountDetails_transferType_DESC",
              "description": "Sorts descending by the `bankAccountDetails.transferType` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "buyNowPayLaterDetails_afterpayDetails_emailAddress_ASC",
              "description": "Sorts ascending by the `buyNowPayLaterDetails.afterpayDetails.emailAddress` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "buyNowPayLaterDetails_afterpayDetails_emailAddress_DESC",
              "description": "Sorts descending by the `buyNowPayLaterDetails.afterpayDetails.emailAddress` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "buyNowPayLaterDetails_brand_ASC",
              "description": "Sorts ascending by the `buyNowPayLaterDetails.brand` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "buyNowPayLaterDetails_brand_DESC",
              "description": "Sorts descending by the `buyNowPayLaterDetails.brand` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "buyNowPayLaterDetails_clearpayDetails_emailAddress_ASC",
              "description": "Sorts ascending by the `buyNowPayLaterDetails.clearpayDetails.emailAddress` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "buyNowPayLaterDetails_clearpayDetails_emailAddress_DESC",
              "description": "Sorts descending by the `buyNowPayLaterDetails.clearpayDetails.emailAddress` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "buyerEmailAddress_ASC",
              "description": "Sorts ascending by the `buyerEmailAddress` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "buyerEmailAddress_DESC",
              "description": "Sorts descending by the `buyerEmailAddress` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_applicationCryptogram_ASC",
              "description": "Sorts ascending by the `cardDetails.applicationCryptogram` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_applicationCryptogram_DESC",
              "description": "Sorts descending by the `cardDetails.applicationCryptogram` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_applicationIdentifier_ASC",
              "description": "Sorts ascending by the `cardDetails.applicationIdentifier` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_applicationIdentifier_DESC",
              "description": "Sorts descending by the `cardDetails.applicationIdentifier` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_applicationName_ASC",
              "description": "Sorts ascending by the `cardDetails.applicationName` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_applicationName_DESC",
              "description": "Sorts descending by the `cardDetails.applicationName` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_authResultCode_ASC",
              "description": "Sorts ascending by the `cardDetails.authResultCode` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_authResultCode_DESC",
              "description": "Sorts descending by the `cardDetails.authResultCode` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_avsStatus_ASC",
              "description": "Sorts ascending by the `cardDetails.avsStatus` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_avsStatus_DESC",
              "description": "Sorts descending by the `cardDetails.avsStatus` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_cardPaymentTimeline_authorizedAt_ASC",
              "description": "Sorts ascending by the `cardDetails.cardPaymentTimeline.authorizedAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_cardPaymentTimeline_authorizedAt_DESC",
              "description": "Sorts descending by the `cardDetails.cardPaymentTimeline.authorizedAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_cardPaymentTimeline_capturedAt_ASC",
              "description": "Sorts ascending by the `cardDetails.cardPaymentTimeline.capturedAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_cardPaymentTimeline_capturedAt_DESC",
              "description": "Sorts descending by the `cardDetails.cardPaymentTimeline.capturedAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_cardPaymentTimeline_voidedAt_ASC",
              "description": "Sorts ascending by the `cardDetails.cardPaymentTimeline.voidedAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_cardPaymentTimeline_voidedAt_DESC",
              "description": "Sorts descending by the `cardDetails.cardPaymentTimeline.voidedAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_card_bin_ASC",
              "description": "Sorts ascending by the `cardDetails.card.bin` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_card_bin_DESC",
              "description": "Sorts descending by the `cardDetails.card.bin` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_card_cardBrand_ASC",
              "description": "Sorts ascending by the `cardDetails.card.cardBrand` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_card_cardBrand_DESC",
              "description": "Sorts descending by the `cardDetails.card.cardBrand` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_card_cardCoBrand_ASC",
              "description": "Sorts ascending by the `cardDetails.card.cardCoBrand` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_card_cardCoBrand_DESC",
              "description": "Sorts descending by the `cardDetails.card.cardCoBrand` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_card_cardType_ASC",
              "description": "Sorts ascending by the `cardDetails.card.cardType` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_card_cardType_DESC",
              "description": "Sorts descending by the `cardDetails.card.cardType` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_card_cardholderName_ASC",
              "description": "Sorts ascending by the `cardDetails.card.cardholderName` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_card_cardholderName_DESC",
              "description": "Sorts descending by the `cardDetails.card.cardholderName` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_card_expMonth_ASC",
              "description": "Sorts ascending by the `cardDetails.card.expMonth` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_card_expMonth_DESC",
              "description": "Sorts descending by the `cardDetails.card.expMonth` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_card_expYear_ASC",
              "description": "Sorts ascending by the `cardDetails.card.expYear` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_card_expYear_DESC",
              "description": "Sorts descending by the `cardDetails.card.expYear` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_card_fingerprint_ASC",
              "description": "Sorts ascending by the `cardDetails.card.fingerprint` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_card_fingerprint_DESC",
              "description": "Sorts descending by the `cardDetails.card.fingerprint` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_card_last4_ASC",
              "description": "Sorts ascending by the `cardDetails.card.last4` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_card_last4_DESC",
              "description": "Sorts descending by the `cardDetails.card.last4` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_card_prepaidType_ASC",
              "description": "Sorts ascending by the `cardDetails.card.prepaidType` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_card_prepaidType_DESC",
              "description": "Sorts descending by the `cardDetails.card.prepaidType` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_cvvStatus_ASC",
              "description": "Sorts ascending by the `cardDetails.cvvStatus` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_cvvStatus_DESC",
              "description": "Sorts descending by the `cardDetails.cvvStatus` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_entryMethod_ASC",
              "description": "Sorts ascending by the `cardDetails.entryMethod` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_entryMethod_DESC",
              "description": "Sorts descending by the `cardDetails.entryMethod` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_statementDescription_ASC",
              "description": "Sorts ascending by the `cardDetails.statementDescription` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_statementDescription_DESC",
              "description": "Sorts descending by the `cardDetails.statementDescription` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_status_ASC",
              "description": "Sorts ascending by the `cardDetails.status` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_status_DESC",
              "description": "Sorts descending by the `cardDetails.status` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_verificationMethod_ASC",
              "description": "Sorts ascending by the `cardDetails.verificationMethod` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_verificationMethod_DESC",
              "description": "Sorts descending by the `cardDetails.verificationMethod` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_verificationResults_ASC",
              "description": "Sorts ascending by the `cardDetails.verificationResults` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardDetails_verificationResults_DESC",
              "description": "Sorts descending by the `cardDetails.verificationResults` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cashDetails_buyerSuppliedMoney_amount_ASC",
              "description": "Sorts ascending by the `cashDetails.buyerSuppliedMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cashDetails_buyerSuppliedMoney_amount_DESC",
              "description": "Sorts descending by the `cashDetails.buyerSuppliedMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cashDetails_buyerSuppliedMoney_currency_ASC",
              "description": "Sorts ascending by the `cashDetails.buyerSuppliedMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cashDetails_buyerSuppliedMoney_currency_DESC",
              "description": "Sorts descending by the `cashDetails.buyerSuppliedMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cashDetails_changeBackMoney_amount_ASC",
              "description": "Sorts ascending by the `cashDetails.changeBackMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cashDetails_changeBackMoney_amount_DESC",
              "description": "Sorts descending by the `cashDetails.changeBackMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cashDetails_changeBackMoney_currency_ASC",
              "description": "Sorts ascending by the `cashDetails.changeBackMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cashDetails_changeBackMoney_currency_DESC",
              "description": "Sorts descending by the `cashDetails.changeBackMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt_ASC",
              "description": "Sorts ascending by the `createdAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt_DESC",
              "description": "Sorts descending by the `createdAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customerId_ASC",
              "description": "Sorts ascending by the `customerId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customerId_DESC",
              "description": "Sorts descending by the `customerId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "delayAction_ASC",
              "description": "Sorts ascending by the `delayAction` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "delayAction_DESC",
              "description": "Sorts descending by the `delayAction` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "delayDuration_ASC",
              "description": "Sorts ascending by the `delayDuration` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "delayDuration_DESC",
              "description": "Sorts descending by the `delayDuration` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "delayedUntil_ASC",
              "description": "Sorts ascending by the `delayedUntil` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "delayedUntil_DESC",
              "description": "Sorts descending by the `delayedUntil` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceDetails_deviceId_ASC",
              "description": "Sorts ascending by the `deviceDetails.deviceId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceDetails_deviceId_DESC",
              "description": "Sorts descending by the `deviceDetails.deviceId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceDetails_deviceInstallationId_ASC",
              "description": "Sorts ascending by the `deviceDetails.deviceInstallationId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceDetails_deviceInstallationId_DESC",
              "description": "Sorts descending by the `deviceDetails.deviceInstallationId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceDetails_deviceName_ASC",
              "description": "Sorts ascending by the `deviceDetails.deviceName` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceDetails_deviceName_DESC",
              "description": "Sorts descending by the `deviceDetails.deviceName` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "externalDetails_sourceFeeMoney_amount_ASC",
              "description": "Sorts ascending by the `externalDetails.sourceFeeMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "externalDetails_sourceFeeMoney_amount_DESC",
              "description": "Sorts descending by the `externalDetails.sourceFeeMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "externalDetails_sourceFeeMoney_currency_ASC",
              "description": "Sorts ascending by the `externalDetails.sourceFeeMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "externalDetails_sourceFeeMoney_currency_DESC",
              "description": "Sorts descending by the `externalDetails.sourceFeeMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "externalDetails_sourceId_ASC",
              "description": "Sorts ascending by the `externalDetails.sourceId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "externalDetails_sourceId_DESC",
              "description": "Sorts descending by the `externalDetails.sourceId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "externalDetails_source_ASC",
              "description": "Sorts ascending by the `externalDetails.source` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "externalDetails_source_DESC",
              "description": "Sorts descending by the `externalDetails.source` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "externalDetails_type_ASC",
              "description": "Sorts ascending by the `externalDetails.type` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "externalDetails_type_DESC",
              "description": "Sorts descending by the `externalDetails.type` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id_ASC",
              "description": "Sorts ascending by the `id` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id_DESC",
              "description": "Sorts descending by the `id` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locationId_ASC",
              "description": "Sorts ascending by the `locationId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locationId_DESC",
              "description": "Sorts descending by the `locationId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId_ASC",
              "description": "Sorts ascending by the `merchantId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId_DESC",
              "description": "Sorts descending by the `merchantId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "note_ASC",
              "description": "Sorts ascending by the `note` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "note_DESC",
              "description": "Sorts descending by the `note` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "orderId_ASC",
              "description": "Sorts ascending by the `orderId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "orderId_DESC",
              "description": "Sorts descending by the `orderId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "receiptNumber_ASC",
              "description": "Sorts ascending by the `receiptNumber` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "receiptNumber_DESC",
              "description": "Sorts descending by the `receiptNumber` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "receiptUrl_ASC",
              "description": "Sorts ascending by the `receiptUrl` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "receiptUrl_DESC",
              "description": "Sorts descending by the `receiptUrl` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "referenceId_ASC",
              "description": "Sorts ascending by the `referenceId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "referenceId_DESC",
              "description": "Sorts descending by the `referenceId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "refundedMoney_amount_ASC",
              "description": "Sorts ascending by the `refundedMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "refundedMoney_amount_DESC",
              "description": "Sorts descending by the `refundedMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "refundedMoney_currency_ASC",
              "description": "Sorts ascending by the `refundedMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "refundedMoney_currency_DESC",
              "description": "Sorts descending by the `refundedMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "riskEvaluation_createdAt_ASC",
              "description": "Sorts ascending by the `riskEvaluation.createdAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "riskEvaluation_createdAt_DESC",
              "description": "Sorts descending by the `riskEvaluation.createdAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "riskEvaluation_riskLevel_ASC",
              "description": "Sorts ascending by the `riskEvaluation.riskLevel` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "riskEvaluation_riskLevel_DESC",
              "description": "Sorts descending by the `riskEvaluation.riskLevel` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sourceType_ASC",
              "description": "Sorts ascending by the `sourceType` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "sourceType_DESC",
              "description": "Sorts descending by the `sourceType` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "statementDescriptionIdentifier_ASC",
              "description": "Sorts ascending by the `statementDescriptionIdentifier` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "statementDescriptionIdentifier_DESC",
              "description": "Sorts descending by the `statementDescriptionIdentifier` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status_ASC",
              "description": "Sorts ascending by the `status` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status_DESC",
              "description": "Sorts descending by the `status` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMemberId_ASC",
              "description": "Sorts ascending by the `teamMemberId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMemberId_DESC",
              "description": "Sorts descending by the `teamMemberId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tipMoney_amount_ASC",
              "description": "Sorts ascending by the `tipMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tipMoney_amount_DESC",
              "description": "Sorts descending by the `tipMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tipMoney_currency_ASC",
              "description": "Sorts ascending by the `tipMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tipMoney_currency_DESC",
              "description": "Sorts descending by the `tipMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalMoney_amount_ASC",
              "description": "Sorts ascending by the `totalMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalMoney_amount_DESC",
              "description": "Sorts descending by the `totalMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalMoney_currency_ASC",
              "description": "Sorts ascending by the `totalMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalMoney_currency_DESC",
              "description": "Sorts descending by the `totalMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt_ASC",
              "description": "Sorts ascending by the `updatedAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt_DESC",
              "description": "Sorts descending by the `updatedAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "walletDetails_brand_ASC",
              "description": "Sorts ascending by the `walletDetails.brand` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "walletDetails_brand_DESC",
              "description": "Sorts descending by the `walletDetails.brand` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "walletDetails_cashAppDetails_buyerCashtag_ASC",
              "description": "Sorts ascending by the `walletDetails.cashAppDetails.buyerCashtag` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "walletDetails_cashAppDetails_buyerCashtag_DESC",
              "description": "Sorts descending by the `walletDetails.cashAppDetails.buyerCashtag` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "walletDetails_cashAppDetails_buyerCountryCode_ASC",
              "description": "Sorts ascending by the `walletDetails.cashAppDetails.buyerCountryCode` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "walletDetails_cashAppDetails_buyerCountryCode_DESC",
              "description": "Sorts descending by the `walletDetails.cashAppDetails.buyerCountryCode` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "walletDetails_cashAppDetails_buyerFullName_ASC",
              "description": "Sorts ascending by the `walletDetails.cashAppDetails.buyerFullName` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "walletDetails_cashAppDetails_buyerFullName_DESC",
              "description": "Sorts descending by the `walletDetails.cashAppDetails.buyerFullName` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "walletDetails_status_ASC",
              "description": "Sorts ascending by the `walletDetails.status` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "walletDetails_status_DESC",
              "description": "Sorts descending by the `walletDetails.status` field.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PaymentSourceType",
          "description": "The source type for a payment.\n\nFor information about these payment source types,\nsee [Take Payments](https://developer.squareup.com/docs/payments-api/take-payments).",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "BANK_ACCOUNT",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BUY_NOW_PAY_LATER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CARD",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CASH",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXTERNAL",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_ACCOUNT",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TRUSTED_PARTNER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WALLET",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PaymentSourceTypeFilterInput",
          "description": "Input type used to specify filters on `PaymentSourceType` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `PaymentSourceTypeFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentSourceTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentSourceTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "PaymentSourceType",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentSourceTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PaymentStatus",
          "description": "Indicates the current status of a `Payment` object.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "APPROVED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CANCELED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COMPLETED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FAILED",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PENDING",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PaymentStatusFilter",
          "description": "Input type used to specify filters on `PaymentStatus` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `PaymentStatusFilter` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentStatusFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentStatusFilter",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "PaymentStatus",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PaymentStatusFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Payout",
          "description": "Permissions: PAYOUTS_READ\n\nRepresents a specific payout (a money transfer) from a Square account to a seller's bank account.\n\n\nFor more performant queries on this type, please filter on `merchant.id` if possible.",
          "fields": [
            {
              "name": "amountMoney",
              "description": "The amount of money involved in the payout. A positive amount indicates a\ndeposit, and a negative amount indicates a withdrawal. This amount is never zero.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "arrivalDate",
              "description": "The calendar date, in ISO 8601 format (YYYY-MM-DD), when the payout is due to arrive in the seller’s banking destination.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Date",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The timestamp of when the payout was created and submitted for deposit to the\nseller's banking destination, in RFC 3339 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "destination",
              "description": "Information about the banking destination (such as a bank account, Square\nchecking account, or debit card) against which the payout was made.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Destination",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "endToEndId",
              "description": "A unique ID for each Payout object that might also appear on the seller’s bank statement.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "A unique ID for the payout.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the location associated with the payout.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "Indicates the payout status.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Indicates the payout type.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The timestamp of when the payout was last updated, in RFC 3339 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version number, which is incremented each time an update is made to this payout record.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PayoutConnection",
          "description": "Represents a paginated collection of `Payout` results.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Connection-Types) for more info.\n\nPermissions: PAYOUTS_READ.",
          "fields": [
            {
              "name": "edges",
              "description": "Wraps a specific `Payout` to pair it with its pagination cursor.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PayoutEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalEdgeCount",
              "description": "The total number of edges available in this connection to paginate over.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PayoutEdge",
          "description": "Represents a specific `Payout` in the context of a `PayoutConnection`,\nproviding access to both the `Payout` and a pagination `Cursor`.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Edge-Types) for more info.\n\nPermissions: PAYOUTS_READ.",
          "fields": [
            {
              "name": "cursor",
              "description": "The `Cursor` of this `Payout`. This can be passed in the next query as\na `before` or `after` argument to continue paginating from this `Payout`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `Payout` of this edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Payout",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PayoutEntry",
          "description": "Permissions: PAYOUTS_READ\n\nPayout entries for a specific payout.\n\n\nFor more performant queries on this type, please filter on `payoutId` if possible.",
          "fields": [
            {
              "name": "effectiveAt",
              "description": "The timestamp of when the payout entry affected the balance, in RFC 3339 format.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "feeAmountMoney",
              "description": "The amount of Square fees associated with this payout entry.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "grossAmountMoney",
              "description": "The amount of money involved in this payout entry.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "A unique ID for the payout entry. Min Length 1.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "netAmountMoney",
              "description": "The net proceeds from this transaction after any fees.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payoutId",
              "description": "The ID of the payout entries’ associated payout. Min Length 1.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of activity associated with this payout entry.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeAppFeeRefundDetails",
              "description": "Details of a refund for an application fee on a payment.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "AppFeeRefundDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeAppFeeRevenueDetails",
              "description": "Revenue generated from an application fee on a payment.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "AppFeeRevenueDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeAutomaticSavingsDetails",
              "description": "Details of any automatic transfer from the payment processing balance to the Square Savings account.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "AutomaticSavingsDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeAutomaticSavingsReversedDetails",
              "description": "Details of any automatic transfer from the Square Savings account back to the processing balance.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "AutomaticSavingsReversedDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeBalanceFoldersTransferDetails",
              "description": "Details of a transfer of funds to a banking folder. In the United States, the\nfolder name is 'Checking Folder'; in Canada, it's 'Balance Folder'.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "BalanceFoldersTransferDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeBalanceFoldersTransferReversedDetails",
              "description": "Details of a transfer of funds from a banking folder. In the United States,\nthe folder name is 'Checking Folder'; in Canada, it's 'Balance Folder'.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "BalanceFoldersTransferReversedDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeChargeDetails",
              "description": "Details of credit card payment captures.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ChargeDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeDepositFeeDetails",
              "description": "Details of any fees involved with deposits such as for instant deposits.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DepositFeeDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeDepositFeeReversedDetails",
              "description": "Details of any reversal or refund of fees involved with deposits such as for instant deposits.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DepositFeeReversedDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeDisputeDetails",
              "description": "Details of any balance change due to a dispute event.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DisputeDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeFeeDetails",
              "description": "Details of adjustments due to the Square processing fee.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FeeDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeFreeProcessingDetails",
              "description": "Details of any credit to the merchant for the purposes of Free Processing.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "FreeProcessingDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeGiftCardLoadFeeDetails",
              "description": "Details of the fee collected during the sale or reload of a gift card. This\nfee, which is a portion of the amount loaded on the gift card, is deducted\nfrom the merchant's payment balance. The fee is recorded as a new payout\nentry, not part of the CHARGE payout entry.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GiftCardLoadFeeDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeGiftCardLoadFeeRefundDetails",
              "description": "Details of a refund for the fee charged during the sale or reload of a gift card.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GiftCardLoadFeeRefundDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeGiftCardPoolTransferDetails",
              "description": "Details of a reversal of transfer of gift card funds from a central gift card\npool account. In franchises, when gift cards are loaded or reloaded at any\nlocation, the money transfers to the franchisor's account.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GiftCardPoolTransferDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeGiftCardPoolTransferReversedDetails",
              "description": "Details of a refund for the fee charged during the sale or reload of a gift card.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GiftCardPoolTransferReversedDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeHoldAdjustmentDetails",
              "description": "Details of any adjustment related to the holding or releasing of a payment.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "HoldAdjustmentDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeLocalOffersCashbackDetails",
              "description": "Details of a cashback amount given by a Square Local Offers seller to their customer for a purchase.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LocalOffersCashbackDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeLocalOffersFeeDetails",
              "description": "Details of a commission fee paid by a Square Local Offers seller to Square for\na purchase discovered through Square Local Offers.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "LocalOffersFeeDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeOpenDisputeDetails",
              "description": "Details of any open disputes.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OpenDisputeDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeOtherAdjustmentDetails",
              "description": "Details of any other type of adjustments that don't fall under existing types.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OtherAdjustmentDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeOtherDetails",
              "description": "Details of any other type that does not belong in the rest of the types.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OtherDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typePercentageProcessingRepaymentDetails",
              "description": "Details of withheld funds from a payment to cover a negative balance. It's an\ninstallment to repay the amount from a dispute that had been offset during\nPercentage Processing enrollment.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "PercentageProcessingRepaymentDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typePercentageProcessingRepaymentReversedDetails",
              "description": "Details of the reversal of a percentage processing repayment that happens for\nexample when a refund is issued for a payment.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "PercentageProcessingRepaymentReversedDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeProcessingFeeDetails",
              "description": "Details of the processing fee for a payment. If sellers opt for Gross\nSettlement, i.e., direct bank withdrawal instead of deducting fees from daily\nsales, the processing fee is recorded separately as a new payout entry, not\npart of the CHARGE payout entry.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ProcessingFeeDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeProcessingFeeRefundDetails",
              "description": "Details of the processing fee for a payment refund issued by sellers enrolled\nin Gross Settlement. The refunded processing fee is recorded separately as a\nnew payout entry, not part of the REFUND payout entry.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ProcessingFeeRefundDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeRefundDetails",
              "description": "Details of a refund for an existing card payment.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TypeRefundDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeReleaseAdjustmentDetails",
              "description": "Details of fees released for adjustments.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ReleaseAdjustmentDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeReserveHoldDetails",
              "description": "Details of fees paid for funding risk reserve.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ReserveHoldDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeReserveReleaseDetails",
              "description": "Details of fees released from risk reserve.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ReserveReleaseDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeSquareCapitalPaymentDetails",
              "description": "Details of capital merchant cash advance (MCA) assessments.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "SquareCapitalPaymentDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeSquareCapitalReversedPaymentDetails",
              "description": "Details of capital merchant cash advance (MCA) assessment refunds.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "SquareCapitalReversedPaymentDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeSquarePayrollTransferDetails",
              "description": "Details of a payroll payment that was transferred to a team member’s bank account.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "SquarePayrollTransferDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeSquarePayrollTransferReversedDetails",
              "description": "Details of a payroll payment to a team member’s bank account that was deposited back to the seller’s account by Square.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "SquarePayrollTransferReversedDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeTaxOnFeeDetails",
              "description": "Details of tax paid on fee amounts.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TaxOnFeeDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeThirdPartyFeeDetails",
              "description": "Details of fees collected by a third-party platform.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ThirdPartyFeeDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeThirdPartyFeeRefundDetails",
              "description": "Details of refunded fees from a third-party platform.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ThirdPartyFeeRefundDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeUndoGiftCardLoadFeeRefundDetails",
              "description": "Details of a reversed refund for a fee charged during the sale or reload of a gift card.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "UndoGiftCardLoadFeeRefundDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeUndoProcessingFeeRefundDetails",
              "description": "Details of a reversed processing fee for a payment refund in a Gross Settlement payment.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "UndoProcessingFeeRefundDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PayoutEntryConnection",
          "description": "Represents a paginated collection of `PayoutEntry` results.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Connection-Types) for more info.\n\nPermissions: PAYOUTS_READ.",
          "fields": [
            {
              "name": "edges",
              "description": "Wraps a specific `PayoutEntry` to pair it with its pagination cursor.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PayoutEntryEdge",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalEdgeCount",
              "description": "The total number of edges available in this connection to paginate over.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "JsonSafeLong",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PayoutEntryEdge",
          "description": "Represents a specific `PayoutEntry` in the context of a `PayoutEntryConnection`,\nproviding access to both the `PayoutEntry` and a pagination `Cursor`.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Edge-Types) for more info.\n\nPermissions: PAYOUTS_READ.",
          "fields": [
            {
              "name": "cursor",
              "description": "The `Cursor` of this `PayoutEntry`. This can be passed in the next query as\na `before` or `after` argument to continue paginating from this `PayoutEntry`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The `PayoutEntry` of this edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "PayoutEntry",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PayoutEntryFilterInput",
          "description": "Input type used to specify filters on `PayoutEntry` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `PayoutEntryFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PayoutEntryFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PayoutEntryFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "effectiveAt",
              "description": "Used to filter on the `effectiveAt` field:\n\n> The timestamp of when the payout entry affected the balance, in RFC 3339 format.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "feeAmountMoney",
              "description": "Used to filter on the `feeAmountMoney` field:\n\n> The amount of Square fees associated with this payout entry.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MoneyFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "grossAmountMoney",
              "description": "Used to filter on the `grossAmountMoney` field:\n\n> The amount of money involved in this payout entry.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MoneyFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "Used to filter on the `id` field:\n\n> A unique ID for the payout entry. Min Length 1.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchant",
              "description": "Used to filter on the `merchant` field:\n\n> The merchant that owns this payout entry.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MerchantRefFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "netAmountMoney",
              "description": "Used to filter on the `netAmountMoney` field:\n\n> The net proceeds from this transaction after any fees.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MoneyFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PayoutEntryFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "payoutId",
              "description": "Used to filter on the `payoutId` field:\n\n> The ID of the payout entries’ associated payout. Min Length 1.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "type",
              "description": "Used to filter on the `type` field:\n\n> The type of activity associated with this payout entry.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeAppFeeRefundDetails",
              "description": "Used to filter on the `typeAppFeeRefundDetails` field:\n\n> Details of a refund for an application fee on a payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AppFeeRefundDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeAppFeeRevenueDetails",
              "description": "Used to filter on the `typeAppFeeRevenueDetails` field:\n\n> Revenue generated from an application fee on a payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AppFeeRevenueDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeAutomaticSavingsDetails",
              "description": "Used to filter on the `typeAutomaticSavingsDetails` field:\n\n> Details of any automatic transfer from the payment processing balance to the Square Savings account.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AutomaticSavingsDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeAutomaticSavingsReversedDetails",
              "description": "Used to filter on the `typeAutomaticSavingsReversedDetails` field:\n\n> Details of any automatic transfer from the Square Savings account back to the processing balance.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AutomaticSavingsReversedDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeBalanceFoldersTransferDetails",
              "description": "Used to filter on the `typeBalanceFoldersTransferDetails` field:\n\n> Details of a transfer of funds to a banking folder. In the United States,\nthe folder name is 'Checking Folder'; in Canada, it's 'Balance Folder'.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BalanceFoldersTransferDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeBalanceFoldersTransferReversedDetails",
              "description": "Used to filter on the `typeBalanceFoldersTransferReversedDetails` field:\n\n> Details of a transfer of funds from a banking folder. In the United States,\nthe folder name is 'Checking Folder'; in Canada, it's 'Balance Folder'.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BalanceFoldersTransferReversedDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeChargeDetails",
              "description": "Used to filter on the `typeChargeDetails` field:\n\n> Details of credit card payment captures.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ChargeDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeDepositFeeDetails",
              "description": "Used to filter on the `typeDepositFeeDetails` field:\n\n> Details of any fees involved with deposits such as for instant deposits.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DepositFeeDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeDepositFeeReversedDetails",
              "description": "Used to filter on the `typeDepositFeeReversedDetails` field:\n\n> Details of any reversal or refund of fees involved with deposits such as for instant deposits.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DepositFeeReversedDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeDisputeDetails",
              "description": "Used to filter on the `typeDisputeDetails` field:\n\n> Details of any balance change due to a dispute event.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DisputeDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeFeeDetails",
              "description": "Used to filter on the `typeFeeDetails` field:\n\n> Details of adjustments due to the Square processing fee.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FeeDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeFreeProcessingDetails",
              "description": "Used to filter on the `typeFreeProcessingDetails` field:\n\n> Details of any credit to the merchant for the purposes of Free Processing.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FreeProcessingDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeGiftCardLoadFeeDetails",
              "description": "Used to filter on the `typeGiftCardLoadFeeDetails` field:\n\n> Details of the fee collected during the sale or reload of a gift card. This\nfee, which is a portion of the amount loaded on the gift card, is deducted\nfrom the merchant's payment balance. The fee is recorded as a new payout\nentry, not part of the CHARGE payout entry.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "GiftCardLoadFeeDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeGiftCardLoadFeeRefundDetails",
              "description": "Used to filter on the `typeGiftCardLoadFeeRefundDetails` field:\n\n> Details of a refund for the fee charged during the sale or reload of a gift card.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "GiftCardLoadFeeRefundDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeGiftCardPoolTransferDetails",
              "description": "Used to filter on the `typeGiftCardPoolTransferDetails` field:\n\n> Details of a reversal of transfer of gift card funds from a central gift\ncard pool account. In franchises, when gift cards are loaded or reloaded at\nany location, the money transfers to the franchisor's account.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "GiftCardPoolTransferDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeGiftCardPoolTransferReversedDetails",
              "description": "Used to filter on the `typeGiftCardPoolTransferReversedDetails` field:\n\n> Details of a refund for the fee charged during the sale or reload of a gift card.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "GiftCardPoolTransferReversedDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeHoldAdjustmentDetails",
              "description": "Used to filter on the `typeHoldAdjustmentDetails` field:\n\n> Details of any adjustment related to the holding or releasing of a payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "HoldAdjustmentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeLocalOffersCashbackDetails",
              "description": "Used to filter on the `typeLocalOffersCashbackDetails` field:\n\n> Details of a cashback amount given by a Square Local Offers seller to their customer for a purchase.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "LocalOffersCashbackDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeLocalOffersFeeDetails",
              "description": "Used to filter on the `typeLocalOffersFeeDetails` field:\n\n> Details of a commission fee paid by a Square Local Offers seller to Square\nfor a purchase discovered through Square Local Offers.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "LocalOffersFeeDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeOpenDisputeDetails",
              "description": "Used to filter on the `typeOpenDisputeDetails` field:\n\n> Details of any open disputes.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OpenDisputeDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeOtherAdjustmentDetails",
              "description": "Used to filter on the `typeOtherAdjustmentDetails` field:\n\n> Details of any other type of adjustments that don't fall under existing types.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OtherAdjustmentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeOtherDetails",
              "description": "Used to filter on the `typeOtherDetails` field:\n\n> Details of any other type that does not belong in the rest of the types.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "OtherDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typePercentageProcessingRepaymentDetails",
              "description": "Used to filter on the `typePercentageProcessingRepaymentDetails` field:\n\n> Details of withheld funds from a payment to cover a negative balance. It's\nan installment to repay the amount from a dispute that had been offset during\nPercentage Processing enrollment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PercentageProcessingRepaymentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typePercentageProcessingRepaymentReversedDetails",
              "description": "Used to filter on the `typePercentageProcessingRepaymentReversedDetails` field:\n\n> Details of the reversal of a percentage processing repayment that happens\nfor example when a refund is issued for a payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PercentageProcessingRepaymentReversedDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeProcessingFeeDetails",
              "description": "Used to filter on the `typeProcessingFeeDetails` field:\n\n> Details of the processing fee for a payment. If sellers opt for Gross\nSettlement, i.e., direct bank withdrawal instead of deducting fees from daily\nsales, the processing fee is recorded separately as a new payout entry, not\npart of the CHARGE payout entry.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProcessingFeeDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeProcessingFeeRefundDetails",
              "description": "Used to filter on the `typeProcessingFeeRefundDetails` field:\n\n> Details of the processing fee for a payment refund issued by sellers\nenrolled in Gross Settlement. The refunded processing fee is recorded\nseparately as a new payout entry, not part of the REFUND payout entry.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ProcessingFeeRefundDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeRefundDetails",
              "description": "Used to filter on the `typeRefundDetails` field:\n\n> Details of a refund for an existing card payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TypeRefundDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeReleaseAdjustmentDetails",
              "description": "Used to filter on the `typeReleaseAdjustmentDetails` field:\n\n> Details of fees released for adjustments.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ReleaseAdjustmentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeReserveHoldDetails",
              "description": "Used to filter on the `typeReserveHoldDetails` field:\n\n> Details of fees paid for funding risk reserve.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ReserveHoldDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeReserveReleaseDetails",
              "description": "Used to filter on the `typeReserveReleaseDetails` field:\n\n> Details of fees released from risk reserve.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ReserveReleaseDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeSquareCapitalPaymentDetails",
              "description": "Used to filter on the `typeSquareCapitalPaymentDetails` field:\n\n> Details of capital merchant cash advance (MCA) assessments.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SquareCapitalPaymentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeSquareCapitalReversedPaymentDetails",
              "description": "Used to filter on the `typeSquareCapitalReversedPaymentDetails` field:\n\n> Details of capital merchant cash advance (MCA) assessment refunds.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SquareCapitalReversedPaymentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeSquarePayrollTransferDetails",
              "description": "Used to filter on the `typeSquarePayrollTransferDetails` field:\n\n> Details of a payroll payment that was transferred to a team member’s bank account.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SquarePayrollTransferDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeSquarePayrollTransferReversedDetails",
              "description": "Used to filter on the `typeSquarePayrollTransferReversedDetails` field:\n\n> Details of a payroll payment to a team member’s bank account that was deposited back to the seller’s account by Square.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SquarePayrollTransferReversedDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeTaxOnFeeDetails",
              "description": "Used to filter on the `typeTaxOnFeeDetails` field:\n\n> Details of tax paid on fee amounts.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TaxOnFeeDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeThirdPartyFeeDetails",
              "description": "Used to filter on the `typeThirdPartyFeeDetails` field:\n\n> Details of fees collected by a third-party platform.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ThirdPartyFeeDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeThirdPartyFeeRefundDetails",
              "description": "Used to filter on the `typeThirdPartyFeeRefundDetails` field:\n\n> Details of refunded fees from a third-party platform.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ThirdPartyFeeRefundDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeUndoGiftCardLoadFeeRefundDetails",
              "description": "Used to filter on the `typeUndoGiftCardLoadFeeRefundDetails` field:\n\n> Details of a reversed refund for a fee charged during the sale or reload of a gift card.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UndoGiftCardLoadFeeRefundDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "typeUndoProcessingFeeRefundDetails",
              "description": "Used to filter on the `typeUndoProcessingFeeRefundDetails` field:\n\n> Details of a reversed processing fee for a payment refund in a Gross Settlement payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UndoProcessingFeeRefundDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PayoutEntrySortOrderInput",
          "description": "Enumerates the ways `PayoutEntry`s can be sorted.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "effectiveAt_ASC",
              "description": "Sorts ascending by the `effectiveAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "effectiveAt_DESC",
              "description": "Sorts descending by the `effectiveAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "feeAmountMoney_amount_ASC",
              "description": "Sorts ascending by the `feeAmountMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "feeAmountMoney_amount_DESC",
              "description": "Sorts descending by the `feeAmountMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "feeAmountMoney_currencyCode_ASC",
              "description": "Sorts ascending by the `feeAmountMoney.currencyCode` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "feeAmountMoney_currencyCode_DESC",
              "description": "Sorts descending by the `feeAmountMoney.currencyCode` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "feeAmountMoney_currency_ASC",
              "description": "Sorts ascending by the `feeAmountMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "feeAmountMoney_currency_DESC",
              "description": "Sorts descending by the `feeAmountMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "grossAmountMoney_amount_ASC",
              "description": "Sorts ascending by the `grossAmountMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "grossAmountMoney_amount_DESC",
              "description": "Sorts descending by the `grossAmountMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "grossAmountMoney_currencyCode_ASC",
              "description": "Sorts ascending by the `grossAmountMoney.currencyCode` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "grossAmountMoney_currencyCode_DESC",
              "description": "Sorts descending by the `grossAmountMoney.currencyCode` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "grossAmountMoney_currency_ASC",
              "description": "Sorts ascending by the `grossAmountMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "grossAmountMoney_currency_DESC",
              "description": "Sorts descending by the `grossAmountMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id_ASC",
              "description": "Sorts ascending by the `id` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id_DESC",
              "description": "Sorts descending by the `id` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchant_id_ASC",
              "description": "Sorts ascending by the `merchant.id` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchant_id_DESC",
              "description": "Sorts descending by the `merchant.id` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "netAmountMoney_amount_ASC",
              "description": "Sorts ascending by the `netAmountMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "netAmountMoney_amount_DESC",
              "description": "Sorts descending by the `netAmountMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "netAmountMoney_currencyCode_ASC",
              "description": "Sorts ascending by the `netAmountMoney.currencyCode` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "netAmountMoney_currencyCode_DESC",
              "description": "Sorts descending by the `netAmountMoney.currencyCode` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "netAmountMoney_currency_ASC",
              "description": "Sorts ascending by the `netAmountMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "netAmountMoney_currency_DESC",
              "description": "Sorts descending by the `netAmountMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payoutId_ASC",
              "description": "Sorts ascending by the `payoutId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payoutId_DESC",
              "description": "Sorts descending by the `payoutId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeAppFeeRefundDetails_locationId_ASC",
              "description": "Sorts ascending by the `typeAppFeeRefundDetails.locationId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeAppFeeRefundDetails_locationId_DESC",
              "description": "Sorts descending by the `typeAppFeeRefundDetails.locationId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeAppFeeRefundDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeAppFeeRefundDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeAppFeeRefundDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeAppFeeRefundDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeAppFeeRevenueDetails_locationId_ASC",
              "description": "Sorts ascending by the `typeAppFeeRevenueDetails.locationId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeAppFeeRevenueDetails_locationId_DESC",
              "description": "Sorts descending by the `typeAppFeeRevenueDetails.locationId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeAppFeeRevenueDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeAppFeeRevenueDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeAppFeeRevenueDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeAppFeeRevenueDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeAutomaticSavingsDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeAutomaticSavingsDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeAutomaticSavingsDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeAutomaticSavingsDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeAutomaticSavingsDetails_payoutId_ASC",
              "description": "Sorts ascending by the `typeAutomaticSavingsDetails.payoutId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeAutomaticSavingsDetails_payoutId_DESC",
              "description": "Sorts descending by the `typeAutomaticSavingsDetails.payoutId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeAutomaticSavingsReversedDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeAutomaticSavingsReversedDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeAutomaticSavingsReversedDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeAutomaticSavingsReversedDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeAutomaticSavingsReversedDetails_payoutId_ASC",
              "description": "Sorts ascending by the `typeAutomaticSavingsReversedDetails.payoutId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeAutomaticSavingsReversedDetails_payoutId_DESC",
              "description": "Sorts descending by the `typeAutomaticSavingsReversedDetails.payoutId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeBalanceFoldersTransferDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeBalanceFoldersTransferDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeBalanceFoldersTransferDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeBalanceFoldersTransferDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeBalanceFoldersTransferReversedDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeBalanceFoldersTransferReversedDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeBalanceFoldersTransferReversedDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeBalanceFoldersTransferReversedDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeChargeDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeChargeDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeChargeDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeChargeDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeDepositFeeDetails_payoutId_ASC",
              "description": "Sorts ascending by the `typeDepositFeeDetails.payoutId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeDepositFeeDetails_payoutId_DESC",
              "description": "Sorts descending by the `typeDepositFeeDetails.payoutId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeDepositFeeReversedDetails_payoutId_ASC",
              "description": "Sorts ascending by the `typeDepositFeeReversedDetails.payoutId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeDepositFeeReversedDetails_payoutId_DESC",
              "description": "Sorts descending by the `typeDepositFeeReversedDetails.payoutId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeDisputeDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeDisputeDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeDisputeDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeDisputeDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeFeeDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeFeeDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeFeeDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeFeeDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeFreeProcessingDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeFreeProcessingDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeFreeProcessingDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeFreeProcessingDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeGiftCardLoadFeeDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeGiftCardLoadFeeDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeGiftCardLoadFeeDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeGiftCardLoadFeeDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeGiftCardLoadFeeRefundDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeGiftCardLoadFeeRefundDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeGiftCardLoadFeeRefundDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeGiftCardLoadFeeRefundDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeGiftCardPoolTransferDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeGiftCardPoolTransferDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeGiftCardPoolTransferDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeGiftCardPoolTransferDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeGiftCardPoolTransferReversedDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeGiftCardPoolTransferReversedDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeGiftCardPoolTransferReversedDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeGiftCardPoolTransferReversedDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeHoldAdjustmentDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeHoldAdjustmentDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeHoldAdjustmentDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeHoldAdjustmentDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeLocalOffersCashbackDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeLocalOffersCashbackDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeLocalOffersCashbackDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeLocalOffersCashbackDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeLocalOffersFeeDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeLocalOffersFeeDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeLocalOffersFeeDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeLocalOffersFeeDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeOpenDisputeDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeOpenDisputeDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeOpenDisputeDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeOpenDisputeDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeOtherAdjustmentDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeOtherAdjustmentDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeOtherAdjustmentDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeOtherAdjustmentDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeOtherDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeOtherDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeOtherDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeOtherDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typePercentageProcessingRepaymentDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typePercentageProcessingRepaymentDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typePercentageProcessingRepaymentDetails_paymentId_DESC",
              "description": "Sorts descending by the `typePercentageProcessingRepaymentDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typePercentageProcessingRepaymentReversedDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typePercentageProcessingRepaymentReversedDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typePercentageProcessingRepaymentReversedDetails_paymentId_DESC",
              "description": "Sorts descending by the `typePercentageProcessingRepaymentReversedDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeProcessingFeeDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeProcessingFeeDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeProcessingFeeDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeProcessingFeeDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeProcessingFeeRefundDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeProcessingFeeRefundDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeProcessingFeeRefundDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeProcessingFeeRefundDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeRefundDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeRefundDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeRefundDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeRefundDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeRefundDetails_refundId_ASC",
              "description": "Sorts ascending by the `typeRefundDetails.refundId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeRefundDetails_refundId_DESC",
              "description": "Sorts descending by the `typeRefundDetails.refundId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeReleaseAdjustmentDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeReleaseAdjustmentDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeReleaseAdjustmentDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeReleaseAdjustmentDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeReserveHoldDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeReserveHoldDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeReserveHoldDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeReserveHoldDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeReserveReleaseDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeReserveReleaseDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeReserveReleaseDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeReserveReleaseDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeSquareCapitalPaymentDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeSquareCapitalPaymentDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeSquareCapitalPaymentDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeSquareCapitalPaymentDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeSquareCapitalReversedPaymentDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeSquareCapitalReversedPaymentDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeSquareCapitalReversedPaymentDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeSquareCapitalReversedPaymentDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeSquarePayrollTransferDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeSquarePayrollTransferDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeSquarePayrollTransferDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeSquarePayrollTransferDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeSquarePayrollTransferReversedDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeSquarePayrollTransferReversedDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeSquarePayrollTransferReversedDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeSquarePayrollTransferReversedDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeTaxOnFeeDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeTaxOnFeeDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeTaxOnFeeDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeTaxOnFeeDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeThirdPartyFeeDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeThirdPartyFeeDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeThirdPartyFeeDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeThirdPartyFeeDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeThirdPartyFeeRefundDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeThirdPartyFeeRefundDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeThirdPartyFeeRefundDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeThirdPartyFeeRefundDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeUndoGiftCardLoadFeeRefundDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeUndoGiftCardLoadFeeRefundDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeUndoGiftCardLoadFeeRefundDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeUndoGiftCardLoadFeeRefundDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeUndoProcessingFeeRefundDetails_paymentId_ASC",
              "description": "Sorts ascending by the `typeUndoProcessingFeeRefundDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "typeUndoProcessingFeeRefundDetails_paymentId_DESC",
              "description": "Sorts descending by the `typeUndoProcessingFeeRefundDetails.paymentId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type_ASC",
              "description": "Sorts ascending by the `type` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type_DESC",
              "description": "Sorts descending by the `type` field.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PayoutFilterInput",
          "description": "Input type used to specify filters on `Payout` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `PayoutFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PayoutFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "amountMoney",
              "description": "Used to filter on the `amountMoney` field:\n\n> The amount of money involved in the payout. A positive amount indicates a\ndeposit, and a negative amount indicates a withdrawal. This amount is never zero.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MoneyFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PayoutFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "arrivalDate",
              "description": "Used to filter on the `arrivalDate` field:\n\n> The calendar date, in ISO 8601 format (YYYY-MM-DD), when the payout is due\nto arrive in the seller’s banking destination.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "createdAt",
              "description": "Used to filter on the `createdAt` field:\n\n> The timestamp of when the payout was created and submitted for deposit to\nthe seller's banking destination, in RFC 3339 format.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "destination",
              "description": "Used to filter on the `destination` field:\n\n> Information about the banking destination (such as a bank account, Square\nchecking account, or debit card) against which the payout was made.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DestinationFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "endToEndId",
              "description": "Used to filter on the `endToEndId` field:\n\n> A unique ID for each Payout object that might also appear on the seller’s bank statement.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "Used to filter on the `id` field:\n\n> A unique ID for the payout.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "location",
              "description": "Used to filter on the `location` field:\n\n> The ID of the location associated with the payout.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "LocationRefFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchant",
              "description": "Used to filter on the `merchant` field:\n\n> The merchant that owns this payout.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MerchantRefFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PayoutFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "status",
              "description": "Used to filter on the `status` field:\n\n> Indicates the payout status.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "type",
              "description": "Used to filter on the `type` field:\n\n> Indicates the payout type.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "updatedAt",
              "description": "Used to filter on the `updatedAt` field:\n\n> The timestamp of when the payout was last updated, in RFC 3339 format.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateTimeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "version",
              "description": "Used to filter on the `version` field:\n\n> The version number, which is incremented each time an update is made to this payout record.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PayoutSortOrderInput",
          "description": "Enumerates the ways `Payout`s can be sorted.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "amountMoney_amount_ASC",
              "description": "Sorts ascending by the `amountMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "amountMoney_amount_DESC",
              "description": "Sorts descending by the `amountMoney.amount` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "amountMoney_currencyCode_ASC",
              "description": "Sorts ascending by the `amountMoney.currencyCode` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "amountMoney_currencyCode_DESC",
              "description": "Sorts descending by the `amountMoney.currencyCode` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "amountMoney_currency_ASC",
              "description": "Sorts ascending by the `amountMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "amountMoney_currency_DESC",
              "description": "Sorts descending by the `amountMoney.currency` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "arrivalDate_ASC",
              "description": "Sorts ascending by the `arrivalDate` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "arrivalDate_DESC",
              "description": "Sorts descending by the `arrivalDate` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt_ASC",
              "description": "Sorts ascending by the `createdAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt_DESC",
              "description": "Sorts descending by the `createdAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "destination_id_ASC",
              "description": "Sorts ascending by the `destination.id` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "destination_id_DESC",
              "description": "Sorts descending by the `destination.id` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "destination_type_ASC",
              "description": "Sorts ascending by the `destination.type` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "destination_type_DESC",
              "description": "Sorts descending by the `destination.type` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "endToEndId_ASC",
              "description": "Sorts ascending by the `endToEndId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "endToEndId_DESC",
              "description": "Sorts descending by the `endToEndId` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id_ASC",
              "description": "Sorts ascending by the `id` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id_DESC",
              "description": "Sorts descending by the `id` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location_id_ASC",
              "description": "Sorts ascending by the `location.id` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location_id_DESC",
              "description": "Sorts descending by the `location.id` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchant_id_ASC",
              "description": "Sorts ascending by the `merchant.id` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchant_id_DESC",
              "description": "Sorts descending by the `merchant.id` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status_ASC",
              "description": "Sorts ascending by the `status` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status_DESC",
              "description": "Sorts descending by the `status` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type_ASC",
              "description": "Sorts ascending by the `type` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type_DESC",
              "description": "Sorts descending by the `type` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt_ASC",
              "description": "Sorts ascending by the `updatedAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt_DESC",
              "description": "Sorts descending by the `updatedAt` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version_ASC",
              "description": "Sorts ascending by the `version` field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version_DESC",
              "description": "Sorts descending by the `version` field.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PercentageProcessingRepaymentDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of withheld funds from a payment to cover a negative balance. It's an\ninstallment to repay the amount from a dispute that had been offset during\nPercentage Processing enrollment.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment associated with this activity.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PercentageProcessingRepaymentDetailsFilterInput",
          "description": "Input type used to specify filters on `PercentageProcessingRepaymentDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment associated with this activity.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PercentageProcessingRepaymentReversedDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of the reversal of a percentage processing repayment that happens for example when a refund is issued for a payment.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment associated with this activity.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PercentageProcessingRepaymentReversedDetailsFilterInput",
          "description": "Input type used to specify filters on `PercentageProcessingRepaymentReversedDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment associated with this activity.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Phase",
          "description": "Represents a phase, which can override subscription phases as defined by plan_id\nPermissions: SUBSCRIPTIONS_READ",
          "fields": [
            {
              "name": "order",
              "description": "id of order to be used in billing",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Order",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ordinal",
              "description": "index of phase in total subscription plan",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "planPhaseUid",
              "description": "the uid from the plan's phase in catalog",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "uid",
              "description": "id of subscription phase",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "PhoneNumber",
          "description": "A phone number in human readable format.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "PrinterComponentDetails",
          "description": "Structured data for a `Printer`, set for DeviceComponents of type `PRINTER`.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "isDefaultWidth",
              "description": "Indicates whether the current paper width is the default width.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "paperWidth",
              "description": "The paper width configuration on the printer.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "printerType",
              "description": "The type of the printer.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "PrinterType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PrinterType",
          "description": "An enum for PrinterType.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "KITCHEN_PRINTER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LABEL_PRINTER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRINTER_TYPE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RECEIPT_PRINTER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "PrinterTypeFilterInput",
          "description": "Input type used to specify filters on `PrinterType` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `PrinterTypeFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PrinterTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PrinterTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "PrinterTypeInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PrinterTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "PrinterTypeInput",
          "description": "An enum for PrinterType.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "KITCHEN_PRINTER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LABEL_PRINTER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRINTER_TYPE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RECEIPT_PRINTER",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProcessingFeeDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of the processing fee for a payment. If sellers opt for Gross\nSettlement, i.e., direct bank withdrawal instead of deducting fees from daily\nsales, the processing fee is recorded separately as a new payout entry, not part\nof the CHARGE payout entry.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment associated with this activity.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ProcessingFeeDetailsFilterInput",
          "description": "Input type used to specify filters on `ProcessingFeeDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment associated with this activity.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ProcessingFeeRefundDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of the processing fee for a payment refund issued by sellers enrolled in\nGross Settlement. The refunded processing fee is recorded separately as a new\npayout entry, not part of the REFUND payout entry.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment associated with this activity.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ProcessingFeeRefundDetailsFilterInput",
          "description": "Input type used to specify filters on `ProcessingFeeRefundDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment associated with this activity.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "Product",
          "description": "Indicates the Square product used to generate a change.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "SQUARE_POS",
              "description": "Square Point of Sale application.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXTERNAL_API",
              "description": "Square Connect APIs (for example, Orders API or Checkout API).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BILLING",
              "description": "A Square subscription (various products).",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "APPOINTMENTS",
              "description": "Square Appointments.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVOICES",
              "description": "Square Invoices.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ONLINE_STORE",
              "description": "Square Online Store.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAYROLL",
              "description": "Square Payroll.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DASHBOARD",
              "description": "Square Dashboard.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ITEM_LIBRARY_IMPORT",
              "description": "Item Library Import.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OTHER",
              "description": "A Square product that does not match any other value.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Query",
          "description": "The query entry point for the entire schema.",
          "fields": [
            {
              "name": "computedPermissionsForCurrentMerchant",
              "description": "Returns dashboard computed permissions for merchant associated with the current access token",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DashboardComputedPermissions",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "currentMerchant",
              "description": "Returns the Merchant the access token is granted permission to view",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Merchant",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cardsOnFile",
              "description": "Retrieves a list of cards owned by the merchant. A max of 25 cards will be returned.\n\nPermissions:PAYMENTS_READ",
              "args": [
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CardOnFileFilter",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": null,
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "SortOrderTypeInput",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CardOnFileConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customerCustomAttributeDefinitions",
              "description": "A list of CustomAttributeDefinitions.\n\nPermissions:CUSTOMERS_READ",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CustomAttributeDefinitionFilterInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CustomerCustomAttributeDefinitionConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customers",
              "description": "A list of Customer.\n\nPermissions:CUSTOMERS_READ",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CustomerFilter",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CustomerConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bookingAvailability",
              "description": "Returns booking availability by the specified filter.\nPermissions:APPOINTMENTS_READ",
              "args": [
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "AvailabilityFilter",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "BookingAvailabilityConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bookings",
              "description": "Returns booking(s) by the specified filter.\nPermissions:APPOINTMENTS_READ",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "BookingFilter",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "BookingConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "businessBookingProfile",
              "description": "Returns booking(s) by the specified filter.\nPermissions:APPOINTMENTS_BUSINESS_SETTINGS_READ",
              "args": [
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "BusinessBookingProfileFilter",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "BusinessBookingProfileConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locationBookingProfiles",
              "description": "Returns booking(s) by the specified filter.\nPermissions:APPOINTMENTS_BUSINESS_SETTINGS_READ",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "LocationBookingProfileFilter",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "LocationBookingProfileConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMemberBookingProfiles",
              "description": "Returns booking(s) by the specified filter.\nPermissions:APPOINTMENTS_BUSINESS_SETTINGS_READ",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "TeamMemberBookingProfileFilter",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TeamMemberBookingProfileConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalog",
              "description": "Query for catalog\n\nPermissions:ITEMS_READ",
              "args": [
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CatalogObjectFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogObjectConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "catalogItems",
              "description": "Query for CatalogItems\n\nPermissions:ITEMS_READ",
              "args": [
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CatalogItemFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": null,
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "CatalogSort",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CatalogItemConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cashDrawerShiftEvents",
              "description": "Returns CashDrawerShiftEvents by its filter.",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CashDrawerShiftEventFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CashDrawerShiftEventConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cashDrawerShifts",
              "description": "Returns CashDrawerShifts by its filter.",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CashDrawerShiftFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": null,
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "SortOrder",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CashDrawerShiftConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "giftCardActivities",
              "description": "Returns Gift Card activities by the specified filter.\nPermissions:GIFTCARDS_READ",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "GiftCardActivityFilter",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": null,
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "SortOrderTypeInput",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "GiftCardActivityConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "giftCards",
              "description": "Returns Gift Cards by the specified filter.\nPermissions:GIFTCARDS_READ",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "GiftCardFilter",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "SquareGiftCardConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inventoryChanges",
              "description": "Retrieve InventoryChanges by the specified filter\n\nPermissions:INVENTORY_READ",
              "args": [
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "InventoryChangeFilter",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "InventoryChangeConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inventoryCounts",
              "description": "Retrieve InventoryCounts by the specified filter\n\nPermissions:INVENTORY_READ",
              "args": [
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "InventoryCountFilter",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "InventoryCountConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "breakTypes",
              "description": "Returns BreakTypes by its filter.\n\nPermissions:TIMECARDS_SETTINGS_READ",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "BreakTypeFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "BreakTypeConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scheduledShifts",
              "description": "Returns Scheduled Shifts by its filter.\n\nPermissions:TIMECARDS_READ",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ScheduledShiftFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": null,
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "ScheduledShiftSort",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ScheduledShiftConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "shifts",
              "description": "Returns Shifts by its filter.\n\nPermissions:TIMECARDS_READ",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ShiftFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": null,
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "ShiftSort",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ShiftConnection",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use timecards query instead. Shifts are being replaced by Timecards."
            },
            {
              "name": "teamMemberWages",
              "description": "Returns TeamMemberWages by its filter.\n\nPermissions:EMPLOYEES_READ",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "TeamMemberWageFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TeamMemberWageConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "timecards",
              "description": "Returns Scheduled Shifts by its filter.\n\nPermissions:TIMECARDS_READ",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "TimecardFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": null,
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "TimecardSort",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TimecardConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "workweekConfigs",
              "description": "Returns WorkweekConfigs by its filter.\n\nPermissions:TIMECARDS_SETTINGS_READ",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "WorkweekConfigFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "WorkweekConfigConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loyaltyAccounts",
              "description": "Returns Loyalty Accounts by the specified filter.\nPermissions:LOYALTY_READ",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "LoyaltyAccountFilter",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyAccountConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loyaltyEvents",
              "description": "Returns Loyalty Events by the specified filter.\nPermissions:LOYALTY_READ",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "LoyaltyEventFilter",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyEventConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loyaltyProgram",
              "description": "Returns Loyalty Program by the specified filter.\nPermissions:LOYALTY_READ",
              "args": [
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "LoyaltyProgramFilter",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyProgramConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loyaltyPromotions",
              "description": "Returns Loyalty Promotions by the specified filter.\nPermissions:LOYALTY_READ",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "LoyaltyPromotionFilter",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyPromotionConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "loyaltyRewards",
              "description": "Returns Loyalty Rewards by the specified filter.\nPermissions:LOYALTY_READ",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "LoyaltyRewardFilter",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "LoyaltyRewardConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "orders",
              "description": "Returns Orders by the specified filter.\n\nPermissions:ORDERS_READ",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "OrderFilter",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": "100"
                },
                {
                  "name": "orderBy",
                  "description": null,
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "OrderSort",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "OrderConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subscriptionEvents",
              "description": "Returns subscription events by the specified filter.\nPermissions:SUBSCRIPTIONS_READ",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "SubscriptionEventFilter",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "SubscriptionEventConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subscriptions",
              "description": "Returns subscription(s) by the specified filter.\nPermissions:SUBSCRIPTIONS_READ",
              "args": [
                {
                  "name": "after",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "SubscriptionFilter",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "SubscriptionConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchants",
              "description": "Returns Merchants by IDs. Order is not guaranteed.\n\nPermissions:MERCHANT_PROFILE_READ",
              "args": [
                {
                  "name": "filter",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MerchantFilterInput",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "MerchantConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payoutEntries",
              "description": "Fetches `PayoutEntry`s based on the provided arguments.",
              "args": [
                {
                  "name": "after",
                  "description": "Used to forward-paginate through the `payoutEntries`. When provided, the next page after the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Used to backward-paginate through the `payoutEntries`. When provided, the previous page before the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "Used to filter the returned `payoutEntries` based on the provided criteria.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "PayoutEntryFilterInput",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Used in conjunction with the `after` argument to forward-paginate through the `payoutEntries`.\nWhen provided, limits the number of returned results to the first `n` after the provided\n`after` cursor (or from the start of the `payoutEntries`, if no `after` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Used in conjunction with the `before` argument to backward-paginate through the `payoutEntries`.\nWhen provided, limits the number of returned results to the last `n` before the provided\n`before` cursor (or from the end of the `payoutEntries`, if no `before` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Used to specify how the returned `payoutEntries` should be sorted.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "PayoutEntrySortOrderInput",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "PayoutEntryConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payouts",
              "description": "Fetches `Payout`s based on the provided arguments.",
              "args": [
                {
                  "name": "after",
                  "description": "Used to forward-paginate through the `payouts`. When provided, the next page after the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Used to backward-paginate through the `payouts`. When provided, the previous page before the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "Used to filter the returned `payouts` based on the provided criteria.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "PayoutFilterInput",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Used in conjunction with the `after` argument to forward-paginate through the `payouts`.\nWhen provided, limits the number of returned results to the first `n` after the provided\n`after` cursor (or from the start of the `payouts`, if no `after` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Used in conjunction with the `before` argument to backward-paginate through the `payouts`.\nWhen provided, limits the number of returned results to the last `n` before the provided\n`before` cursor (or from the end of the `payouts`, if no `before` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Used to specify how the returned `payouts` should be sorted.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "PayoutSortOrderInput",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "PayoutConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "paymentRefunds",
              "description": "Fetches `PaymentRefund`s based on the provided arguments.",
              "args": [
                {
                  "name": "after",
                  "description": "Used to forward-paginate through the `paymentRefunds`. When provided, the next page after the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Used to backward-paginate through the `paymentRefunds`. When provided, the previous page before the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "Used to filter the returned `paymentRefunds` based on the provided criteria.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentRefundFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Used in conjunction with the `after` argument to forward-paginate through the `paymentRefunds`.\nWhen provided, limits the number of returned results to the first `n` after the provided\n`after` cursor (or from the start of the `paymentRefunds`, if no `after` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Used in conjunction with the `before` argument to backward-paginate through the `paymentRefunds`.\nWhen provided, limits the number of returned results to the last `n` before the provided\n`before` cursor (or from the end of the `paymentRefunds`, if no `before` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Used to specify how the returned `paymentRefunds` should be sorted.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "PaymentRefundSortOrder",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "PaymentRefundConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payments",
              "description": "Fetches `Payment`s based on the provided arguments.",
              "args": [
                {
                  "name": "after",
                  "description": "Used to forward-paginate through the `payments`. When provided, the next page after the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Used to backward-paginate through the `payments`. When provided, the previous page before the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "Used to filter the returned `payments` based on the provided criteria.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "PaymentFilter",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Used in conjunction with the `after` argument to forward-paginate through the `payments`.\nWhen provided, limits the number of returned results to the first `n` after the provided\n`after` cursor (or from the start of the `payments`, if no `after` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Used in conjunction with the `before` argument to backward-paginate through the `payments`.\nWhen provided, limits the number of returned results to the last `n` before the provided\n`before` cursor (or from the end of the `payments`, if no `before` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Used to specify how the returned `payments` should be sorted.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "PaymentSortOrder",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "PaymentConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deviceAggregations",
              "description": "Aggregations over the `devices` data:\n\n> Fetches `Device`s based on the provided arguments.",
              "args": [
                {
                  "name": "after",
                  "description": "Used to forward-paginate through the `deviceAggregations`. When provided, the next page after the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Used to backward-paginate through the `deviceAggregations`. When provided, the previous page before the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "Used to filter the `Device` documents that get aggregated over based on the provided criteria.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceFilterInput",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Used in conjunction with the `after` argument to forward-paginate through the `deviceAggregations`.\nWhen provided, limits the number of returned results to the first `n` after the provided\n`after` cursor (or from the start of the `deviceAggregations`, if no `after` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Used in conjunction with the `before` argument to backward-paginate through the `deviceAggregations`.\nWhen provided, limits the number of returned results to the last `n` before the provided\n`before` cursor (or from the end of the `deviceAggregations`, if no `before` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceAggregationConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "devices",
              "description": "Fetches `Device`s based on the provided arguments.",
              "args": [
                {
                  "name": "after",
                  "description": "Used to forward-paginate through the `devices`. When provided, the next page after the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Used to backward-paginate through the `devices`. When provided, the previous page before the\nprovided cursor will be returned.\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "filter",
                  "description": "Used to filter the returned `devices` based on the provided criteria.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeviceFilterInput",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "first",
                  "description": "Used in conjunction with the `after` argument to forward-paginate through the `devices`.\nWhen provided, limits the number of returned results to the first `n` after the provided\n`after` cursor (or from the start of the `devices`, if no `after` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Used in conjunction with the `before` argument to backward-paginate through the `devices`.\nWhen provided, limits the number of returned results to the last `n` before the provided\n`before` cursor (or from the end of the `devices`, if no `before` cursor is provided).\n\nSee the [Relay GraphQL Cursor Connections\nSpecification](https://relay.dev/graphql/connections.htm#sec-Arguments) for more info.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Used to specify how the returned `devices` should be sorted.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "DeviceSortOrderInput",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceConnection",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Refund",
          "description": "Represents a refund processed for a Square transaction.\nPermissions: ORDERS_READ",
          "fields": [
            {
              "name": "amount",
              "description": "The amount of money refunded to the buyer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `amountMoney` instead."
            },
            {
              "name": "amountMoney",
              "description": "The amount of money refunded to the buyer.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The timestamp for when the refund was created, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The refund's unique ID.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the refund's associated location.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "processingFee",
              "description": "The amount of Square processing fee money refunded to the *merchant*.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `processingFeeMoney` instead."
            },
            {
              "name": "processingFeeMoney",
              "description": "The amount of Square processing fee money refunded to the *merchant*.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reason",
              "description": "The reason for the refund being issued.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "The current status of the refund (`PENDING`, `APPROVED`, `REJECTED`,\nor `FAILED`).",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "RefundStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tender",
              "description": "The ID of the refunded tender.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "OrderTender",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "transactionId",
              "description": "The ID of the transaction that the refunded tender is part of.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "RefundStatus",
          "description": "Indicates a refund's current status.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "APPROVED",
              "description": "The refund has been approved by Square.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FAILED",
              "description": "The refund failed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PENDING",
              "description": "The refund is pending.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REJECTED",
              "description": "The refund has been rejected by Square.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ReleaseAdjustmentDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of fees released for adjustments.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment associated with the release adjustment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ReleaseAdjustmentDetailsFilterInput",
          "description": "Input type used to specify filters on `ReleaseAdjustmentDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment associated with the release adjustment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ReserveHoldDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of fees paid for funding risk reserve.",
          "fields": [
            {
              "name": "paymentId",
              "description": "Unique ID for the payment related to the reserve hold.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ReserveHoldDetailsFilterInput",
          "description": "Input type used to specify filters on `ReserveHoldDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> Unique ID for the payment related to the reserve hold.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ReserveReleaseDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of fees released from risk reserve.",
          "fields": [
            {
              "name": "paymentId",
              "description": "Unique ID for the payment related to the reserve release.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ReserveReleaseDetailsFilterInput",
          "description": "Input type used to specify filters on `ReserveReleaseDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> Unique ID for the payment related to the reserve release.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Reward",
          "description": "A loyalty reward.\n\nLoyalty rewards are not currently fully represented in graphql, and their details must be retrieved through the\nREST API.\n\nPermissions:LOYALTY_READ",
          "fields": [
            {
              "name": "id",
              "description": "The Square-assigned ID of the loyalty reward.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tier",
              "description": "The reward tier used to create the reward.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "RewardTier",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "RewardTier",
          "description": "A loyalty program reward tier.\n\nLoyalty reward tiers are not currently fully represented in graphql, and their details must be retrieved through the\nREST API.\n\nPermissions:LOYALTY_READ",
          "fields": [
            {
              "name": "id",
              "description": "The Square-assigned ID of the reward tier.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ScaleComponentDetails",
          "description": "Structured data for `Scale` peripheral device details, set for DeviceComponents of type `SCALE`.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "selectedWeightUnit",
              "description": "Indicates the currently selected weight unit on the scale.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceWeightUnit",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ScaleComponentDetailsAggregatedValues",
          "description": "Type used to perform aggregation computations on `ScaleComponentDetails` fields.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "selectedWeightUnit",
              "description": "Computed aggregate values for the `selectedWeightUnit` field:\n\n> Indicates the currently selected weight unit on the scale.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "NonNumericAggregatedValues",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ScaleComponentDetailsFilterInput",
          "description": "Input type used to specify filters on `ScaleComponentDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `ScaleComponentDetailsFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ScaleComponentDetailsFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ScaleComponentDetailsFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ScaleComponentDetailsFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "selectedWeightUnit",
              "description": "Used to filter on the `selectedWeightUnit` field:\n\n> Indicates the currently selected weight unit on the scale.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DeviceWeightUnitFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ScaleComponentDetailsGroupedBy",
          "description": "Type used to specify the `ScaleComponentDetails` fields to group by for aggregations.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "selectedWeightUnit",
              "description": "The `selectedWeightUnit` field value for this group:\n\n> Indicates the currently selected weight unit on the scale.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "DeviceWeightUnit",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ScannerScaleComponentDetails",
          "description": "Structured data for `ScannerScale` peripheral device details, set for DeviceComponents of type `SCANNER_SCALE`.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "scaleDetails",
              "description": "The Scale component details of the ScannerScale.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ScaleComponentDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "scannerDetails",
              "description": "The BarcodeScanner component details of the ScannerScale.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "BarcodeScannerComponentDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ScheduledShift",
          "description": "Represents a specific time slot in a work schedule.This object is used to manage the\nlifecycle of a scheduled shift from the draft to published state. A scheduled shift contains\nthe latest draft shift details and current published shift details.\nPermissions: TIMECARDS_READ",
          "fields": [
            {
              "name": "createdAt",
              "description": "The timestamp of when the scheduled shift was created, in RFC 3339 format presented as UTC.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "draftShiftDetails",
              "description": "The latest draft shift details for the scheduled shift. Draft shift details are used to\nstage and manage shifts before publishing. This field is always present.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ScheduledShiftDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "**Read only** The Square-issued ID of the scheduled shift.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "publishedShiftDetails",
              "description": "The current published (public) shift details for the scheduled shift. This field is\npresent only if the shift was published.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ScheduledShiftDetails",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The timestamp of when the scheduled shift was last updated, in RFC 3339 format presented as UTC.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "**Read only** The current version of the scheduled shift, which is incremented with each update.\nThis field is used for [optimistic concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency)\ncontrol to ensure that requests don't overwrite data from another request.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ScheduledShiftConnection",
          "description": "A list of Scheduled Shifts.\n\nPermissions:TIMECARDS_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of scheduled shifts",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ScheduledShift",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ScheduledShiftDetails",
          "description": "Represents shift details for draft and published versions of a scheduled shift,\nsuch as job ID, team member assignment, and start and end times.\nPermissions: TIMECARDS_READ",
          "fields": [
            {
              "name": "endAt",
              "description": "The end time for the shift, in RFC 3339 format in the time zone &plus;\noffset of the shift location specified in `location_id`. Precision up to the minute\nis respected; seconds are truncated.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeleted",
              "description": "Indicates whether the draft shift version is deleted. If set to `true` when the shift\nis published, the entire scheduled shift (including the published shift) is deleted and\ncannot be accessed using any endpoint.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "job",
              "description": "The ID of the job the shift is scheduled for.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Job",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the location the shift is scheduled for.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "notes",
              "description": "Optional notes for the shift.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startAt",
              "description": "The start time of the shift, in RFC 3339 format in the time zone &plus;\noffset of the shift location specified in `location_id`. Precision up to the minute\nis respected; seconds are truncated.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMember",
              "description": "The ID of the team member scheduled for the shift.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TeamMember",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "timezone",
              "description": "The time zone of the shift location, calculated based on the `location_id`. This field\nis provided for convenience.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ScheduledShiftFilter",
          "description": "Defines a filter used in a search for `ScheduledShift` records.`AND` logic is\nused by Square's servers to apply each filter property specified.\nPermissions: TIMECARDS_READ",
          "fields": null,
          "inputFields": [
            {
              "name": "endAt",
              "description": "Fetch the `Shift` instances that end in the time range - Inclusive.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TimeRangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "Fetch shifts for the specified ids.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "locationId",
              "description": "Fetch shifts for the specified location.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "Fetch shifts for the specified merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "startAt",
              "description": "Fetch `Shift` instances that start in the time range - Inclusive.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TimeRangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "status",
              "description": "Fetch a `Shift` instance by `Shift.status`.",
              "type": {
                "kind": "ENUM",
                "name": "ShiftStatusInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "teamMemberId",
              "description": "Fetch shifts for the specified team members. Replaced `employee_ids` at version \"2020-08-26\".",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "workday",
              "description": "Fetch the `Shift` instances based on the workday date range.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ShiftWorkdayFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ScheduledShiftFilterAssignmentStatus",
          "description": "Defines valid values for the `assignment_status` filter in a\n[SearchScheduledShifts](api-endpoint:Labor-SearchScheduledShifts) request.Assignment status is based on the `draft_shift_details.team_member_id` and\n`published_shift_details.team_member_id` fields of the scheduled shift.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ASSIGNED",
              "description": "The shift is assigned to a team member.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNASSIGNED",
              "description": "The shift isn't assigned to a team member.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ScheduledShiftFilterScheduledShiftStatus",
          "description": "Defines valid values for the `scheduled_shift_statuses` filter in a\n[SearchScheduledShifts](api-endpoint:Labor-SearchScheduledShifts) request.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DRAFT",
              "description": "The scheduled shift has never been published or its draft details were\nupdated after it was published. This means that the shift has no `published_shift_details`\nfield or that `draft_shift_details` has different settings than `published_shift_details`.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PUBLISHED",
              "description": "The scheduled shift was published. This means that the shift has a\n`published_shift_details` field.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ScheduledShiftSort",
          "description": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "createdAt_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "endAt_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "endAt_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startAt_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startAt_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ScheduledShiftSortField",
          "description": "Defines valid values for the `field` sort setting in a\n[SearchScheduledShifts](api-endpoint:Labor-SearchScheduledShifts) request.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CREATED_AT",
              "description": "Sort by the creation date of the shift.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "END_AT",
              "description": "Sort by the end time of the shift.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "START_AT",
              "description": "Sort by the start time of the shift.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT",
              "description": "Sort by the last updated date of the shift.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ScheduledShiftWorkdayMatcher",
          "description": "Defines the logic used to apply a workday filter.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "END_AT",
              "description": "All shifts that end on or before the specified workday",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERSECTION",
              "description": "All shifts that start between the start and end workdays (inclusive)",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "START_AT",
              "description": "All shifts that start on or after the specified workday",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "SearchAvailabilityQuery",
          "description": "The query used to search for buyer-accessible availabilities of bookings.",
          "fields": null,
          "inputFields": [
            {
              "name": "filter",
              "description": "The query filter to search for buyer-accessible availabilities of existing bookings.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AvailabilityFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "SearchOrdersSortField",
          "description": "Specifies which timestamp to use to sort `SearchOrder` results.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CLOSED_AT",
              "description": "The time when the order was closed, in RFC-3339 format. If you use this\nvalue, you must also set a `StateFilter` with closed states. If you are also\nfiltering for a time range in this query, you must set the `CLOSED_AT`\nfield in your `DateTimeFilter`.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CREATED_AT",
              "description": "The time when the order was created, in RFC-3339 format. If you are also\nfiltering for a time range in this query, you must set the `CREATED_AT`\nfield in your `DateTimeFilter`.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT",
              "description": "The time when the order last updated, in RFC-3339 format. If you are also\nfiltering for a time range in this query, you must set the `UPDATED_AT`\nfield in your `DateTimeFilter`.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "SegmentFilter",
          "description": "A query filter to search for buyer-accessible appointment segments by.",
          "fields": null,
          "inputFields": [
            {
              "name": "serviceVariationId",
              "description": "The ID of the CatalogItemVariation object representing the service booked in this segment.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "teamMemberIdFilter",
              "description": "A query filter to search for buyer-accessible appointment segments with service-providing team members matching the specified list of team member IDs.  Supported query expressions are\n- `ANY`: return the appointment segments with team members whose IDs match any member in this list.\n- `NONE`: return the appointment segments with team members whose IDs are not in this list.\n- `ALL`: not supported.\n  \nWhen no expression is specified, any service-providing team member is eligible to fulfill the Booking.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FilterValue",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Shift",
          "description": "A record of the hourly rate, start, and end times for a single work shift\nfor an employee.This might include a record of the start and end times for breaks\ntaken during the shift.\n\nDeprecated at Square API version 2025-05-21. Replaced by Timecard.\nSee the [migration notes](https://developer.squareup.com/docs/labor-api/what-it-does#migration-notes).\nPermissions: TIMECARDS_READ",
          "fields": [
            {
              "name": "breaks",
              "description": "A list of all the paid or unpaid breaks that were taken during this shift.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Break",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "A read-only timestamp in RFC 3339 format; presented in UTC.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "declaredCashTipMoney",
              "description": "The tips declared by the team member for the shift.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "endAt",
              "description": "RFC 3339; shifted to the timezone + offset. Precision up to the minute is\nrespected; seconds are truncated.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The UUID for this object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the location this shift occurred at. The location should be based on\nwhere the employee clocked in.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startAt",
              "description": "RFC 3339; shifted to the location timezone + offset. Precision up to the\nminute is respected; seconds are truncated.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "Describes the working state of the current `Shift`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "ShiftStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMember",
              "description": "The ID of the team member this shift belongs to. Replaced `employee_id` at version \"2020-08-26\".",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TeamMember",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "timezone",
              "description": "The read-only convenience value that is calculated from the location based\non the `location_id`. Format: the IANA timezone database identifier for the\nlocation timezone.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "A read-only timestamp in RFC 3339 format; presented in UTC.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "Used for resolving concurrency issues. The request fails if the version\nprovided does not match the server version at the time of the request. If not provided,\nSquare executes a blind write; potentially overwriting data from another\nwrite.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "wage",
              "description": "Job and pay related information. If the wage is not set on create, it defaults to a wage\nof zero. If the title is not set on create, it defaults to the name of the role the employee\nis assigned to, if any.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ShiftWage",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ShiftConnection",
          "description": "A list of Shifts.\n\nPermissions:TIMECARDS_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of shifts",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Shift",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ShiftFilter",
          "description": "Defines a filter used in a search for `Shift` records.`AND` logic is\nused by Square's servers to apply each filter property specified.\nPermissions: TIMECARDS_SETTINGS_READ",
          "fields": null,
          "inputFields": [
            {
              "name": "endAt",
              "description": "Fetch the `Shift` instances that end in the time range - Inclusive.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TimeRangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "Fetch shifts for the specified ids.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "locationId",
              "description": "Fetch shifts for the specified location.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "Fetch shifts for the specified merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "startAt",
              "description": "Fetch `Shift` instances that start in the time range - Inclusive.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TimeRangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "status",
              "description": "Fetch a `Shift` instance by `Shift.status`.",
              "type": {
                "kind": "ENUM",
                "name": "ShiftStatusInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "teamMemberId",
              "description": "Fetch shifts for the specified team members. Replaced `employee_ids` at version \"2020-08-26\".",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "workday",
              "description": "Fetch the `Shift` instances based on the workday date range.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ShiftWorkdayFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ShiftSort",
          "description": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "createdAt_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "endAt_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "endAt_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startAt_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startAt_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ShiftStatus",
          "description": "Enumerates the possible status of a `Shift`.Deprecated at Square API version 2025-05-21. See the [migration notes](https://developer.squareup.com/docs/labor-api/what-it-does#migration-notes).",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CLOSED",
              "description": "Employee started and ended a work shift.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OPEN",
              "description": "Employee started a work shift and the shift is not complete",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ShiftStatusInput",
          "description": "Specifies the `status` of `Shift` records to be returned.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CLOSED",
              "description": "Shifts that have been started and ended.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OPEN",
              "description": "Shifts that have been started and not ended.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ShiftWage",
          "description": "The hourly wage rate used to compensate an employee for this shift.Deprecated at Square API version 2025-05-21. See the [migration notes](https://developer.squareup.com/docs/labor-api/what-it-does#migration-notes).\nPermissions: TIMECARDS_SETTINGS_READ",
          "fields": [
            {
              "name": "hourlyRate",
              "description": "Can be a custom-set hourly wage or the calculated effective hourly\nwage based on the annual wage and hours worked per week.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "jobId",
              "description": "The id of the job performed during this shift. Square\nlabor-reporting UIs might group shifts together by id.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tipEligible",
              "description": "Whether team members are eligible for tips when working this job.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "title",
              "description": "The name of the job performed during this shift.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ShiftWorkdayFilter",
          "description": "A `Shift` search query filter parameter that sets a range of days that\na `Shift` must start or end in before passing the filter condition.\nPermissions: TIMECARDS_SETTINGS_READ",
          "fields": null,
          "inputFields": [
            {
              "name": "dateRange",
              "description": "Dates for fetching the shifts.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateRangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "defaultTimezone",
              "description": "Location-specific timezones convert workdays to datetime filters.\nEvery location included in the query must have a timezone or this field\nmust be provided as a fallback. Format: the IANA timezone database\nidentifier for the relevant timezone.",
              "type": {
                "kind": "SCALAR",
                "name": "TimeZone",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "matchShiftsBy",
              "description": "The strategy on which the dates are applied.",
              "type": {
                "kind": "ENUM",
                "name": "ShiftWorkdayMatcherInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ShiftWorkdayMatcherInput",
          "description": "Defines the logic used to apply a workday filter.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "END_AT",
              "description": "All shifts that end on or before the specified workday",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERSECTION",
              "description": "All shifts that start between the start and end workdays (inclusive)",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "START_AT",
              "description": "All shifts that start on or after the specified workday",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ShopComponentDetails",
          "description": "Structured data for `Shop` device details, set for DeviceComponents of type `SHOP`.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "orderId",
              "description": "The shop order id.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "SortOrder",
          "description": "The order (e.g., chronological or alphabetical) in which results from a request are returned.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ASC",
              "description": "The results are returned in ascending (e.g., oldest-first or A-Z) order.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DESC",
              "description": "The results are returned in descending (e.g., newest-first or Z-A) order.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "SortOrderTypeInput",
          "description": "The order (e.g., chronological or alphabetical) in which results from a request are returned.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DESC",
              "description": "The results are returned in descending (e.g., newest-first or Z-A) order.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ASC",
              "description": "The results are returned in ascending (e.g., oldest-first or A-Z) order.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SourceApplication",
          "description": "Represents information about the application used to generate a change.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "product",
              "description": "__Read only__ The product type of the application.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "Product",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "applicationId",
              "description": "__Read only__ The Square-assigned ID of the application. This field is used only if the\nproduct type is `EXTERNAL_API`.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "__Read only__ The display name of the application\n(for example, `\"Custom Application\"` or `\"Square POS 4.74 for Android\"`).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SquareAccountPaymentDetails",
          "description": "Permissions: PAYMENTS_READ\n\nAdditional details about Square Account payments.",
          "fields": [
            {
              "name": "errors",
              "description": "Information about errors encountered during the request.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Error",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "paymentSourceToken",
              "description": "Unique identifier for the payment source used for this payment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "SquareAccountPaymentDetailsFilterInput",
          "description": "Input type used to specify filters on `SquareAccountPaymentDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "errors",
              "description": "Used to filter on the `errors` field:\n\n> Information about errors encountered during the request.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ErrorFieldsListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "paymentSourceToken",
              "description": "Used to filter on the `paymentSourceToken` field:\n\n> Unique identifier for the payment source used for this payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SquareCapitalPaymentDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of capital merchant cash advance (MCA) assessments.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment associated with the MCA assessment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "SquareCapitalPaymentDetailsFilterInput",
          "description": "Input type used to specify filters on `SquareCapitalPaymentDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment associated with the MCA assessment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SquareCapitalReversedPaymentDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of capital merchant cash advance (MCA) assessment refunds.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment associated with the MCA assessment refund.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "SquareCapitalReversedPaymentDetailsFilterInput",
          "description": "Input type used to specify filters on `SquareCapitalReversedPaymentDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment associated with the MCA assessment refund.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SquareGiftCard",
          "description": "Represents a Square gift card.\nPermissions: GIFTCARDS_READ",
          "fields": [
            {
              "name": "balanceMoney",
              "description": "The current gift card balance. This balance is always greater than or equal to zero.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The timestamp when the gift card was created, in RFC 3339 format. \nIn the case of a digital gift card, it is the time when you create a card \n(using the Square Point of Sale application, Seller Dashboard, or Gift Cards API).  \nIn the case of a plastic gift card, it is the time when Square associates the card with the \nseller at the time of activation.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customers",
              "description": "The IDs of the customer profiles to whom this gift card is linked.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Customer",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "gan",
              "description": "The gift card account number (GAN). Buyers can use the GAN to make purchases or check \nthe gift card balance.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ganSource",
              "description": "The source that generated the gift card account number (GAN). The default value is `SQUARE`.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "GiftCardGANSource",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The Square-assigned ID of the gift card.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "The current gift card state.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "GiftCardStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The gift card type.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "GiftCardType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SquareGiftCardConnection",
          "description": "A list of GiftCards.\nPermissions: GIFTCARDS_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of Gift Card.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "SquareGiftCard",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "SquareHardwareType",
          "description": "An enum for SquareHardwareType. Set only for Square Hardware devices.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "SQUARE_HARDWARE_TYPE_HANDHELD_GEN1_V1",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_REGISTER_GEN1_V1",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_REGISTER_GEN1_V2",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_REGISTER_GEN1_V3",
              "description": null,
              "isDeprecated": true,
              "deprecationReason": "Deprecated for Gen2 V1 instead."
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_REGISTER_GEN2_V1",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_STAND_GEN1_V1",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_STAND_GEN1_V2",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_STAND_GEN1_V3",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_STAND_GEN1_V4",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_STAND_GEN1_V5",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_STAND_GEN2_V1",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_STAND_GEN2_V2",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_TERMINAL_GEN1_V1",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_TERMINAL_GEN1_V2",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_TERMINAL_GEN2_V1",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "SquareHardwareTypeFilterInput",
          "description": "Input type used to specify filters on `SquareHardwareType` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `SquareHardwareTypeFilterInput` input because of\ncollisions between key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "SquareHardwareTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "SquareHardwareTypeFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "SquareHardwareTypeInput",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SquareHardwareTypeFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "SquareHardwareTypeInput",
          "description": "An enum for SquareHardwareType. Set only for Square Hardware devices.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "SQUARE_HARDWARE_TYPE_HANDHELD_GEN1_V1",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_REGISTER_GEN1_V1",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_REGISTER_GEN1_V2",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_REGISTER_GEN1_V3",
              "description": null,
              "isDeprecated": true,
              "deprecationReason": "Deprecated for Gen2 V1 instead."
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_REGISTER_GEN2_V1",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_STAND_GEN1_V1",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_STAND_GEN1_V2",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_STAND_GEN1_V3",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_STAND_GEN1_V4",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_STAND_GEN1_V5",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_STAND_GEN2_V1",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_STAND_GEN2_V2",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_TERMINAL_GEN1_V1",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_TERMINAL_GEN1_V2",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_TERMINAL_GEN2_V1",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SQUARE_HARDWARE_TYPE_UNKNOWN",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SquareOneEligibility",
          "description": "SquareOneEligibility represents a seller's eligibility for Square One experiments.",
          "fields": [
            {
              "name": "eligible",
              "description": "\"true\" if the seller is eligible for the current running experiment or was eligible for an old experiment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "eligiblePlanGroupToken",
              "description": "The Sub2 plan group token associated with the seller's assigned experiment variant.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "flagName",
              "description": "The name of the Optimizely flag the seller is eligible for - it's conceptually the same as \"the current running experiment\".",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ineligibilityReason",
              "description": "The reason why the seller is not eligible for any Square One experiment",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SquarePayrollTransferDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of a payroll payment that was transferred to a team member’s bank account.",
          "fields": [
            {
              "name": "paymentId",
              "description": "The ID of the payment associated with this activity.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "SquarePayrollTransferDetailsFilterInput",
          "description": "Input type used to specify filters on `SquarePayrollTransferDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> The ID of the payment associated with this activity.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SquarePayrollTransferReversedDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of a payroll payment to a team member’s bank account that was deposited back to the seller’s account by Square.",
          "fields": [
            {
              "name": "paymentId",
              "description": "The ID of the payment associated with this activity.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "SquarePayrollTransferReversedDetailsFilterInput",
          "description": "Input type used to specify filters on `SquarePayrollTransferReversedDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> The ID of the payment associated with this activity.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SquareSubscription",
          "description": "Represents a subscription purchased by a customer.For more information, see\n[Manage Subscriptions](https://developer.squareup.com/docs/subscriptions-api/manage-subscriptions).\nPermissions: SUBSCRIPTIONS_READ",
          "fields": [
            {
              "name": "actions",
              "description": "The list of scheduled actions on this subscription. It is set only in the response from  \n[RetrieveSubscription](api-endpoint:Subscriptions-RetrieveSubscription) with the query parameter\nof `include=actions` or from \n[SearchSubscriptions](api-endpoint:Subscriptions-SearchSubscriptions) with the input parameter \nof `include:[\"actions\"]`.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "SubscriptionAction",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "canceledDate",
              "description": "The `YYYY-MM-DD`-formatted date (for example, 2013-01-15) to cancel the subscription, \nwhen the subscription status changes to `CANCELED` and the subscription billing stops.\n  \nIf this field is not set, the subscription ends according its subscription plan.\n  \nThis field cannot be updated, other than being cleared.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "card",
              "description": "The ID of the [subscriber's](entity:Customer) card\nused to charge for the subscription.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CardOnFile",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "chargedThroughDate",
              "description": "The `YYYY-MM-DD`-formatted date up to when the subscriber is invoiced for the\nsubscription.\n  \nAfter the invoice is sent for a given billing period,\nthis date will be the last day of the billing period.\nFor example,\nsuppose for the month of May a subscriber gets an invoice\n(or charged the card) on May 1. For the monthly billing scenario,\nthis date is then set to May 31.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The timestamp when the subscription was created, in RFC 3339 format.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customer",
              "description": "The ID of the subscribing customer profile.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Customer",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The Square-assigned ID of the subscription.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "invoiceIds",
              "description": "The IDs of the invoices created for the\nsubscription, listed in order when the invoices were created\n(newest invoices appear first).",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the location associated with the subscription.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "monthlyBillingAnchorDate",
              "description": "The day of the month on which the subscription will issue invoices and publish orders.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "phases",
              "description": "array of phases for this subscription",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Phase",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "planVariationId",
              "description": "The ID of the subscribed-to subscription plan variation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "priceOverrideMoney",
              "description": "A custom price which overrides the cost of a subscription plan variation with `STATIC` pricing.\nThis field does not affect itemized subscriptions with `RELATIVE` pricing. Instead, \nyou should edit the Subscription's [order template](https://developer.squareup.com/docs/subscriptions-api/manage-subscriptions#phases-and-order-templates).",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "source",
              "description": "The origination details of the subscription.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "SubscriptionSource",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startDate",
              "description": "The `YYYY-MM-DD`-formatted date (for example, 2013-01-15) to start the subscription.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "The current status of the subscription.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "SubscriptionStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "taxPercentage",
              "description": "The tax amount applied when billing the subscription. The\npercentage is expressed in decimal form, using a `'.'` as the decimal\nseparator and without a `'%'` sign. For example, a value of `7.5`\ncorresponds to 7.5%.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "timezone",
              "description": "Timezone that will be used in date calculations for the subscription.\nDefaults to the timezone of the location based on `location_id`.\nFormat: the IANA Timezone Database identifier for the location timezone (for example, `America/Los_Angeles`).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "The version of the object. When updating an object, the version\nsupplied must match the version in the database, otherwise the write will\nbe rejected as conflicting.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "StandComponentDetails",
          "description": "Structured data for `Stand` peripheral device details, set for DeviceComponents of type `STAND`.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "standVersion",
              "description": "The version of the stand.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "StringFilterInput",
          "description": "Input type used to specify filters on `String` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "StringFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "StringListElementFilterInput",
          "description": "Input type used to specify filters on elements of a `[String]` field.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "StringListElementFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "StringListFilterInput",
          "description": "Input type used to specify filters on `[String]` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "allOf",
              "description": "Matches records where all of the provided sub-filters evaluate to true. This works just like an AND operator in SQL.\n\nNote: multiple filters are automatically ANDed together. This is only needed when you have multiple filters that can't\nbe provided on a single `StringListFilterInput` input because of collisions\nbetween key names. For example, if you want to AND multiple\nOR'd sub-filters (the equivalent of (A OR B) AND (C OR D)), you could do allOf: [{anyOf: [...]}, {anyOf: [...]}].\n\nWhen `null` or an empty list is passed, matches all documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "StringListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "StringListFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "anySatisfy",
              "description": "Matches records where any of the list elements match the provided sub-filter.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringListElementFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringListFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SubscriptionAction",
          "description": "Represents an action as a pending change to a subscription.\nPermissions: SUBSCRIPTIONS_READ",
          "fields": [
            {
              "name": "effectiveDate",
              "description": "The `YYYY-MM-DD`-formatted date when the action occurs on the subscription.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The ID of an action scoped to a subscription.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "monthlyBillingAnchorDate",
              "description": "The new billing anchor day value, for a `CHANGE_BILLING_ANCHOR_DATE` action.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "newPlanVariationId",
              "description": "The target subscription plan variation that a subscription switches to, for a `SWAP_PLAN` action.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "phases",
              "description": "A list of Phases, to pass phase-specific information used in the swap.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Phase",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of the action.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "SubscriptionActionType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "SubscriptionActionType",
          "description": "Supported types of an action as a pending change to a subscription.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CANCEL",
              "description": "The action to execute a scheduled cancellation of a subscription.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHANGE_BILLING_ANCHOR_DATE",
              "description": "A billing anchor date change action.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAUSE",
              "description": "The action to execute a scheduled pause of a subscription.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RESUME",
              "description": "The action to execute a scheduled resumption of a subscription.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SWAP_PLAN",
              "description": "The action to execute a scheduled swap of a subscription plan in a subscription.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "SubscriptionCadence",
          "description": "Determines the billing cadence of a Subscription",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DAILY",
              "description": "Once per day",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WEEKLY",
              "description": "Once per week",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EVERY_TWO_WEEKS",
              "description": "Every two weeks",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "THIRTY_DAYS",
              "description": "Once every 30 days",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SIXTY_DAYS",
              "description": "Once every 60 days",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NINETY_DAYS",
              "description": "Once every 90 days",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MONTHLY",
              "description": "Once per month",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EVERY_TWO_MONTHS",
              "description": "Once every two months",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "QUARTERLY",
              "description": "Once every three months",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EVERY_FOUR_MONTHS",
              "description": "Once every four months",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EVERY_SIX_MONTHS",
              "description": "Once every six months",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ANNUAL",
              "description": "Once per year",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EVERY_TWO_YEARS",
              "description": "Once every two years",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SubscriptionConnection",
          "description": "A list of Subscription.\nPermissions:SUBSCRIPTIONS_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of Subscription Event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "SquareSubscription",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SubscriptionEvent",
          "description": "Describes changes to a subscription and the subscription status.\nPermissions: SUBSCRIPTIONS_READ",
          "fields": [
            {
              "name": "effectiveDate",
              "description": "The `YYYY-MM-DD`-formatted date (for example, 2013-01-15) when the subscription event occurred.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The ID of the subscription event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "info",
              "description": "Additional information about the subscription event.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "SubscriptionEventInfo",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "monthlyBillingAnchorDate",
              "description": "The day-of-the-month the billing anchor date was changed to, if applicable.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "phases",
              "description": "A list of Phases, to pass phase-specific information used in the swap.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Phase",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "planVariationId",
              "description": "The ID of the subscription plan variation associated with the subscription.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subscriptionEventType",
              "description": "Type of the subscription event.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "SubscriptionEventSubscriptionEventType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SubscriptionEventConnection",
          "description": "A list of Subscription Event.\nPermissions:SUBSCRIPTIONS_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of Subscription event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "SubscriptionEvent",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "SubscriptionEventFilter",
          "description": "Represents a set of query expressions (filters) to narrow the scope of targeted subscription events\nreturned\nPermissions:SUBSCRIPTIONS_READ",
          "fields": null,
          "inputFields": [
            {
              "name": "merchantId",
              "description": "The Square-assigned ID of the merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "subscriptionId",
              "description": "The ID of the subscription events belong to.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SubscriptionEventInfo",
          "description": "Provides information about the subscription event.\nPermissions: SUBSCRIPTIONS_READ",
          "fields": [
            {
              "name": "code",
              "description": "An info code indicating the subscription event that occurred.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "SubscriptionEventInfoCode",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "detail",
              "description": "A human-readable explanation for the event.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "SubscriptionEventInfoCode",
          "description": "Supported info codes of a subscription event.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CUSTOMER_DELETED",
              "description": "The subscribing customer profile has been deleted.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUSTOMER_NO_EMAIL",
              "description": "The subscribing customer does not have an email.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CUSTOMER_NO_NAME",
              "description": "The subscribing customer does not have a name.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOCATION_CANNOT_ACCEPT_PAYMENT",
              "description": "The location cannot accept payments.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOCATION_NOT_ACTIVE",
              "description": "The location is not active.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "USER_PROVIDED",
              "description": "User-provided detail.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "SubscriptionEventSubscriptionEventType",
          "description": "Supported types of an event occurred to a subscription.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "BILLING_ANCHOR_DATE_CHANGED",
              "description": "The billing anchor date was changed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEACTIVATE_SUBSCRIPTION",
              "description": "The subscription was deactivated",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAUSE_SUBSCRIPTION",
              "description": "The subscription was paused.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PLAN_CHANGE",
              "description": "The subscription plan was changed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RESUME_SUBSCRIPTION",
              "description": "The subscription was resumed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "START_SUBSCRIPTION",
              "description": "The subscription was started.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "STOP_SUBSCRIPTION",
              "description": "The subscription was stopped.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "SubscriptionFilter",
          "description": "Represents a set of query expressions (filters) to narrow the scope of targeted subscriptions returned by \nthe [SearchSubscriptions](api-endpoint:Subscriptions-SearchSubscriptions) endpoint.",
          "fields": null,
          "inputFields": [
            {
              "name": "customerId",
              "description": "A filter to select subscriptions based on the subscribing customer IDs.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "locationId",
              "description": "A filter to select subscriptions based on the location.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "sourceName",
              "description": "A filter to select subscriptions based on the source application.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicStringFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "subscriptionId",
              "description": "The ID of the subscription to retrieve.",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SubscriptionPhase",
          "description": "Describes a phase in a subscription plan variation.For more information, see [Subscription Plans and Variations](https://developer.squareup.com/docs/subscriptions-api/plans-and-variations).\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "uid",
              "description": "The Square-assigned ID of the subscription phase. This field cannot be changed after a `SubscriptionPhase` is created.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "UID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "cadence",
              "description": "The billing cadence of the phase. For example, weekly or monthly. This field cannot be changed after a `SubscriptionPhase` is created.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "SubscriptionCadence",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "periods",
              "description": "The number of `cadence`s the phase lasts. If not set, the phase never ends. Only the last phase can be indefinite. This field cannot be changed after a `SubscriptionPhase` is created.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "recurringPriceMoney",
              "description": "The amount to bill for each `cadence`. Failure to specify this field results in a `MISSING_REQUIRED_PARAMETER` error at runtime.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pricing",
              "description": "The subscription pricing.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "SubscriptionPricing",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ordinal",
              "description": "The position this phase appears in the sequence of phases defined for the plan, indexed from 0. This field cannot be changed after a `SubscriptionPhase` is created.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SubscriptionPricing",
          "description": "Describes the pricing for the subscription.\nPermissions: ITEMS_READ",
          "fields": [
            {
              "name": "type",
              "description": "RELATIVE or STATIC",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "SubscriptionPricingType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "discountIds",
              "description": "The ids of the discount catalog objects",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "priceMoney",
              "description": "The price of the subscription, if STATIC",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "SubscriptionPricingType",
          "description": "Determines the pricing of a Subscription",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "STATIC",
              "description": "Static pricing",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RELATIVE",
              "description": "Relative pricing",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "SubscriptionSource",
          "description": "The origination details of the subscription.\nPermissions: SUBSCRIPTIONS_READ",
          "fields": [
            {
              "name": "name",
              "description": "The name used to identify the place (physical or digital) that\na subscription originates. If unset, the name defaults to the name\nof the application that created the subscription.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "SubscriptionStatus",
          "description": "Supported subscription statuses.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ACTIVE",
              "description": "The subscription is active.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CANCELED",
              "description": "The subscription is canceled.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEACTIVATED",
              "description": "The subscription is deactivated.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PAUSED",
              "description": "The subscription is paused.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PENDING",
              "description": "The subscription is pending to start in the future.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "TaxCalculationPhase",
          "description": "When to calculate the taxes due on a cart.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "TAX_SUBTOTAL_PHASE",
              "description": "The fee is calculated based on the payment's subtotal.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TAX_TOTAL_PHASE",
              "description": "The fee is calculated based on the payment's total.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "TaxInclusionType",
          "description": "Whether to the tax amount should be additional to or included in the CatalogItem price.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ADDITIVE",
              "description": "The tax is an additive tax. The tax amount is added on top of the\nCatalogItemVariation price. For example, a $1.00 item with a 10% additive\ntax would have a total cost to the buyer of $1.10.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INCLUSIVE",
              "description": "The tax is an inclusive tax. The tax amount is included in the\nCatalogItemVariation price. For example, a $1.00 item with a 10% inclusive\ntax would have a total cost to the buyer of $1.00, with $0.91 (91 cents) of\nthat total being the cost of the item and $0.09 (9 cents) being tax.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TaxOnFeeDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of tax paid on fee amounts.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment on which the tax is applied.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "TaxOnFeeDetailsFilterInput",
          "description": "Input type used to specify filters on `TaxOnFeeDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment on which the tax is applied.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TeamMember",
          "description": "A record representing an individual team member for a business.\n\nPermissions:EMPLOYEES_READ",
          "fields": [
            {
              "name": "id",
              "description": "The Square-issued ID of the team member.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TeamMemberBookingProfile",
          "description": "The booking profile of a seller's team member, including the team member's ID, display name, description and whether the team member can be booked as a service provider.\nPermissions: APPOINTMENTS_BUSINESS_SETTINGS_READ",
          "fields": [
            {
              "name": "description",
              "description": "The description of the team member.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "displayName",
              "description": "The display name of the team member.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isBookable",
              "description": "Indicates whether the team member can be booked through the Bookings API or the seller's online booking channel or site (`true`) or not (`false`).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "profileImageUrl",
              "description": "The URL of the team member's image for the bookings profile.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMemberId",
              "description": "The ID of the TeamMember object for the team member associated with the booking profile.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TeamMemberBookingProfileConnection",
          "description": "Lists booking profiles for team members.\nPermissions:APPOINTMENTS_BUSINESS_SETTINGS_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "Lists booking profiles for team members.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "TeamMemberBookingProfile",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "TeamMemberBookingProfileFilter",
          "description": "Represents a set of query expressions (filters) to narrow the scope of targeted team member\nbooking profile returned\nPermissions:APPOINTMENTS_BUSINESS_SETTINGS_READ",
          "fields": null,
          "inputFields": [
            {
              "name": "bookableOnly",
              "description": "Indicates whether to include only bookable team members in the returned result (true) or not (false).",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "locationId",
              "description": "The location for which to retrieve bookings. If this is not set, all locations' bookings are retrieved.",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "The Square-assigned ID of the merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "teamMemberId",
              "description": "A non-empty list of IDs of team members whose booking profiles you want to retrieve.\n\nMin Length 1 Max Length 10",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TeamMemberWage",
          "description": "Job and wage information for a team member.This convenience object provides details needed to specify the `wage`\nfield for a timecard.\nPermissions: EMPLOYEES_READ",
          "fields": [
            {
              "name": "hourlyRate",
              "description": "Can be a custom-set hourly wage or the calculated effective hourly\nwage based on the annual wage and hours worked per week.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Money",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The UUID for this object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "jobId",
              "description": "An identifier for the job that this wage relates to.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMember",
              "description": "The `TeamMember` that this wage is assigned to.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TeamMember",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tipEligible",
              "description": "Whether team members are eligible for tips when working this job.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "title",
              "description": "The job title that this wage relates to.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TeamMemberWageConnection",
          "description": "A list of TeamMemberWages.\n\nPermissions:EMPLOYEES_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of shifts",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "TeamMemberWage",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "TeamMemberWageFilter",
          "description": "TeamMemberWageFilter is used for filtering a query with TeamMemberWage",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Fetch TeamMemberWages for the specified ids.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "Fetch TeamMemberWages for the specified merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "teamMemberId",
              "description": "Fetch TeamMemberWages for the specified team member.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "TextFilterInput",
          "description": "Input type used to specify filters on `String` fields that have been indexed for full text search.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "TextFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "matchesPhrase",
              "description": "Matches records where the field value has a phrase matching the provided phrase using\nfull text search. This is stricter than `matchesQuery`: all terms must match\nand be in the same order as the provided phrase.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MatchesPhraseFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "matchesQuery",
              "description": "Matches records where the field value matches the provided query using full text search.\nThis is more lenient than `matchesPhrase`: the order of terms is ignored, and,\nby default, only one search term is required to be in the field value.\n\nWhen `null` is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MatchesQueryFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TextFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ThirdPartyFeeDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of fees collected by a third-party platform.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment related to the third-party fee.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ThirdPartyFeeDetailsFilterInput",
          "description": "Input type used to specify filters on `ThirdPartyFeeDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment related to the third-party fee.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "ThirdPartyFeeRefundDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of refunded fees from a third-party platform.",
          "fields": [
            {
              "name": "paymentId",
              "description": "Unique ID for the payment related to the third-party fee refund.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ThirdPartyFeeRefundDetailsFilterInput",
          "description": "Input type used to specify filters on `ThirdPartyFeeRefundDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> Unique ID for the payment related to the third-party fee refund.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Timecard",
          "description": "A record of the hourly rate, start, and end times for a timecard.\nThis might include a record of the start and end times for breaks taken during the shift.\nPermissions: TIMECARDS_READ",
          "fields": [
            {
              "name": "breaks",
              "description": "The breaks taken during this timecard.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Break",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "A read-only timestamp in RFC 3339 format; presented in UTC.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "endAt",
              "description": "RFC 3339; shifted to the timezone + offset. Precision up to the minute is\nrespected; seconds are truncated.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The UUID for this object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "job",
              "description": "The ID of the job this timecard is for.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Job",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The ID of the location this timecard is for.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Location",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startAt",
              "description": "RFC 3339; shifted to the location timezone + offset. Precision up to the\nminute is respected; seconds are truncated.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "The status of the timecard.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "TimecardStatus",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamMember",
              "description": "The ID of the team member this timecard belongs to.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TeamMember",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "timezone",
              "description": "The read-only convenience value that is calculated from the location based\non the `location_id`. Format: the IANA timezone database identifier for the\nlocation timezone.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "A read-only timestamp in RFC 3339 format; presented in UTC.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "Used for resolving concurrency issues. The request fails if the version\nprovided does not match the server version at the time of the request.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TimecardConnection",
          "description": "A list of Timecards.\n\nPermissions:TIMECARDS_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of timecards",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Timecard",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "TimecardFilter",
          "description": "Defines a filter used in a search for `Timecard` records.`AND` logic is\nused by Square's servers to apply each filter property specified.\nPermissions: TIMECARDS_SETTINGS_READ",
          "fields": null,
          "inputFields": [
            {
              "name": "endAt",
              "description": "Fetch the `Timecard` instances that end in the time range - Inclusive.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TimeRangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "id",
              "description": "Fetch timecards for the specified ids.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "locationId",
              "description": "Fetch timecards for the specified location.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "Fetch timecards for the specified merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "startAt",
              "description": "Fetch `Timecard` instances that start in the time range - Inclusive.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TimeRangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "status",
              "description": "Fetch a `Timecard` instance by `Timecard.status`.",
              "type": {
                "kind": "ENUM",
                "name": "TimecardStatusInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "teamMemberId",
              "description": "Fetch timecards for the specified team members.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "workday",
              "description": "Fetch the `Timecard` instances based on the workday date range.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TimecardWorkdayFilter",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "TimecardSort",
          "description": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "createdAt_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "endAt_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "endAt_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startAt_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startAt_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt_ASC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt_DESC",
              "description": null,
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "TimecardStatus",
          "description": "Enumerates the possible status of a `Timecard`.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CLOSED",
              "description": "Employee started and ended a work timecard.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OPEN",
              "description": "Employee started a work timecard and the timecard is not complete",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "TimecardStatusInput",
          "description": "Specifies the `status` of `Timecard` records to be returned.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CLOSED",
              "description": "Timecards that have been started and ended.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OPEN",
              "description": "Timecards that have been started and not ended.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "TimecardWorkdayFilter",
          "description": "A `Timecard` search query filter parameter that sets a range of days that\na `Timecard` must start or end in before passing the filter condition.\nPermissions: TIMECARDS_SETTINGS_READ",
          "fields": null,
          "inputFields": [
            {
              "name": "dateRange",
              "description": "Dates for fetching the timecards.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "DateRangeFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "defaultTimezone",
              "description": "Location-specific timezones convert workdays to datetime filters.\nEvery location included in the query must have a timezone or this field\nmust be provided as a fallback. Format: the IANA timezone database\nidentifier for the relevant timezone.",
              "type": {
                "kind": "SCALAR",
                "name": "TimeZone",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "matchShiftsBy",
              "description": "The strategy on which the dates are applied.",
              "type": {
                "kind": "ENUM",
                "name": "TimecardWorkdayMatcherInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "TimecardWorkdayMatcherInput",
          "description": "Defines the logic used to apply a workday filter.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "END_AT",
              "description": "All timecards that end on or before the specified workday",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERSECTION",
              "description": "All timecards that start between the start and end workdays (inclusive)",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "START_AT",
              "description": "All timecards that start on or after the specified workday",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "TimeRangeFilter",
          "description": "Input type used to specify filters on TimeRange.",
          "fields": null,
          "inputFields": [
            {
              "name": "endAt",
              "description": "A datetime value in RFC 3339 format indicating when the time range ends.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "startAt",
              "description": "A datetime value in RFC 3339 format indicating when the time range starts.",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "TimeZone",
          "description": "An [IANA Timezone identifier](https://www.iana.org/time-zones).",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "TypeRefundDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of a refund for an existing card payment.",
          "fields": [
            {
              "name": "paymentId",
              "description": "Unique ID for the payment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "refundId",
              "description": "Unique ID for the refund.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "TypeRefundDetailsFilterInput",
          "description": "Input type used to specify filters on `TypeRefundDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> Unique ID for the payment.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "refundId",
              "description": "Used to filter on the `refundId` field:\n\n> Unique ID for the refund.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "UID",
          "description": "An ID for a field that is only unique within the context of its object rather than globally.\"",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "UndoGiftCardLoadFeeRefundDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of a reversed refund for a fee charged during the sale or reload of a gift card.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment associated with this activity.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UndoGiftCardLoadFeeRefundDetailsFilterInput",
          "description": "Input type used to specify filters on `UndoGiftCardLoadFeeRefundDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment associated with this activity.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "UndoProcessingFeeRefundDetails",
          "description": "Permissions: PAYOUTS_READ\n\nDetails of a reversed processing fee for a payment refund in a Gross Settlement payment.",
          "fields": [
            {
              "name": "paymentId",
              "description": "ID of the payment associated with this activity.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UndoProcessingFeeRefundDetailsFilterInput",
          "description": "Input type used to specify filters on `UndoProcessingFeeRefundDetails` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "paymentId",
              "description": "Used to filter on the `paymentId` field:\n\n> ID of the payment associated with this activity.\n\nWhen `null` or an empty object is passed, matches all documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IDFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Url",
          "description": "A Url scalar",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "UrlFilterInput",
          "description": "Input type used to specify filters on `Url` fields.\n\nWill match all documents if passed as an empty object (or as `null`).",
          "fields": null,
          "inputFields": [
            {
              "name": "anyOf",
              "description": "Matches records where any of the provided sub-filters evaluate to true.\nThis works just like an OR operator in SQL.\n\nWhen `null` is passed, matches all documents.\nWhen an empty list is passed, this part of the filter matches no documents.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UrlFilterInput",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "equalToAnyOf",
              "description": "Matches records where the field value is equal to any of the provided values.\nThis works just like an IN operator in SQL.\n\nWhen `null` is passed, matches all documents. When an empty list is passed,\nthis part of the filter matches no documents. When `null` is passed in the\nlist, this part of the filter matches records where the field value is `null`.",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Url",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "not",
              "description": "Matches records where the provided sub-filter evaluates to false.\nThis works just like a NOT operator in SQL.\n\nWhen `null` or an empty object is passed, matches no documents.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UrlFilterInput",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "USBInterfaceComponentDetails",
          "description": "Structured data for a `USB` interface, set for DeviceComponents of type `USB_INTERFACE`.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "portNumber",
              "description": "The port number being used to connect the peripheral device.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "Weekday",
          "description": "The days of the week.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "FRI",
              "description": "Friday",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MON",
              "description": "Monday",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SAT",
              "description": "Saturday",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUN",
              "description": "Sunday",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "THU",
              "description": "Thursday",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "TUE",
              "description": "Tuesday",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WED",
              "description": "Wednesday",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "WiFiComponentDetails",
          "description": "Structured data for a `WiFi` interface, set for DeviceComponents of type `WIFI`.\n\nPermissions: DEVICES_READ.",
          "fields": [
            {
              "name": "ipAddressV4",
              "description": "The string representation of the device's IPv4 address.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "secureConnection",
              "description": "The security protocol for a secure connection (e.g. WPA2). None provided if the connection is unsecured.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ssid",
              "description": "The name of the connected WiFi network.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "wifiActive",
              "description": "A boolean to represent whether the WiFi interface is currently active.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "wifiSignalStrength",
              "description": "A representation of signal strength of the WiFi network connection.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeviceSignalStrengthMeasurement",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "WorkweekConfig",
          "description": "Sets the day of the week and hour of the day that a business starts a\nworkweek.This is used to calculate overtime pay.\nPermissions: TIMECARDS_SETTINGS_READ",
          "fields": [
            {
              "name": "createdAt",
              "description": "A read-only timestamp in RFC 3339 format; presented in UTC.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The UUID for this object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "merchantId",
              "description": "The Square-issued ID of the merchant.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startOfDayLocalTime",
              "description": "The local time at which a business week starts. Represented as a\nstring in `HH:MM` format (`HH:MM:SS` is also accepted, but seconds are\ntruncated).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startOfWeek",
              "description": "The day of the week on which a business week starts for\ncompensation purposes.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "Weekday",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "A read-only timestamp in RFC 3339 format; presented in UTC.\n  \nExamples for January 25th, 2020 6:25:34pm Pacific Standard Time:\n  \nUTC:  2020-01-26T02:25:34Z\n  \nPacific Standard Time with UTC offset:  2020-01-25T18:25:34-08:00",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "version",
              "description": "Used for resolving concurrency issues. The request fails if the version\nprovided does not match the server version at the time of the request. If not provided,\nSquare executes a blind write; potentially overwriting data from another\nwrite.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "JsonSafeLong",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "WorkweekConfigConnection",
          "description": "A list of WorkweekConfigs.\n\nPermissions:TIMECARDS_SETTINGS_READ",
          "fields": [
            {
              "name": "nodes",
              "description": "List of shifts",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "WorkweekConfig",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Provides pagination-related information.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "WorkweekConfigFilter",
          "description": "WorkweekConfigFilter is used for filtering a query with WorkweekConfig",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Fetch WorkweekConfig for the specified ids.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BasicIDFilter",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "merchantId",
              "description": "Fetch WorkweekConfig for the specified merchant.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BasicIDFilter",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        }
      ],
      "directives": [
        {
          "name": "skip",
          "description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "args": [
            {
              "name": "if",
              "description": "Skipped when true.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ]
        },
        {
          "name": "include",
          "description": "Directs the executor to include this field or fragment only when the `if` argument is true.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "args": [
            {
              "name": "if",
              "description": "Included when true.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ]
        },
        {
          "name": "deprecated",
          "description": "Marks an element of a GraphQL schema as no longer supported.",
          "locations": [
            "FIELD_DEFINITION",
            "ARGUMENT_DEFINITION",
            "INPUT_FIELD_DEFINITION",
            "ENUM_VALUE"
          ],
          "args": [
            {
              "name": "reason",
              "description": "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": "\"No longer supported\""
            }
          ]
        },
        {
          "name": "specifiedBy",
          "description": "Exposes a URL that specifies the behavior of this scalar.",
          "locations": [
            "SCALAR"
          ],
          "args": [
            {
              "name": "url",
              "description": "The URL that specifies the behavior of this scalar.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ]
        },
        {
          "name": "defer",
          "description": null,
          "locations": [
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "args": [
            {
              "name": "label",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "if",
              "description": null,
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "defaultValue": "true"
            }
          ]
        }
      ]
    }
  }
}